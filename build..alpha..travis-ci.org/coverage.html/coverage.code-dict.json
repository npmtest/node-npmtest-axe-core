{"/home/travis/build/npmtest/node-npmtest-axe-core/test.js":"/* istanbul instrument in package npmtest_axe_core */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-axe-core/lib.npmtest_axe_core.js":"/* istanbul instrument in package npmtest_axe_core */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_axe_core = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_axe_core = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-axe-core/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-axe-core && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_axe_core */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_axe_core\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_axe_core.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_axe_core.rollup.js'] =\n            local.assetsDict['/assets.npmtest_axe_core.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_axe_core.__dirname + '/lib.npmtest_axe_core.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/axe.js":"(function axeFunction(window) {\n  var global = window;\n  var document = window.document;\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  var axe = axe || {};\n  axe.version = '2.2.0';\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      'use strict';\n      return axe;\n    });\n  }\n  if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports && typeof axeFunction.toString === 'function') {\n    axe.source = '(' + axeFunction.toString() + ')(this, this.document);';\n    module.exports = axe;\n  }\n  if (typeof window.getComputedStyle === 'function') {\n    window.axe = axe;\n  }\n  var commons;\n  function SupportError(error) {\n    this.name = 'SupportError';\n    this.cause = error.cause;\n    this.message = '`' + error.cause + '` - feature unsupported in your environment.';\n    if (error.ruleId) {\n      this.ruleId = error.ruleId;\n      this.message += ' Skipping ' + this.ruleId + ' rule.';\n    }\n    this.stack = new Error().stack;\n  }\n  SupportError.prototype = Object.create(Error.prototype);\n  SupportError.prototype.constructor = SupportError;\n  'use strict';\n  var utils = axe.utils = {};\n  'use strict';\n  var helpers = {};\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function getDefaultConfiguration(audit) {\n    'use strict';\n    var config;\n    if (audit) {\n      config = axe.utils.clone(audit);\n      config.commons = audit.commons;\n    } else {\n      config = {};\n    }\n    config.reporter = config.reporter || null;\n    config.rules = config.rules || [];\n    config.checks = config.checks || [];\n    config.data = Object.assign({\n      checks: {},\n      rules: {}\n    }, config.data);\n    return config;\n  }\n  function unpackToObject(collection, audit, method) {\n    'use strict';\n    var i, l;\n    for (i = 0, l = collection.length; i < l; i++) {\n      audit[method](collection[i]);\n    }\n  }\n  function Audit(audit) {\n    this.brand = 'axe';\n    this.application = 'axeAPI';\n    this.tagExclude = [ 'experimental' ];\n    this.defaultConfig = audit;\n    this._init();\n  }\n  Audit.prototype._init = function() {\n    var audit = getDefaultConfiguration(this.defaultConfig);\n    axe.commons = commons = audit.commons;\n    this.reporter = audit.reporter;\n    this.commands = {};\n    this.rules = [];\n    this.checks = {};\n    unpackToObject(audit.rules, this, 'addRule');\n    unpackToObject(audit.checks, this, 'addCheck');\n    this.data = {};\n    this.data.checks = audit.data && audit.data.checks || {};\n    this.data.rules = audit.data && audit.data.rules || {};\n    this.data.failureSummaries = audit.data && audit.data.failureSummaries || {};\n    this._constructHelpUrls();\n  };\n  Audit.prototype.registerCommand = function(command) {\n    'use strict';\n    this.commands[command.id] = command.callback;\n  };\n  Audit.prototype.addRule = function(spec) {\n    'use strict';\n    if (spec.metadata) {\n      this.data.rules[spec.id] = spec.metadata;\n    }\n    var rule = this.getRule(spec.id);\n    if (rule) {\n      rule.configure(spec);\n    } else {\n      this.rules.push(new Rule(spec, this));\n    }\n  };\n  Audit.prototype.addCheck = function(spec) {\n    'use strict';\n    var metadata = spec.metadata;\n    if ((typeof metadata === 'undefined' ? 'undefined' : _typeof(metadata)) === 'object') {\n      this.data.checks[spec.id] = metadata;\n      if (_typeof(metadata.messages) === 'object') {\n        Object.keys(metadata.messages).filter(function(prop) {\n          return metadata.messages.hasOwnProperty(prop) && typeof metadata.messages[prop] === 'string';\n        }).forEach(function(prop) {\n          if (metadata.messages[prop].indexOf('function') === 0) {\n            metadata.messages[prop] = new Function('return ' + metadata.messages[prop] + ';')();\n          }\n        });\n      }\n    }\n    if (this.checks[spec.id]) {\n      this.checks[spec.id].configure(spec);\n    } else {\n      this.checks[spec.id] = new Check(spec);\n    }\n  };\n  Audit.prototype.run = function(context, options, resolve, reject) {\n    'use strict';\n    this.validateOptions(options);\n    var q = axe.utils.queue();\n    this.rules.forEach(function(rule) {\n      if (axe.utils.ruleShouldRun(rule, context, options)) {\n        if (options.performanceTimer) {\n          var markEnd = 'mark_rule_end_' + rule.id;\n          var markStart = 'mark_rule_start_' + rule.id;\n          axe.utils.performanceTimer.mark(markStart);\n        }\n        q.defer(function(res, rej) {\n          rule.run(context, options, function(out) {\n            if (options.performanceTimer) {\n              axe.utils.performanceTimer.mark(markEnd);\n              axe.utils.performanceTimer.measure('rule_' + rule.id, markStart, markEnd);\n            }\n            res(out);\n          }, function(err) {\n            if (!options.debug) {\n              var errResult = Object.assign(new RuleResult(rule), {\n                result: axe.constants.CANTTELL,\n                description: 'An error occured while running this rule',\n                message: err.message,\n                help: err.stack || err.message,\n                error: err\n              });\n              res(errResult);\n            } else {\n              rej(err);\n            }\n          });\n        });\n      }\n    });\n    q.then(function(results) {\n      resolve(results.filter(function(result) {\n        return !!result;\n      }));\n    }).catch(reject);\n  };\n  Audit.prototype.after = function(results, options) {\n    'use strict';\n    var rules = this.rules;\n    return results.map(function(ruleResult) {\n      var rule = axe.utils.findBy(rules, 'id', ruleResult.id);\n      return rule.after(ruleResult, options);\n    });\n  };\n  Audit.prototype.getRule = function(ruleId) {\n    return this.rules.find(function(rule) {\n      return rule.id === ruleId;\n    });\n  };\n  Audit.prototype.validateOptions = function(options) {\n    'use strict';\n    var audit = this;\n    if (_typeof(options.runOnly) === 'object') {\n      var only = options.runOnly;\n      if (only.type === 'rule' && Array.isArray(only.value)) {\n        only.value.forEach(function(ruleId) {\n          if (!audit.getRule(ruleId)) {\n            throw new Error('unknown rule `' + ruleId + '` in options.runOnly');\n          }\n        });\n      } else if (Array.isArray(only.value) && only.value.length > 0) {\n        var tags = [].concat(only.value);\n        audit.rules.forEach(function(rule) {\n          var tagPos, i, l;\n          if (!tags) {\n            return;\n          }\n          for (i = 0, l = rule.tags.length; i < l; i++) {\n            tagPos = tags.indexOf(rule.tags[i]);\n            if (tagPos !== -1) {\n              tags.splice(tagPos, 1);\n            }\n          }\n        });\n        if (tags.length !== 0) {\n          throw new Error('could not find tags `' + tags.join('`, `') + '`');\n        }\n      }\n    }\n    if (_typeof(options.rules) === 'object') {\n      Object.keys(options.rules).forEach(function(ruleId) {\n        if (!audit.getRule(ruleId)) {\n          throw new Error('unknown rule `' + ruleId + '` in options.rules');\n        }\n      });\n    }\n    return options;\n  };\n  Audit.prototype.setBranding = function(branding) {\n    'use strict';\n    var previous = {\n      brand: this.brand,\n      application: this.application\n    };\n    if (branding && branding.hasOwnProperty('brand') && branding.brand && typeof branding.brand === 'string') {\n      this.brand = branding.brand;\n    }\n    if (branding && branding.hasOwnProperty('application') && branding.application && typeof branding.application === 'string') {\n      this.application = branding.application;\n    }\n    this._constructHelpUrls(previous);\n  };\n  function getHelpUrl(_ref, ruleId, version) {\n    var brand = _ref.brand, application = _ref.application;\n    return axe.constants.helpUrlBase + brand + '/' + (version || axe.version.substring(0, axe.version.lastIndexOf('.'))) + '/' + ruleId + '?application=' + application;\n  }\n  Audit.prototype._constructHelpUrls = function() {\n    var _this = this;\n    var previous = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var version = axe.version.substring(0, axe.version.lastIndexOf('.'));\n    this.rules.forEach(function(rule) {\n      if (!_this.data.rules[rule.id]) {\n        _this.data.rules[rule.id] = {};\n      }\n      var metaData = _this.data.rules[rule.id];\n      if (typeof metaData.helpUrl !== 'string' || previous && metaData.helpUrl === getHelpUrl(previous, rule.id, version)) {\n        metaData.helpUrl = getHelpUrl(_this, rule.id, version);\n      }\n    });\n  };\n  Audit.prototype.resetRulesAndChecks = function() {\n    'use strict';\n    this._init();\n  };\n  'use strict';\n  function CheckResult(check) {\n    'use strict';\n    this.id = check.id;\n    this.data = null;\n    this.relatedNodes = [];\n    this.result = null;\n  }\n  'use strict';\n  function createExecutionContext(spec) {\n    'use strict';\n    if (typeof spec === 'string') {\n      return new Function('return ' + spec + ';')();\n    }\n    return spec;\n  }\n  function Check(spec) {\n    if (spec) {\n      this.id = spec.id;\n      this.configure(spec);\n    }\n  }\n  Check.prototype.enabled = true;\n  Check.prototype.run = function(node, options, resolve, reject) {\n    'use strict';\n    options = options || {};\n    var enabled = options.hasOwnProperty('enabled') ? options.enabled : this.enabled, checkOptions = options.options || this.options;\n    if (enabled) {\n      var checkResult = new CheckResult(this);\n      var checkHelper = axe.utils.checkHelper(checkResult, resolve, reject);\n      var result;\n      try {\n        result = this.evaluate.call(checkHelper, node, checkOptions);\n      } catch (e) {\n        reject(e);\n        return;\n      }\n      if (!checkHelper.isAsync) {\n        checkResult.result = result;\n        setTimeout(function() {\n          resolve(checkResult);\n        }, 0);\n      }\n    } else {\n      resolve(null);\n    }\n  };\n  Check.prototype.configure = function(spec) {\n    var _this = this;\n    [ 'options', 'enabled' ].filter(function(prop) {\n      return spec.hasOwnProperty(prop);\n    }).forEach(function(prop) {\n      return _this[prop] = spec[prop];\n    });\n    [ 'evaluate', 'after' ].filter(function(prop) {\n      return spec.hasOwnProperty(prop);\n    }).forEach(function(prop) {\n      return _this[prop] = createExecutionContext(spec[prop]);\n    });\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function pushUniqueFrame(collection, frame) {\n    'use strict';\n    if (axe.utils.isHidden(frame)) {\n      return;\n    }\n    var fr = axe.utils.findBy(collection, 'node', frame);\n    if (!fr) {\n      collection.push({\n        node: frame,\n        include: [],\n        exclude: []\n      });\n    }\n  }\n  function pushUniqueFrameSelector(context, type, selectorArray) {\n    'use strict';\n    context.frames = context.frames || [];\n    var result, frame;\n    var frames = document.querySelectorAll(selectorArray.shift());\n    frameloop: for (var i = 0, l = frames.length; i < l; i++) {\n      frame = frames[i];\n      for (var j = 0, l2 = context.frames.length; j < l2; j++) {\n        if (context.frames[j].node === frame) {\n          context.frames[j][type].push(selectorArray);\n          break frameloop;\n        }\n      }\n      result = {\n        node: frame,\n        include: [],\n        exclude: []\n      };\n      if (selectorArray) {\n        result[type].push(selectorArray);\n      }\n      context.frames.push(result);\n    }\n  }\n  function normalizeContext(context) {\n    'use strict';\n    if (context && (typeof context === 'undefined' ? 'undefined' : _typeof(context)) === 'object' || context instanceof NodeList) {\n      if (context instanceof Node) {\n        return {\n          include: [ context ],\n          exclude: []\n        };\n      }\n      if (context.hasOwnProperty('include') || context.hasOwnProperty('exclude')) {\n        return {\n          include: context.include && +context.include.length ? context.include : [ document ],\n          exclude: context.exclude || []\n        };\n      }\n      if (context.length === +context.length) {\n        return {\n          include: context,\n          exclude: []\n        };\n      }\n    }\n    if (typeof context === 'string') {\n      return {\n        include: [ context ],\n        exclude: []\n      };\n    }\n    return {\n      include: [ document ],\n      exclude: []\n    };\n  }\n  function parseSelectorArray(context, type) {\n    'use strict';\n    var item, result = [];\n    for (var i = 0, l = context[type].length; i < l; i++) {\n      item = context[type][i];\n      if (typeof item === 'string') {\n        result = result.concat(axe.utils.toArray(document.querySelectorAll(item)));\n        break;\n      } else if (item && item.length && !(item instanceof Node)) {\n        if (item.length > 1) {\n          pushUniqueFrameSelector(context, type, item);\n        } else {\n          result = result.concat(axe.utils.toArray(document.querySelectorAll(item[0])));\n        }\n      } else {\n        result.push(item);\n      }\n    }\n    return result.filter(function(r) {\n      return r;\n    });\n  }\n  function validateContext(context) {\n    'use strict';\n    if (context.include.length === 0) {\n      if (context.frames.length === 0) {\n        var env = axe.utils.respondable.isInFrame() ? 'frame' : 'page';\n        return new Error('No elements found for include in ' + env + ' Context');\n      }\n      context.frames.forEach(function(frame, i) {\n        if (frame.include.length === 0) {\n          return new Error('No elements found for include in Context of frame ' + i);\n        }\n      });\n    }\n  }\n  function Context(spec) {\n    'use strict';\n    var self = this;\n    this.frames = [];\n    this.initiator = spec && typeof spec.initiator === 'boolean' ? spec.initiator : true;\n    this.page = false;\n    spec = normalizeContext(spec);\n    this.exclude = spec.exclude;\n    this.include = spec.include;\n    this.include = parseSelectorArray(this, 'include');\n    this.exclude = parseSelectorArray(this, 'exclude');\n    axe.utils.select('frame, iframe', this).forEach(function(frame) {\n      if (isNodeInContext(frame, self)) {\n        pushUniqueFrame(self.frames, frame);\n      }\n    });\n    if (this.include.length === 1 && this.include[0] === document) {\n      this.page = true;\n    }\n    var err = validateContext(this);\n    if (err instanceof Error) {\n      throw err;\n    }\n  }\n  'use strict';\n  function RuleResult(rule) {\n    'use strict';\n    this.id = rule.id;\n    this.result = axe.constants.NA;\n    this.pageLevel = rule.pageLevel;\n    this.impact = null;\n    this.nodes = [];\n  }\n  'use strict';\n  function Rule(spec, parentAudit) {\n    'use strict';\n    this._audit = parentAudit;\n    this.id = spec.id;\n    this.selector = spec.selector || '*';\n    this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n    this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n    this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n    this.any = spec.any || [];\n    this.all = spec.all || [];\n    this.none = spec.none || [];\n    this.tags = spec.tags || [];\n    if (spec.matches) {\n      this.matches = createExecutionContext(spec.matches);\n    }\n  }\n  Rule.prototype.matches = function() {\n    'use strict';\n    return true;\n  };\n  Rule.prototype.gather = function(context) {\n    'use strict';\n    var elements = axe.utils.select(this.selector, context);\n    if (this.excludeHidden) {\n      return elements.filter(function(element) {\n        return !axe.utils.isHidden(element);\n      });\n    }\n    return elements;\n  };\n  Rule.prototype.runChecks = function(type, node, options, resolve, reject) {\n    'use strict';\n    var self = this;\n    var checkQueue = axe.utils.queue();\n    this[type].forEach(function(c) {\n      var check = self._audit.checks[c.id || c];\n      var option = axe.utils.getCheckOption(check, self.id, options);\n      checkQueue.defer(function(res, rej) {\n        check.run(node, option, res, rej);\n      });\n    });\n    checkQueue.then(function(results) {\n      results = results.filter(function(check) {\n        return check;\n      });\n      resolve({\n        type: type,\n        results: results\n      });\n    }).catch(reject);\n  };\n  Rule.prototype.run = function(context, options, resolve, reject) {\n    var _this = this;\n    var q = axe.utils.queue();\n    var ruleResult = new RuleResult(this);\n    var nodes = void 0;\n    try {\n      nodes = this.gather(context).filter(function(node) {\n        return _this.matches(node);\n      });\n    } catch (error) {\n      reject(new SupportError({\n        cause: error,\n        ruleId: this.id\n      }));\n      return;\n    }\n    if (options.performanceTimer) {\n      axe.log('gather (', nodes.length, '):', axe.utils.performanceTimer.timeElapsed() + 'ms');\n    }\n    nodes.forEach(function(node) {\n      q.defer(function(resolveNode, rejectNode) {\n        var checkQueue = axe.utils.queue();\n        checkQueue.defer(function(res, rej) {\n          _this.runChecks('any', node, options, res, rej);\n        });\n        checkQueue.defer(function(res, rej) {\n          _this.runChecks('all', node, options, res, rej);\n        });\n        checkQueue.defer(function(res, rej) {\n          _this.runChecks('none', node, options, res, rej);\n        });\n        checkQueue.then(function(results) {\n          if (results.length) {\n            var hasResults = false, result = {};\n            results.forEach(function(r) {\n              var res = r.results.filter(function(result) {\n                return result;\n              });\n              result[r.type] = res;\n              if (res.length) {\n                hasResults = true;\n              }\n            });\n            if (hasResults) {\n              result.node = new axe.utils.DqElement(node);\n              ruleResult.nodes.push(result);\n            }\n          }\n          resolveNode();\n        }).catch(function(err) {\n          return rejectNode(err);\n        });\n      });\n    });\n    q.then(function() {\n      return resolve(ruleResult);\n    }).catch(function(error) {\n      return reject(error);\n    });\n  };\n  function findAfterChecks(rule) {\n    'use strict';\n    return axe.utils.getAllChecks(rule).map(function(c) {\n      var check = rule._audit.checks[c.id || c];\n      return check && typeof check.after === 'function' ? check : null;\n    }).filter(Boolean);\n  }\n  function findCheckResults(nodes, checkID) {\n    'use strict';\n    var checkResults = [];\n    nodes.forEach(function(nodeResult) {\n      var checks = axe.utils.getAllChecks(nodeResult);\n      checks.forEach(function(checkResult) {\n        if (checkResult.id === checkID) {\n          checkResults.push(checkResult);\n        }\n      });\n    });\n    return checkResults;\n  }\n  function filterChecks(checks) {\n    'use strict';\n    return checks.filter(function(check) {\n      return check.filtered !== true;\n    });\n  }\n  function sanitizeNodes(result) {\n    'use strict';\n    var checkTypes = [ 'any', 'all', 'none' ];\n    var nodes = result.nodes.filter(function(detail) {\n      var length = 0;\n      checkTypes.forEach(function(type) {\n        detail[type] = filterChecks(detail[type]);\n        length += detail[type].length;\n      });\n      return length > 0;\n    });\n    if (result.pageLevel && nodes.length) {\n      nodes = [ nodes.reduce(function(a, b) {\n        if (a) {\n          checkTypes.forEach(function(type) {\n            a[type].push.apply(a[type], b[type]);\n          });\n          return a;\n        }\n      }) ];\n    }\n    return nodes;\n  }\n  Rule.prototype.after = function(result, options) {\n    'use strict';\n    var afterChecks = findAfterChecks(this);\n    var ruleID = this.id;\n    afterChecks.forEach(function(check) {\n      var beforeResults = findCheckResults(result.nodes, check.id);\n      var option = axe.utils.getCheckOption(check, ruleID, options);\n      var afterResults = check.after(beforeResults, option);\n      beforeResults.forEach(function(item) {\n        if (afterResults.indexOf(item) === -1) {\n          item.filtered = true;\n        }\n      });\n    });\n    result.nodes = sanitizeNodes(result);\n    return result;\n  };\n  Rule.prototype.configure = function(spec) {\n    'use strict';\n    if (spec.hasOwnProperty('selector')) {\n      this.selector = spec.selector;\n    }\n    if (spec.hasOwnProperty('excludeHidden')) {\n      this.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n    }\n    if (spec.hasOwnProperty('enabled')) {\n      this.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n    }\n    if (spec.hasOwnProperty('pageLevel')) {\n      this.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n    }\n    if (spec.hasOwnProperty('any')) {\n      this.any = spec.any;\n    }\n    if (spec.hasOwnProperty('all')) {\n      this.all = spec.all;\n    }\n    if (spec.hasOwnProperty('none')) {\n      this.none = spec.none;\n    }\n    if (spec.hasOwnProperty('tags')) {\n      this.tags = spec.tags;\n    }\n    if (spec.hasOwnProperty('matches')) {\n      if (typeof spec.matches === 'string') {\n        this.matches = new Function('return ' + spec.matches + ';')();\n      } else {\n        this.matches = spec.matches;\n      }\n    }\n  };\n  'use strict';\n  (function(axe) {\n    var definitions = [ {\n      name: 'NA',\n      value: 'inapplicable',\n      priority: 0,\n      group: 'inapplicable'\n    }, {\n      name: 'PASS',\n      value: 'passed',\n      priority: 1,\n      group: 'passes'\n    }, {\n      name: 'CANTTELL',\n      value: 'cantTell',\n      priority: 2,\n      group: 'incomplete'\n    }, {\n      name: 'FAIL',\n      value: 'failed',\n      priority: 3,\n      group: 'violations'\n    } ];\n    var constants = {\n      helpUrlBase: 'https://dequeuniversity.com/rules/',\n      results: [],\n      resultGroups: [],\n      resultGroupMap: {},\n      impact: Object.freeze([ 'minor', 'moderate', 'serious', 'critical' ])\n    };\n    definitions.forEach(function(definition) {\n      var name = definition.name;\n      var value = definition.value;\n      var priority = definition.priority;\n      var group = definition.group;\n      constants[name] = value;\n      constants[name + '_PRIO'] = priority;\n      constants[name + '_GROUP'] = group;\n      constants.results[priority] = value;\n      constants.resultGroups[priority] = group;\n      constants.resultGroupMap[value] = group;\n    });\n    Object.freeze(constants.results);\n    Object.freeze(constants.resultGroups);\n    Object.freeze(constants.resultGroupMap);\n    Object.freeze(constants);\n    Object.defineProperty(axe, 'constants', {\n      value: constants,\n      enumerable: true,\n      configurable: false,\n      writable: false\n    });\n  })(axe);\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.log = function() {\n    'use strict';\n    if ((typeof console === 'undefined' ? 'undefined' : _typeof(console)) === 'object' && console.log) {\n      Function.prototype.apply.call(console.log, console, arguments);\n    }\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.a11yCheck = function(context, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options || (typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n      options = {};\n    }\n    var audit = axe._audit;\n    if (!audit) {\n      throw new Error('No audit configured');\n    }\n    options.reporter = options.reporter || audit.reporter || 'v2';\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.start();\n    }\n    var reporter = axe.getReporter(options.reporter);\n    axe._runRules(context, options, function(results) {\n      var res = reporter(results, options, callback);\n      if (res !== undefined) {\n        if (options.performanceTimer) {\n          axe.utils.performanceTimer.end();\n        }\n        callback(res);\n      }\n    }, axe.log);\n  };\n  'use strict';\n  function cleanupPlugins(resolve, reject) {\n    'use strict';\n    if (!axe._audit) {\n      throw new Error('No audit configured');\n    }\n    var q = axe.utils.queue();\n    var cleanupErrors = [];\n    Object.keys(axe.plugins).forEach(function(key) {\n      q.defer(function(res) {\n        var rej = function rej(err) {\n          cleanupErrors.push(err);\n          res();\n        };\n        try {\n          axe.plugins[key].cleanup(res, rej);\n        } catch (err) {\n          rej(err);\n        }\n      });\n    });\n    axe.utils.toArray(document.querySelectorAll('frame, iframe')).forEach(function(frame) {\n      q.defer(function(res, rej) {\n        return axe.utils.sendCommandToFrame(frame, {\n          command: 'cleanup-plugin'\n        }, res, rej);\n      });\n    });\n    q.then(function(results) {\n      if (cleanupErrors.length === 0) {\n        resolve(results);\n      } else {\n        reject(cleanupErrors);\n      }\n    }).catch(reject);\n  }\n  axe.cleanup = cleanupPlugins;\n  'use strict';\n  function configureChecksRulesAndBranding(spec) {\n    'use strict';\n    var audit;\n    audit = axe._audit;\n    if (!audit) {\n      throw new Error('No audit configured');\n    }\n    if (spec.reporter && (typeof spec.reporter === 'function' || reporters[spec.reporter])) {\n      audit.reporter = spec.reporter;\n    }\n    if (spec.checks) {\n      spec.checks.forEach(function(check) {\n        audit.addCheck(check);\n      });\n    }\n    if (spec.rules) {\n      spec.rules.forEach(function(rule) {\n        audit.addRule(rule);\n      });\n    }\n    if (typeof spec.branding !== 'undefined') {\n      audit.setBranding(spec.branding);\n    } else {\n      audit._constructHelpUrls();\n    }\n    if (spec.tagExclude) {\n      audit.tagExclude = spec.tagExclude;\n    }\n  }\n  axe.configure = configureChecksRulesAndBranding;\n  'use strict';\n  axe.getRules = function(tags) {\n    'use strict';\n    tags = tags || [];\n    var matchingRules = !tags.length ? axe._audit.rules : axe._audit.rules.filter(function(item) {\n      return !!tags.filter(function(tag) {\n        return item.tags.indexOf(tag) !== -1;\n      }).length;\n    });\n    var ruleData = axe._audit.data.rules || {};\n    return matchingRules.map(function(matchingRule) {\n      var rd = ruleData[matchingRule.id] || {};\n      return {\n        ruleId: matchingRule.id,\n        description: rd.description,\n        help: rd.help,\n        helpUrl: rd.helpUrl,\n        tags: matchingRule.tags\n      };\n    });\n  };\n  'use strict';\n  function runCommand(data, keepalive, callback) {\n    'use strict';\n    var resolve = callback;\n    var reject = function reject(err) {\n      if (err instanceof Error === false) {\n        err = new Error(err);\n      }\n      callback(err);\n    };\n    var context = data && data.context || {};\n    if (context.include && !context.include.length) {\n      context.include = [ document ];\n    }\n    var options = data && data.options || {};\n    switch (data.command) {\n     case 'rules':\n      return runRules(context, options, resolve, reject);\n\n     case 'cleanup-plugin':\n      return cleanupPlugins(resolve, reject);\n\n     default:\n      if (axe._audit && axe._audit.commands && axe._audit.commands[data.command]) {\n        return axe._audit.commands[data.command](data, callback);\n      }\n    }\n  }\n  axe._load = function(audit) {\n    'use strict';\n    axe.utils.respondable.subscribe('axe.ping', function(data, keepalive, respond) {\n      respond({\n        axe: true\n      });\n    });\n    axe.utils.respondable.subscribe('axe.start', runCommand);\n    axe._audit = new Audit(audit);\n  };\n  'use strict';\n  var axe = axe || {};\n  axe.plugins = {};\n  function Plugin(spec) {\n    'use strict';\n    this._run = spec.run;\n    this._collect = spec.collect;\n    this._registry = {};\n    spec.commands.forEach(function(command) {\n      axe._audit.registerCommand(command);\n    });\n  }\n  Plugin.prototype.run = function() {\n    'use strict';\n    return this._run.apply(this, arguments);\n  };\n  Plugin.prototype.collect = function() {\n    'use strict';\n    return this._collect.apply(this, arguments);\n  };\n  Plugin.prototype.cleanup = function(done) {\n    'use strict';\n    var q = axe.utils.queue();\n    var that = this;\n    Object.keys(this._registry).forEach(function(key) {\n      q.defer(function(done) {\n        that._registry[key].cleanup(done);\n      });\n    });\n    q.then(function() {\n      done();\n    });\n  };\n  Plugin.prototype.add = function(impl) {\n    'use strict';\n    this._registry[impl.id] = impl;\n  };\n  axe.registerPlugin = function(plugin) {\n    'use strict';\n    axe.plugins[plugin.id] = new Plugin(plugin);\n  };\n  'use strict';\n  var reporters = {};\n  var defaultReporter;\n  axe.getReporter = function(reporter) {\n    'use strict';\n    if (typeof reporter === 'string' && reporters[reporter]) {\n      return reporters[reporter];\n    }\n    if (typeof reporter === 'function') {\n      return reporter;\n    }\n    return defaultReporter;\n  };\n  axe.addReporter = function registerReporter(name, cb, isDefault) {\n    'use strict';\n    reporters[name] = cb;\n    if (isDefault) {\n      defaultReporter = cb;\n    }\n  };\n  'use strict';\n  function resetConfiguration() {\n    'use strict';\n    var audit = axe._audit;\n    if (!audit) {\n      throw new Error('No audit configured');\n    }\n    audit.resetRulesAndChecks();\n  }\n  axe.reset = resetConfiguration;\n  'use strict';\n  function runRules(context, options, resolve, reject) {\n    'use strict';\n    try {\n      context = new Context(context);\n    } catch (e) {\n      return reject(e);\n    }\n    var q = axe.utils.queue();\n    var audit = axe._audit;\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.auditStart();\n    }\n    if (context.frames.length && options.iframes !== false) {\n      q.defer(function(res, rej) {\n        axe.utils.collectResultsFromFrames(context, options, 'rules', null, res, rej);\n      });\n    }\n    q.defer(function(res, rej) {\n      audit.run(context, options, res, rej);\n    });\n    q.then(function(data) {\n      try {\n        if (options.performanceTimer) {\n          axe.utils.performanceTimer.auditEnd();\n        }\n        var results = axe.utils.mergeResults(data.map(function(d) {\n          return {\n            results: d\n          };\n        }));\n        if (context.initiator) {\n          results = audit.after(results, options);\n          results.forEach(axe.utils.publishMetaData);\n          results = results.map(axe.utils.finalizeRuleResult);\n        }\n        try {\n          resolve(results);\n        } catch (e) {\n          axe.log(e);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    }).catch(reject);\n  }\n  axe._runRules = runRules;\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function isContext(potential) {\n    'use strict';\n    switch (true) {\n     case typeof potential === 'string':\n     case Array.isArray(potential):\n     case Node && potential instanceof Node:\n     case NodeList && potential instanceof NodeList:\n      return true;\n\n     case (typeof potential === 'undefined' ? 'undefined' : _typeof(potential)) !== 'object':\n      return false;\n\n     case potential.include !== undefined:\n     case potential.exclude !== undefined:\n     case typeof potential.length === 'number':\n      return true;\n\n     default:\n      return false;\n    }\n  }\n  var noop = function noop() {};\n  function normalizeRunParams(context, options, callback) {\n    'use strict';\n    var typeErr = new TypeError('axe.run arguments are invalid');\n    if (!isContext(context)) {\n      if (callback !== undefined) {\n        throw typeErr;\n      }\n      callback = options;\n      options = context;\n      context = document;\n    }\n    if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) !== 'object') {\n      if (callback !== undefined) {\n        throw typeErr;\n      }\n      callback = options;\n      options = {};\n    }\n    if (typeof callback !== 'function' && callback !== undefined) {\n      throw typeErr;\n    }\n    return {\n      context: context,\n      options: options,\n      callback: callback || noop\n    };\n  }\n  axe.run = function(context, options, callback) {\n    'use strict';\n    if (!axe._audit) {\n      throw new Error('No audit configured');\n    }\n    var args = normalizeRunParams(context, options, callback);\n    context = args.context;\n    options = args.options;\n    callback = args.callback;\n    options.reporter = options.reporter || axe._audit.reporter || 'v1';\n    if (options.performanceTimer) {\n      axe.utils.performanceTimer.start();\n    }\n    var p = void 0;\n    var reject = noop;\n    var resolve = noop;\n    if (window.Promise && callback === noop) {\n      p = new Promise(function(_resolve, _reject) {\n        reject = _reject;\n        resolve = _resolve;\n      });\n    }\n    axe._runRules(context, options, function(rawResults) {\n      var respond = function respond(results) {\n        try {\n          callback(null, results);\n        } catch (e) {\n          axe.log(e);\n        }\n        resolve(results);\n      };\n      if (options.performanceTimer) {\n        axe.utils.performanceTimer.end();\n      }\n      try {\n        var reporter = axe.getReporter(options.reporter);\n        var results = reporter(rawResults, options, respond);\n        if (results !== undefined) {\n          respond(results);\n        }\n      } catch (err) {\n        callback(err);\n        reject(err);\n      }\n    }, function(err) {\n      callback(err);\n      reject(err);\n    });\n    return p;\n  };\n  'use strict';\n  helpers.failureSummary = function failureSummary(nodeData) {\n    'use strict';\n    var failingChecks = {};\n    failingChecks.none = nodeData.none.concat(nodeData.all);\n    failingChecks.any = nodeData.any;\n    return Object.keys(failingChecks).map(function(key) {\n      if (!failingChecks[key].length) {\n        return;\n      }\n      var sum = axe._audit.data.failureSummaries[key];\n      if (sum && typeof sum.failureMessage === 'function') {\n        return sum.failureMessage(failingChecks[key].map(function(check) {\n          return check.message || '';\n        }));\n      }\n    }).filter(function(i) {\n      return i !== undefined;\n    }).join('\\n\\n');\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function normalizeRelatedNodes(node, options) {\n    'use strict';\n    [ 'any', 'all', 'none' ].forEach(function(type) {\n      if (!Array.isArray(node[type])) {\n        return;\n      }\n      node[type].filter(function(checkRes) {\n        return Array.isArray(checkRes.relatedNodes);\n      }).forEach(function(checkRes) {\n        checkRes.relatedNodes = checkRes.relatedNodes.map(function(relatedNode) {\n          var res = {\n            html: relatedNode.source\n          };\n          if (options.elementRef && !relatedNode.fromFrame) {\n            res.element = relatedNode.element;\n          }\n          if (options.selectors !== false || relatedNode.fromFrame) {\n            res.target = relatedNode.selector;\n          }\n          if (options.xpath) {\n            res.xpath = relatedNode.xpath;\n          }\n          return res;\n        });\n      });\n    });\n  }\n  var resultKeys = axe.constants.resultGroups;\n  helpers.processAggregate = function(results, options) {\n    var resultObject = axe.utils.aggregateResult(results);\n    resultObject.timestamp = new Date().toISOString();\n    resultObject.url = window.location.href;\n    resultKeys.forEach(function(key) {\n      resultObject[key] = (resultObject[key] || []).map(function(ruleResult) {\n        ruleResult = Object.assign({}, ruleResult);\n        if (Array.isArray(ruleResult.nodes) && ruleResult.nodes.length > 0) {\n          ruleResult.nodes = ruleResult.nodes.map(function(subResult) {\n            if (_typeof(subResult.node) === 'object') {\n              subResult.html = subResult.node.source;\n              if (options.elementRef && !subResult.node.fromFrame) {\n                subResult.element = subResult.node.element;\n              }\n              if (options.selectors !== false || subResult.node.fromFrame) {\n                subResult.target = subResult.node.selector;\n              }\n              if (options.xpath) {\n                subResult.xpath = subResult.node.xpath;\n              }\n            }\n            delete subResult.result;\n            delete subResult.node;\n            normalizeRelatedNodes(subResult, options);\n            return subResult;\n          });\n        }\n        resultKeys.forEach(function(key) {\n          return delete ruleResult[key];\n        });\n        delete ruleResult.pageLevel;\n        delete ruleResult.result;\n        return ruleResult;\n      });\n    });\n    return resultObject;\n  };\n  'use strict';\n  axe.addReporter('na', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    callback({\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  });\n  'use strict';\n  axe.addReporter('no-passes', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    callback({\n      violations: out.violations,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  });\n  'use strict';\n  axe.addReporter('raw', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    callback(results);\n  });\n  'use strict';\n  axe.addReporter('v1', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    out.violations.forEach(function(result) {\n      return result.nodes.forEach(function(nodeResult) {\n        nodeResult.failureSummary = helpers.failureSummary(nodeResult);\n      });\n    });\n    callback({\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  });\n  'use strict';\n  axe.addReporter('v2', function(results, options, callback) {\n    'use strict';\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    var out = helpers.processAggregate(results, options);\n    callback({\n      violations: out.violations,\n      passes: out.passes,\n      incomplete: out.incomplete,\n      inapplicable: out.inapplicable,\n      timestamp: out.timestamp,\n      url: out.url\n    });\n  }, true);\n  'use strict';\n  axe.utils.aggregate = function(map, values, initial) {\n    values = values.slice();\n    if (initial) {\n      values.push(initial);\n    }\n    var sorting = values.map(function(val) {\n      return map.indexOf(val);\n    }).sort();\n    return map[sorting.pop()];\n  };\n  'use strict';\n  var checkMap = [];\n  checkMap[axe.constants.PASS_PRIO] = true;\n  checkMap[axe.constants.CANTTELL_PRIO] = null;\n  checkMap[axe.constants.FAIL_PRIO] = false;\n  var checkTypes = [ 'any', 'all', 'none' ];\n  function anyAllNone(obj, functor) {\n    return checkTypes.reduce(function(out, type) {\n      out[type] = (obj[type] || []).map(function(val) {\n        return functor(val, type);\n      });\n      return out;\n    }, {});\n  }\n  axe.utils.aggregateChecks = function(nodeResOriginal) {\n    var nodeResult = Object.assign({}, nodeResOriginal);\n    anyAllNone(nodeResult, function(check, type) {\n      var i = checkMap.indexOf(check.result);\n      check.priority = i !== -1 ? i : axe.constants.CANTTELL_PRIO;\n      if (type === 'none') {\n        check.priority = 4 - check.priority;\n      }\n    });\n    var priorities = anyAllNone(nodeResult, function(c) {\n      return c.priority;\n    });\n    nodeResult.priority = Math.max(priorities.all.reduce(function(a, b) {\n      return Math.max(a, b);\n    }, 0), priorities.none.reduce(function(a, b) {\n      return Math.max(a, b);\n    }, 0), priorities.any.reduce(function(a, b) {\n      return Math.min(a, b);\n    }, 4) % 4);\n    var impacts = [];\n    checkTypes.forEach(function(type) {\n      nodeResult[type] = nodeResult[type].filter(function(check) {\n        return check.priority === nodeResult.priority;\n      });\n      nodeResult[type].forEach(function(check) {\n        return impacts.push(check.impact);\n      });\n    });\n    if (nodeResult.priority === axe.constants.FAIL_PRIO) {\n      nodeResult.impact = axe.utils.aggregate(axe.constants.impact, impacts);\n    } else {\n      nodeResult.impact = null;\n    }\n    anyAllNone(nodeResult, function(c) {\n      delete c.result;\n      delete c.priority;\n    });\n    nodeResult.result = axe.constants.results[nodeResult.priority];\n    delete nodeResult.priority;\n    return nodeResult;\n  };\n  'use strict';\n  function copyToGroup(resultObject, subResult, group) {\n    var resultCopy = Object.assign({}, subResult);\n    resultCopy.nodes = (resultCopy[group] || []).concat();\n    axe.constants.resultGroups.forEach(function(group) {\n      delete resultCopy[group];\n    });\n    resultObject[group].push(resultCopy);\n  }\n  axe.utils.aggregateResult = function(results) {\n    var resultObject = {};\n    axe.constants.resultGroups.forEach(function(groupName) {\n      return resultObject[groupName] = [];\n    });\n    results.forEach(function(subResult) {\n      if (subResult.error) {\n        copyToGroup(resultObject, subResult, axe.constants.CANTTELL_GROUP);\n      } else if (subResult.result === axe.constants.NA) {\n        copyToGroup(resultObject, subResult, axe.constants.NA_GROUP);\n      } else {\n        axe.constants.resultGroups.forEach(function(group) {\n          if (Array.isArray(subResult[group]) && subResult[group].length > 0) {\n            copyToGroup(resultObject, subResult, group);\n          }\n        });\n      }\n    });\n    return resultObject;\n  };\n  'use strict';\n  (function() {\n    axe.utils.aggregateRule = function(subResults) {\n      var ruleResult = {};\n      subResults = subResults.map(function(subResult) {\n        if (subResult.any && subResult.all && subResult.none) {\n          return axe.utils.aggregateChecks(subResult);\n        } else if (Array.isArray(subResult.node)) {\n          return axe.utils.finalizeRuleResult(subResult);\n        } else {\n          throw new TypeError('Invalid Result type');\n        }\n      });\n      var resultList = subResults.map(function(node) {\n        return node.result;\n      });\n      ruleResult.result = axe.utils.aggregate(axe.constants.results, resultList, ruleResult.result);\n      axe.constants.resultGroups.forEach(function(group) {\n        return ruleResult[group] = [];\n      });\n      subResults.forEach(function(subResult) {\n        var groupName = axe.constants.resultGroupMap[subResult.result];\n        ruleResult[groupName].push(subResult);\n      });\n      var failGroup = axe.constants.FAIL_GROUP;\n      if (ruleResult[failGroup].length > 0) {\n        var impactList = ruleResult[failGroup].map(function(failure) {\n          return failure.impact;\n        });\n        ruleResult.impact = axe.utils.aggregate(axe.constants.impact, impactList) || null;\n      } else {\n        ruleResult.impact = null;\n      }\n      return ruleResult;\n    };\n  })();\n  'use strict';\n  function areStylesSet(el, styles, stopAt) {\n    'use strict';\n    var styl = window.getComputedStyle(el, null);\n    var set = false;\n    if (!styl) {\n      return false;\n    }\n    styles.forEach(function(att) {\n      if (styl.getPropertyValue(att.property) === att.value) {\n        set = true;\n      }\n    });\n    if (set) {\n      return true;\n    }\n    if (el.nodeName.toUpperCase() === stopAt.toUpperCase() || !el.parentNode) {\n      return false;\n    }\n    return areStylesSet(el.parentNode, styles, stopAt);\n  }\n  axe.utils.areStylesSet = areStylesSet;\n  'use strict';\n  axe.utils.checkHelper = function checkHelper(checkResult, resolve, reject) {\n    'use strict';\n    return {\n      isAsync: false,\n      async: function async() {\n        this.isAsync = true;\n        return function(result) {\n          if (result instanceof Error === false) {\n            checkResult.value = result;\n            resolve(checkResult);\n          } else {\n            reject(result);\n          }\n        };\n      },\n      data: function data(_data) {\n        checkResult.data = _data;\n      },\n      relatedNodes: function relatedNodes(nodes) {\n        nodes = nodes instanceof Node ? [ nodes ] : axe.utils.toArray(nodes);\n        checkResult.relatedNodes = nodes.map(function(element) {\n          return new axe.utils.DqElement(element);\n        });\n      }\n    };\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.utils.clone = function(obj) {\n    'use strict';\n    var index, length, out = obj;\n    if (obj !== null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object') {\n      if (Array.isArray(obj)) {\n        out = [];\n        for (index = 0, length = obj.length; index < length; index++) {\n          out[index] = axe.utils.clone(obj[index]);\n        }\n      } else {\n        out = {};\n        for (index in obj) {\n          out[index] = axe.utils.clone(obj[index]);\n        }\n      }\n    }\n    return out;\n  };\n  'use strict';\n  function err(message, node) {\n    'use strict';\n    return new Error(message + ': ' + axe.utils.getSelector(node));\n  }\n  axe.utils.sendCommandToFrame = function(node, parameters, resolve, reject) {\n    'use strict';\n    var win = node.contentWindow;\n    if (!win) {\n      axe.log('Frame does not have a content window', node);\n      resolve(null);\n      return;\n    }\n    var timeout = setTimeout(function() {\n      timeout = setTimeout(function() {\n        var errMsg = err('No response from frame', node);\n        if (!parameters.debug) {\n          axe.log(errMsg);\n          resolve(null);\n        } else {\n          reject(errMsg);\n        }\n      }, 0);\n    }, 500);\n    axe.utils.respondable(win, 'axe.ping', null, undefined, function() {\n      clearTimeout(timeout);\n      timeout = setTimeout(function() {\n        reject(err('Axe in frame timed out', node));\n      }, 3e4);\n      axe.utils.respondable(win, 'axe.start', parameters, undefined, function(data) {\n        clearTimeout(timeout);\n        if (data instanceof Error === false) {\n          resolve(data);\n        } else {\n          reject(data);\n        }\n      });\n    });\n  };\n  function collectResultsFromFrames(context, options, command, parameter, resolve, reject) {\n    'use strict';\n    var q = axe.utils.queue();\n    var frames = context.frames;\n    frames.forEach(function(frame) {\n      var params = {\n        options: options,\n        command: command,\n        parameter: parameter,\n        context: {\n          initiator: false,\n          page: context.page,\n          include: frame.include || [],\n          exclude: frame.exclude || []\n        }\n      };\n      q.defer(function(res, rej) {\n        var node = frame.node;\n        axe.utils.sendCommandToFrame(node, params, function(data) {\n          if (data) {\n            return res({\n              results: data,\n              frameElement: node,\n              frame: axe.utils.getSelector(node)\n            });\n          }\n          res(null);\n        }, rej);\n      });\n    });\n    q.then(function(data) {\n      resolve(axe.utils.mergeResults(data));\n    }).catch(reject);\n  }\n  axe.utils.collectResultsFromFrames = collectResultsFromFrames;\n  'use strict';\n  axe.utils.contains = function(node, otherNode) {\n    'use strict';\n    if (typeof node.contains === 'function') {\n      return node.contains(otherNode);\n    }\n    return !!(node.compareDocumentPosition(otherNode) & 16);\n  };\n  'use strict';\n  function truncate(str, maxLength) {\n    'use strict';\n    maxLength = maxLength || 300;\n    if (str.length > maxLength) {\n      var index = str.indexOf('>');\n      str = str.substring(0, index + 1);\n    }\n    return str;\n  }\n  function getSource(element) {\n    'use strict';\n    var source = element.outerHTML;\n    if (!source && typeof XMLSerializer === 'function') {\n      source = new XMLSerializer().serializeToString(element);\n    }\n    return truncate(source || '');\n  }\n  function DqElement(element, spec) {\n    'use strict';\n    this._fromFrame = !!spec;\n    this.spec = spec || {};\n    this.source = this.spec.source !== undefined ? this.spec.source : getSource(element);\n    this._element = element;\n  }\n  DqElement.prototype = {\n    get selector() {\n      return this.spec.selector || [ axe.utils.getSelector(this.element) ];\n    },\n    get xpath() {\n      return this.spec.xpath || [ axe.utils.getXpath(this.element) ];\n    },\n    get element() {\n      return this._element;\n    },\n    get fromFrame() {\n      return this._fromFrame;\n    },\n    toJSON: function toJSON() {\n      'use strict';\n      return {\n        selector: this.selector,\n        source: this.source,\n        xpath: this.xpath\n      };\n    }\n  };\n  DqElement.fromFrame = function(node, frame) {\n    node.selector.unshift(frame.selector);\n    node.xpath.unshift(frame.xpath);\n    return new axe.utils.DqElement(frame.element, node);\n  };\n  axe.utils.DqElement = DqElement;\n  'use strict';\n  axe.utils.matchesSelector = function() {\n    'use strict';\n    var method;\n    function getMethod(win) {\n      var index, candidate, elProto = win.Element.prototype, candidates = [ 'matches', 'matchesSelector', 'mozMatchesSelector', 'webkitMatchesSelector', 'msMatchesSelector' ], length = candidates.length;\n      for (index = 0; index < length; index++) {\n        candidate = candidates[index];\n        if (elProto[candidate]) {\n          return candidate;\n        }\n      }\n    }\n    return function(node, selector) {\n      if (!method || !node[method]) {\n        method = getMethod(node.ownerDocument.defaultView);\n      }\n      return node[method](selector);\n    };\n  }();\n  'use strict';\n  axe.utils.escapeSelector = function(value) {\n    'use strict';\n    var string = String(value);\n    var length = string.length;\n    var index = -1;\n    var codeUnit;\n    var result = '';\n    var firstCodeUnit = string.charCodeAt(0);\n    while (++index < length) {\n      codeUnit = string.charCodeAt(index);\n      if (codeUnit == 0) {\n        throw new Error('INVALID_CHARACTER_ERR');\n      }\n      if (codeUnit >= 1 && codeUnit <= 31 || codeUnit >= 127 && codeUnit <= 159 || index == 0 && codeUnit >= 48 && codeUnit <= 57 || index == 1 && codeUnit >= 48 && codeUnit <= 57 && firstCodeUnit == 45) {\n        result += '\\\\' + codeUnit.toString(16) + ' ';\n        continue;\n      }\n      if (index == 1 && codeUnit == 45 && firstCodeUnit == 45) {\n        result += '\\\\' + string.charAt(index);\n        continue;\n      }\n      if (codeUnit >= 128 || codeUnit == 45 || codeUnit == 95 || codeUnit >= 48 && codeUnit <= 57 || codeUnit >= 65 && codeUnit <= 90 || codeUnit >= 97 && codeUnit <= 122) {\n        result += string.charAt(index);\n        continue;\n      }\n      result += '\\\\' + string.charAt(index);\n    }\n    return result;\n  };\n  'use strict';\n  axe.utils.extendMetaData = function(to, from) {\n    Object.assign(to, from);\n    Object.keys(from).filter(function(prop) {\n      return typeof from[prop] === 'function';\n    }).forEach(function(prop) {\n      to[prop] = null;\n      try {\n        to[prop] = from[prop](to);\n      } catch (e) {}\n    });\n  };\n  'use strict';\n  axe.utils.finalizeRuleResult = function(ruleResult) {\n    Object.assign(ruleResult, axe.utils.aggregateRule(ruleResult.nodes));\n    delete ruleResult.nodes;\n    return ruleResult;\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  axe.utils.findBy = function(array, key, value) {\n    if (Array.isArray(array)) {\n      return array.find(function(obj) {\n        return (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && obj[key] === value;\n      });\n    }\n  };\n  'use strict';\n  axe.utils.getAllChecks = function getAllChecks(object) {\n    'use strict';\n    var result = [];\n    return result.concat(object.any || []).concat(object.all || []).concat(object.none || []);\n  };\n  'use strict';\n  axe.utils.getCheckOption = function(check, ruleID, options) {\n    'use strict';\n    var ruleCheckOption = ((options.rules && options.rules[ruleID] || {}).checks || {})[check.id];\n    var checkOption = (options.checks || {})[check.id];\n    var enabled = check.enabled;\n    var opts = check.options;\n    if (checkOption) {\n      if (checkOption.hasOwnProperty('enabled')) {\n        enabled = checkOption.enabled;\n      }\n      if (checkOption.hasOwnProperty('options')) {\n        opts = checkOption.options;\n      }\n    }\n    if (ruleCheckOption) {\n      if (ruleCheckOption.hasOwnProperty('enabled')) {\n        enabled = ruleCheckOption.enabled;\n      }\n      if (ruleCheckOption.hasOwnProperty('options')) {\n        opts = ruleCheckOption.options;\n      }\n    }\n    return {\n      enabled: enabled,\n      options: opts\n    };\n  };\n  'use strict';\n  function nthOfType(element) {\n    'use strict';\n    var index = 1, type = element.nodeName.toUpperCase();\n    element = element.previousElementSibling;\n    while (element) {\n      if (element.nodeName.toUpperCase() === type) {\n        index++;\n      }\n      element = element.previousElementSibling;\n    }\n    return index;\n  }\n  function siblingsHaveSameSelector(node, selector) {\n    'use strict';\n    var index, sibling, siblings = node.parentNode.children;\n    if (!siblings) {\n      return false;\n    }\n    var length = siblings.length;\n    for (index = 0; index < length; index++) {\n      sibling = siblings[index];\n      if (sibling !== node && axe.utils.matchesSelector(sibling, selector)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  axe.utils.getSelector = function getSelector(node) {\n    'use strict';\n    function escape(p) {\n      return axe.utils.escapeSelector(p);\n    }\n    var parts = [], part;\n    while (node.parentNode) {\n      part = '';\n      if (node.id && document.querySelectorAll('#' + axe.utils.escapeSelector(node.id)).length === 1) {\n        parts.unshift('#' + axe.utils.escapeSelector(node.id));\n        break;\n      }\n      if (node.className && typeof node.className === 'string') {\n        part = '.' + node.className.trim().split(/\\s+/).map(escape).join('.');\n        if (part === '.' || siblingsHaveSameSelector(node, part)) {\n          part = '';\n        }\n      }\n      if (!part) {\n        part = axe.utils.escapeSelector(node.nodeName).toLowerCase();\n        if (part === 'html' || part === 'body') {\n          parts.unshift(part);\n          break;\n        }\n        if (siblingsHaveSameSelector(node, part)) {\n          part += ':nth-of-type(' + nthOfType(node) + ')';\n        }\n      }\n      parts.unshift(part);\n      node = node.parentNode;\n    }\n    return parts.join(' > ');\n  };\n  'use strict';\n  function getXPathArray(node, path) {\n    var sibling, count;\n    if (!node) {\n      return [];\n    }\n    if (!path && node.nodeType === 9) {\n      path = [ {\n        str: 'html'\n      } ];\n      return path;\n    }\n    path = path || [];\n    if (node.parentNode && node.parentNode !== node) {\n      path = getXPathArray(node.parentNode, path);\n    }\n    if (node.previousSibling) {\n      count = 1;\n      sibling = node.previousSibling;\n      do {\n        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n          count++;\n        }\n        sibling = sibling.previousSibling;\n      } while (sibling);\n      if (count === 1) {\n        count = null;\n      }\n    } else if (node.nextSibling) {\n      sibling = node.nextSibling;\n      do {\n        if (sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n          count = 1;\n          sibling = null;\n        } else {\n          count = null;\n          sibling = sibling.previousSibling;\n        }\n      } while (sibling);\n    }\n    if (node.nodeType === 1) {\n      var element = {};\n      element.str = node.nodeName.toLowerCase();\n      if (node.getAttribute && node.getAttribute('id') && node.ownerDocument.querySelectorAll('#' + axe.utils.escapeSelector(node.id)).length === 1) {\n        element.id = node.getAttribute('id');\n      }\n      if (count > 1) {\n        element.count = count;\n      }\n      path.push(element);\n    }\n    return path;\n  }\n  function xpathToString(xpathArray) {\n    return xpathArray.reduce(function(str, elm) {\n      if (elm.id) {\n        return '/' + elm.str + '[@id=\\'' + elm.id + '\\']';\n      } else {\n        return str + ('/' + elm.str) + (elm.count > 0 ? '[' + elm.count + ']' : '');\n      }\n    }, '');\n  }\n  axe.utils.getXpath = function getXpath(node) {\n    var xpathArray = getXPathArray(node);\n    return xpathToString(xpathArray);\n  };\n  'use strict';\n  var styleSheet;\n  function injectStyle(style) {\n    'use strict';\n    if (styleSheet && styleSheet.parentNode) {\n      if (styleSheet.styleSheet === undefined) {\n        styleSheet.appendChild(document.createTextNode(style));\n      } else {\n        styleSheet.styleSheet.cssText += style;\n      }\n      return styleSheet;\n    }\n    if (!style) {\n      return;\n    }\n    var head = document.head || document.getElementsByTagName('head')[0];\n    styleSheet = document.createElement('style');\n    styleSheet.type = 'text/css';\n    if (styleSheet.styleSheet === undefined) {\n      styleSheet.appendChild(document.createTextNode(style));\n    } else {\n      styleSheet.styleSheet.cssText = style;\n    }\n    head.appendChild(styleSheet);\n    return styleSheet;\n  }\n  axe.utils.injectStyle = injectStyle;\n  'use strict';\n  axe.utils.isHidden = function isHidden(el, recursed) {\n    'use strict';\n    if (el.nodeType === 9) {\n      return false;\n    }\n    var style = window.getComputedStyle(el, null);\n    if (!style || !el.parentNode || style.getPropertyValue('display') === 'none' || !recursed && style.getPropertyValue('visibility') === 'hidden' || el.getAttribute('aria-hidden') === 'true') {\n      return true;\n    }\n    return axe.utils.isHidden(el.parentNode, true);\n  };\n  'use strict';\n  function pushFrame(resultSet, frameElement, frameSelector) {\n    'use strict';\n    var frameXpath = axe.utils.getXpath(frameElement);\n    var frameSpec = {\n      element: frameElement,\n      selector: frameSelector,\n      xpath: frameXpath\n    };\n    resultSet.forEach(function(res) {\n      res.node = axe.utils.DqElement.fromFrame(res.node, frameSpec);\n      var checks = axe.utils.getAllChecks(res);\n      if (checks.length) {\n        checks.forEach(function(check) {\n          check.relatedNodes = check.relatedNodes.map(function(node) {\n            return axe.utils.DqElement.fromFrame(node, frameSpec);\n          });\n        });\n      }\n    });\n  }\n  function spliceNodes(target, to) {\n    'use strict';\n    var firstFromFrame = to[0].node, sorterResult, t;\n    for (var i = 0, l = target.length; i < l; i++) {\n      t = target[i].node;\n      sorterResult = axe.utils.nodeSorter(t.element, firstFromFrame.element);\n      if (sorterResult > 0 || sorterResult === 0 && firstFromFrame.selector.length < t.selector.length) {\n        target.splice.apply(target, [ i, 0 ].concat(to));\n        return;\n      }\n    }\n    target.push.apply(target, to);\n  }\n  function normalizeResult(result) {\n    'use strict';\n    if (!result || !result.results) {\n      return null;\n    }\n    if (!Array.isArray(result.results)) {\n      return [ result.results ];\n    }\n    if (!result.results.length) {\n      return null;\n    }\n    return result.results;\n  }\n  axe.utils.mergeResults = function mergeResults(frameResults) {\n    'use strict';\n    var result = [];\n    frameResults.forEach(function(frameResult) {\n      var results = normalizeResult(frameResult);\n      if (!results || !results.length) {\n        return;\n      }\n      results.forEach(function(ruleResult) {\n        if (ruleResult.nodes && frameResult.frame) {\n          pushFrame(ruleResult.nodes, frameResult.frameElement, frameResult.frame);\n        }\n        var res = axe.utils.findBy(result, 'id', ruleResult.id);\n        if (!res) {\n          result.push(ruleResult);\n        } else {\n          if (ruleResult.nodes.length) {\n            spliceNodes(res.nodes, ruleResult.nodes);\n          }\n        }\n      });\n    });\n    return result;\n  };\n  'use strict';\n  axe.utils.nodeSorter = function nodeSorter(a, b) {\n    'use strict';\n    if (a === b) {\n      return 0;\n    }\n    if (a.compareDocumentPosition(b) & 4) {\n      return -1;\n    }\n    return 1;\n  };\n  'use strict';\n  utils.performanceTimer = function() {\n    'use strict';\n    function now() {\n      if (window.performance && window.performance) {\n        return window.performance.now();\n      }\n    }\n    var originalTime = null;\n    var lastRecordedTime = now();\n    return {\n      start: function start() {\n        this.mark('mark_axe_start');\n      },\n      end: function end() {\n        this.mark('mark_axe_end');\n        this.measure('axe', 'mark_axe_start', 'mark_axe_end');\n        this.logMeasures('axe');\n      },\n      auditStart: function auditStart() {\n        this.mark('mark_audit_start');\n      },\n      auditEnd: function auditEnd() {\n        this.mark('mark_audit_end');\n        this.measure('audit_start_to_end', 'mark_audit_start', 'mark_audit_end');\n        this.logMeasures();\n      },\n      mark: function mark(markName) {\n        if (window.performance && window.performance.mark !== undefined) {\n          window.performance.mark(markName);\n        }\n      },\n      measure: function measure(measureName, startMark, endMark) {\n        if (window.performance && window.performance.measure !== undefined) {\n          window.performance.measure(measureName, startMark, endMark);\n        }\n      },\n      logMeasures: function logMeasures(measureName) {\n        function log(req) {\n          axe.log('Measure ' + req.name + ' took ' + req.duration + 'ms');\n        }\n        if (window.performance && window.performance.getEntriesByType !== undefined) {\n          var measures = window.performance.getEntriesByType('measure');\n          for (var i = 0; i < measures.length; ++i) {\n            var req = measures[i];\n            if (req.name === measureName) {\n              log(req);\n              return;\n            }\n            log(req);\n          }\n        }\n      },\n      timeElapsed: function timeElapsed() {\n        return now() - lastRecordedTime;\n      },\n      reset: function reset() {\n        if (!originalTime) {\n          originalTime = now();\n        }\n        lastRecordedTime = now();\n      }\n    };\n  }();\n  'use strict';\n  if (typeof Object.assign !== 'function') {\n    (function() {\n      Object.assign = function(target) {\n        'use strict';\n        if (target === undefined || target === null) {\n          throw new TypeError('Cannot convert undefined or null to object');\n        }\n        var output = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n          var source = arguments[index];\n          if (source !== undefined && source !== null) {\n            for (var nextKey in source) {\n              if (source.hasOwnProperty(nextKey)) {\n                output[nextKey] = source[nextKey];\n              }\n            }\n          }\n        }\n        return output;\n      };\n    })();\n  }\n  if (!Array.prototype.find) {\n    Array.prototype.find = function(predicate) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.find called on null or undefined');\n      }\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n      var list = Object(this);\n      var length = list.length >>> 0;\n      var thisArg = arguments[1];\n      var value;\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return value;\n        }\n      }\n      return undefined;\n    };\n  }\n  axe.utils.pollyfillElementsFromPoint = function() {\n    if (document.elementsFromPoint) {\n      return document.elementsFromPoint;\n    }\n    if (document.msElementsFromPoint) {\n      return document.msElementsFromPoint;\n    }\n    var usePointer = function() {\n      var element = document.createElement('x');\n      element.style.cssText = 'pointer-events:auto';\n      return element.style.pointerEvents === 'auto';\n    }();\n    var cssProp = usePointer ? 'pointer-events' : 'visibility';\n    var cssDisableVal = usePointer ? 'none' : 'hidden';\n    var style = document.createElement('style');\n    style.innerHTML = usePointer ? '* { pointer-events: all }' : '* { visibility: visible }';\n    return function(x, y) {\n      var current, i, d;\n      var elements = [];\n      var previousPointerEvents = [];\n      document.head.appendChild(style);\n      while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1) {\n        elements.push(current);\n        previousPointerEvents.push({\n          value: current.style.getPropertyValue(cssProp),\n          priority: current.style.getPropertyPriority(cssProp)\n        });\n        current.style.setProperty(cssProp, cssDisableVal, 'important');\n      }\n      for (i = previousPointerEvents.length; !!(d = previousPointerEvents[--i]); ) {\n        elements[i].style.setProperty(cssProp, d.value ? d.value : '', d.priority);\n      }\n      document.head.removeChild(style);\n      return elements;\n    };\n  };\n  if (typeof window.addEventListener === 'function') {\n    document.elementsFromPoint = axe.utils.pollyfillElementsFromPoint();\n  }\n  if (!Array.prototype.includes) {\n    Array.prototype.includes = function(searchElement) {\n      'use strict';\n      var O = Object(this);\n      var len = parseInt(O.length, 10) || 0;\n      if (len === 0) {\n        return false;\n      }\n      var n = parseInt(arguments[1], 10) || 0;\n      var k;\n      if (n >= 0) {\n        k = n;\n      } else {\n        k = len + n;\n        if (k < 0) {\n          k = 0;\n        }\n      }\n      var currentElement;\n      while (k < len) {\n        currentElement = O[k];\n        if (searchElement === currentElement || searchElement !== searchElement && currentElement !== currentElement) {\n          return true;\n        }\n        k++;\n      }\n      return false;\n    };\n  }\n  if (!Array.prototype.some) {\n    Array.prototype.some = function(fun) {\n      'use strict';\n      if (this == null) {\n        throw new TypeError('Array.prototype.some called on null or undefined');\n      }\n      if (typeof fun !== 'function') {\n        throw new TypeError();\n      }\n      var t = Object(this);\n      var len = t.length >>> 0;\n      var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(thisArg, t[i], i, t)) {\n          return true;\n        }\n      }\n      return false;\n    };\n  }\n  if (!Array.from) {\n    Array.from = function() {\n      var toStr = Object.prototype.toString;\n      var isCallable = function isCallable(fn) {\n        return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n      };\n      var toInteger = function toInteger(value) {\n        var number = Number(value);\n        if (isNaN(number)) {\n          return 0;\n        }\n        if (number === 0 || !isFinite(number)) {\n          return number;\n        }\n        return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n      };\n      var maxSafeInteger = Math.pow(2, 53) - 1;\n      var toLength = function toLength(value) {\n        var len = toInteger(value);\n        return Math.min(Math.max(len, 0), maxSafeInteger);\n      };\n      return function from(arrayLike) {\n        var C = this;\n        var items = Object(arrayLike);\n        if (arrayLike == null) {\n          throw new TypeError('Array.from requires an array-like object - not null or undefined');\n        }\n        var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n        var T;\n        if (typeof mapFn !== 'undefined') {\n          if (!isCallable(mapFn)) {\n            throw new TypeError('Array.from: when provided, the second argument must be a function');\n          }\n          if (arguments.length > 2) {\n            T = arguments[2];\n          }\n        }\n        var len = toLength(items.length);\n        var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n        var k = 0;\n        var kValue;\n        while (k < len) {\n          kValue = items[k];\n          if (mapFn) {\n            A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n          } else {\n            A[k] = kValue;\n          }\n          k += 1;\n        }\n        A.length = len;\n        return A;\n      };\n    }();\n  }\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  function extender(checksData, shouldBeTrue) {\n    'use strict';\n    return function(check) {\n      var sourceData = checksData[check.id] || {};\n      var messages = sourceData.messages || {};\n      var data = Object.assign({}, sourceData);\n      delete data.messages;\n      if (check.result === undefined) {\n        if (_typeof(messages.incomplete) === 'object') {\n          var missingData = check.data.missingData;\n          missingData.forEach(function(datum) {\n            var reason;\n            try {\n              reason = datum.reason;\n            } catch (e) {\n              reason = 'default';\n            }\n            data.message = function() {\n              return messages.incomplete[reason];\n            };\n          });\n        } else {\n          data.message = messages.incomplete;\n        }\n      } else {\n        data.message = check.result === shouldBeTrue ? messages.pass : messages.fail;\n      }\n      axe.utils.extendMetaData(check, data);\n    };\n  }\n  axe.utils.publishMetaData = function(ruleResult) {\n    'use strict';\n    var checksData = axe._audit.data.checks || {};\n    var rulesData = axe._audit.data.rules || {};\n    var rule = axe.utils.findBy(axe._audit.rules, 'id', ruleResult.id) || {};\n    ruleResult.tags = axe.utils.clone(rule.tags || []);\n    var shouldBeTrue = extender(checksData, true);\n    var shouldBeFalse = extender(checksData, false);\n    ruleResult.nodes.forEach(function(detail) {\n      detail.any.forEach(shouldBeTrue);\n      detail.all.forEach(shouldBeTrue);\n      detail.none.forEach(shouldBeFalse);\n    });\n    axe.utils.extendMetaData(ruleResult, axe.utils.clone(rulesData[ruleResult.id] || {}));\n  };\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  (function() {\n    'use strict';\n    function noop() {}\n    function funcGuard(f) {\n      if (typeof f !== 'function') {\n        throw new TypeError('Queue methods require functions as arguments');\n      }\n    }\n    function queue() {\n      var tasks = [];\n      var started = 0;\n      var remaining = 0;\n      var completeQueue = noop;\n      var complete = false;\n      var err;\n      var defaultFail = function defaultFail(e) {\n        err = e;\n        setTimeout(function() {\n          if (err !== undefined && err !== null) {\n            axe.log('Uncaught error (of queue)', err);\n          }\n        }, 1);\n      };\n      var failed = defaultFail;\n      function createResolve(i) {\n        return function(r) {\n          tasks[i] = r;\n          remaining -= 1;\n          if (!remaining && completeQueue !== noop) {\n            complete = true;\n            completeQueue(tasks);\n          }\n        };\n      }\n      function abort(msg) {\n        completeQueue = noop;\n        failed(msg);\n        return tasks;\n      }\n      function pop() {\n        var length = tasks.length;\n        for (;started < length; started++) {\n          var task = tasks[started];\n          try {\n            task.call(null, createResolve(started), abort);\n          } catch (e) {\n            abort(e);\n          }\n        }\n      }\n      var q = {\n        defer: function defer(fn) {\n          if ((typeof fn === 'undefined' ? 'undefined' : _typeof(fn)) === 'object' && fn.then && fn.catch) {\n            var defer = fn;\n            fn = function fn(resolve, reject) {\n              defer.then(resolve).catch(reject);\n            };\n          }\n          funcGuard(fn);\n          if (err !== undefined) {\n            return;\n          } else if (complete) {\n            throw new Error('Queue already completed');\n          }\n          tasks.push(fn);\n          ++remaining;\n          pop();\n          return q;\n        },\n        then: function then(fn) {\n          funcGuard(fn);\n          if (completeQueue !== noop) {\n            throw new Error('queue `then` already set');\n          }\n          if (!err) {\n            completeQueue = fn;\n            if (!remaining) {\n              complete = true;\n              completeQueue(tasks);\n            }\n          }\n          return q;\n        },\n        catch: function _catch(fn) {\n          funcGuard(fn);\n          if (failed !== defaultFail) {\n            throw new Error('queue `catch` already set');\n          }\n          if (!err) {\n            failed = fn;\n          } else {\n            fn(err);\n            err = null;\n          }\n          return q;\n        },\n        abort: abort\n      };\n      return q;\n    }\n    axe.utils.queue = queue;\n  })();\n  'use strict';\n  var _typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function(obj) {\n    return typeof obj;\n  } : function(obj) {\n    return obj && typeof Symbol === 'function' && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj;\n  };\n  (function(exports) {\n    'use strict';\n    var messages = {}, subscribers = {};\n    function _getSource() {\n      var application = 'axe', version = '', src;\n      if (typeof axe !== 'undefined' && axe._audit && !axe._audit.application) {\n        application = axe._audit.application;\n      }\n      if (typeof axe !== 'undefined') {\n        version = axe.version;\n      }\n      src = application + '.' + version;\n      return src;\n    }\n    function verify(postedMessage) {\n      if ((typeof postedMessage === 'undefined' ? 'undefined' : _typeof(postedMessage)) === 'object' && typeof postedMessage.uuid === 'string' && postedMessage._respondable === true) {\n        var messageSource = _getSource();\n        return postedMessage._source === messageSource || postedMessage._source === 'axe.x.y.z' || messageSource === 'axe.x.y.z';\n      }\n      return false;\n    }\n    function post(win, topic, message, uuid, keepalive, callback) {\n      var error;\n      if (message instanceof Error) {\n        error = {\n          name: message.name,\n          message: message.message,\n          stack: message.stack\n        };\n        message = undefined;\n      }\n      var data = {\n        uuid: uuid,\n        topic: topic,\n        message: message,\n        error: error,\n        _respondable: true,\n        _source: _getSource(),\n        _keepalive: keepalive\n      };\n      if (typeof callback === 'function') {\n        messages[uuid] = callback;\n      }\n      win.postMessage(JSON.stringify(data), '*');\n    }\n    function respondable(win, topic, message, keepalive, callback) {\n      var id = uuid.v1();\n      post(win, topic, message, id, keepalive, callback);\n    }\n    respondable.subscribe = function(topic, callback) {\n      subscribers[topic] = callback;\n    };\n    respondable.isInFrame = function(win) {\n      win = win || window;\n      return !!win.frameElement;\n    };\n    function createResponder(source, topic, uuid) {\n      return function(message, keepalive, callback) {\n        post(source, topic, message, uuid, keepalive, callback);\n      };\n    }\n    function publish(target, data, keepalive) {\n      var topic = data.topic;\n      var subscriber = subscribers[topic];\n      if (subscriber) {\n        var responder = createResponder(target, null, data.uuid);\n        subscriber(data.message, keepalive, responder);\n      }\n    }\n    function buildErrorObject(error) {\n      var msg = error.message || 'Unknown error occurred';\n      var ErrConstructor = window[error.name] || Error;\n      if (error.stack) {\n        msg += '\\n' + error.stack.replace(error.message, '');\n      }\n      return new ErrConstructor(msg);\n    }\n    function parseMessage(dataString) {\n      var data;\n      if (typeof dataString !== 'string') {\n        return;\n      }\n      try {\n        data = JSON.parse(dataString);\n      } catch (ex) {}\n      if (!verify(data)) {\n        return;\n      }\n      if (_typeof(data.error) === 'object') {\n        data.error = buildErrorObject(data.error);\n      } else {\n        data.error = undefined;\n      }\n      return data;\n    }\n    if (typeof window.addEventListener === 'function') {\n      window.addEventListener('message', function(e) {\n        var data = parseMessage(e.data);\n        if (!data) {\n          return;\n        }\n        var uuid = data.uuid;\n        var keepalive = data._keepalive;\n        var callback = messages[uuid];\n        if (callback) {\n          var result = data.error || data.message;\n          var responder = createResponder(e.source, data.topic, uuid);\n          callback(result, keepalive, responder);\n          if (!keepalive) {\n            delete messages[uuid];\n          }\n        }\n        if (!data.error) {\n          try {\n            publish(e.source, data, keepalive);\n          } catch (err) {\n            post(e.source, data.topic, err, uuid, false);\n          }\n        }\n      }, false);\n    }\n    exports.respondable = respondable;\n  })(utils);\n  'use strict';\n  function matchTags(rule, runOnly) {\n    'use strict';\n    var include, exclude, matching;\n    var defaultExclude = axe._audit && axe._audit.tagExclude ? axe._audit.tagExclude : [];\n    if (runOnly.include || runOnly.exclude) {\n      include = runOnly.include || [];\n      include = Array.isArray(include) ? include : [ include ];\n      exclude = runOnly.exclude || [];\n      exclude = Array.isArray(exclude) ? exclude : [ exclude ];\n      exclude = exclude.concat(defaultExclude.filter(function(tag) {\n        return include.indexOf(tag) === -1;\n      }));\n    } else {\n      include = Array.isArray(runOnly) ? runOnly : [ runOnly ];\n      exclude = defaultExclude.filter(function(tag) {\n        return include.indexOf(tag) === -1;\n      });\n    }\n    matching = include.some(function(tag) {\n      return rule.tags.indexOf(tag) !== -1;\n    });\n    if (matching || include.length === 0 && rule.enabled !== false) {\n      return exclude.every(function(tag) {\n        return rule.tags.indexOf(tag) === -1;\n      });\n    } else {\n      return false;\n    }\n  }\n  axe.utils.ruleShouldRun = function(rule, context, options) {\n    'use strict';\n    var runOnly = options.runOnly || {};\n    var ruleOptions = (options.rules || {})[rule.id];\n    if (rule.pageLevel && !context.page) {\n      return false;\n    } else if (runOnly.type === 'rule') {\n      return runOnly.values.indexOf(rule.id) !== -1;\n    } else if (ruleOptions && typeof ruleOptions.enabled === 'boolean') {\n      return ruleOptions.enabled;\n    } else if (runOnly.type === 'tag' && runOnly.values) {\n      return matchTags(rule, runOnly.values);\n    } else {\n      return matchTags(rule, []);\n    }\n  };\n  'use strict';\n  function getDeepest(collection) {\n    'use strict';\n    return collection.sort(function(a, b) {\n      if (axe.utils.contains(a, b)) {\n        return 1;\n      }\n      return -1;\n    })[0];\n  }\n  function isNodeInContext(node, context) {\n    'use strict';\n    var include = context.include && getDeepest(context.include.filter(function(candidate) {\n      return axe.utils.contains(candidate, node);\n    }));\n    var exclude = context.exclude && getDeepest(context.exclude.filter(function(candidate) {\n      return axe.utils.contains(candidate, node);\n    }));\n    if (!exclude && include || exclude && axe.utils.contains(exclude, include)) {\n      return true;\n    }\n    return false;\n  }\n  function pushNode(result, nodes, context) {\n    'use strict';\n    for (var i = 0, l = nodes.length; i < l; i++) {\n      if (result.indexOf(nodes[i]) === -1 && isNodeInContext(nodes[i], context)) {\n        result.push(nodes[i]);\n      }\n    }\n  }\n  axe.utils.select = function select(selector, context) {\n    'use strict';\n    var result = [], candidate;\n    for (var i = 0, l = context.include.length; i < l; i++) {\n      candidate = context.include[i];\n      if (candidate.nodeType === candidate.ELEMENT_NODE && axe.utils.matchesSelector(candidate, selector)) {\n        pushNode(result, [ candidate ], context);\n      }\n      pushNode(result, candidate.querySelectorAll(selector), context);\n    }\n    return result.sort(axe.utils.nodeSorter);\n  };\n  'use strict';\n  axe.utils.toArray = function(thing) {\n    'use strict';\n    return Array.prototype.slice.call(thing);\n  };\n  'use strict';\n  var uuid;\n  (function(_global) {\n    var _rng;\n    var _crypto = _global.crypto || _global.msCrypto;\n    if (!_rng && _crypto && _crypto.getRandomValues) {\n      var _rnds8 = new Uint8Array(16);\n      _rng = function whatwgRNG() {\n        _crypto.getRandomValues(_rnds8);\n        return _rnds8;\n      };\n    }\n    if (!_rng) {\n      var _rnds = new Array(16);\n      _rng = function _rng() {\n        for (var i = 0, r; i < 16; i++) {\n          if ((i & 3) === 0) {\n            r = Math.random() * 4294967296;\n          }\n          _rnds[i] = r >>> ((i & 3) << 3) & 255;\n        }\n        return _rnds;\n      };\n    }\n    var BufferClass = typeof _global.Buffer == 'function' ? _global.Buffer : Array;\n    var _byteToHex = [];\n    var _hexToByte = {};\n    for (var i = 0; i < 256; i++) {\n      _byteToHex[i] = (i + 256).toString(16).substr(1);\n      _hexToByte[_byteToHex[i]] = i;\n    }\n    function parse(s, buf, offset) {\n      var i = buf && offset || 0, ii = 0;\n      buf = buf || [];\n      s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n        if (ii < 16) {\n          buf[i + ii++] = _hexToByte[oct];\n        }\n      });\n      while (ii < 16) {\n        buf[i + ii++] = 0;\n      }\n      return buf;\n    }\n    function unparse(buf, offset) {\n      var i = offset || 0, bth = _byteToHex;\n      return bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + '-' + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]] + bth[buf[i++]];\n    }\n    var _seedBytes = _rng();\n    var _nodeId = [ _seedBytes[0] | 1, _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5] ];\n    var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 16383;\n    var _lastMSecs = 0, _lastNSecs = 0;\n    function v1(options, buf, offset) {\n      var i = buf && offset || 0;\n      var b = buf || [];\n      options = options || {};\n      var clockseq = options.clockseq != null ? options.clockseq : _clockseq;\n      var msecs = options.msecs != null ? options.msecs : new Date().getTime();\n      var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;\n      var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 1e4;\n      if (dt < 0 && options.clockseq == null) {\n        clockseq = clockseq + 1 & 16383;\n      }\n      if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n        nsecs = 0;\n      }\n      if (nsecs >= 1e4) {\n        throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n      }\n      _lastMSecs = msecs;\n      _lastNSecs = nsecs;\n      _clockseq = clockseq;\n      msecs += 122192928e5;\n      var tl = ((msecs & 268435455) * 1e4 + nsecs) % 4294967296;\n      b[i++] = tl >>> 24 & 255;\n      b[i++] = tl >>> 16 & 255;\n      b[i++] = tl >>> 8 & 255;\n      b[i++] = tl & 255;\n      var tmh = msecs / 4294967296 * 1e4 & 268435455;\n      b[i++] = tmh >>> 8 & 255;\n      b[i++] = tmh & 255;\n      b[i++] = tmh >>> 24 & 15 | 16;\n      b[i++] = tmh >>> 16 & 255;\n      b[i++] = clockseq >>> 8 | 128;\n      b[i++] = clockseq & 255;\n      var node = options.node || _nodeId;\n      for (var n = 0; n < 6; n++) {\n        b[i + n] = node[n];\n      }\n      return buf ? buf : unparse(b);\n    }\n    function v4(options, buf, offset) {\n      var i = buf && offset || 0;\n      if (typeof options == 'string') {\n        buf = options == 'binary' ? new BufferClass(16) : null;\n        options = null;\n      }\n      options = options || {};\n      var rnds = options.random || (options.rng || _rng)();\n      rnds[6] = rnds[6] & 15 | 64;\n      rnds[8] = rnds[8] & 63 | 128;\n      if (buf) {\n        for (var ii = 0; ii < 16; ii++) {\n          buf[i + ii] = rnds[ii];\n        }\n      }\n      return buf || unparse(rnds);\n    }\n    uuid = v4;\n    uuid.v1 = v1;\n    uuid.v4 = v4;\n    uuid.parse = parse;\n    uuid.unparse = unparse;\n    uuid.BufferClass = BufferClass;\n  })(window);\n  'use strict';\n  axe._load({\n    data: {\n      rules: {\n        accesskeys: {\n          description: 'Ensures every accesskey attribute value is unique',\n          help: 'accesskey attribute value must be unique'\n        },\n        'area-alt': {\n          description: 'Ensures <area> elements of image maps have alternate text',\n          help: 'Active <area> elements must have alternate text'\n        },\n        'aria-allowed-attr': {\n          description: 'Ensures ARIA attributes are allowed for an element\\'s role',\n          help: 'Elements must only use allowed ARIA attributes'\n        },\n        'aria-required-attr': {\n          description: 'Ensures elements with ARIA roles have all required ARIA attributes',\n          help: 'Required ARIA attributes must be provided'\n        },\n        'aria-required-children': {\n          description: 'Ensures elements with an ARIA role that require child roles contain them',\n          help: 'Certain ARIA roles must contain particular children'\n        },\n        'aria-required-parent': {\n          description: 'Ensures elements with an ARIA role that require parent roles are contained by them',\n          help: 'Certain ARIA roles must be contained by particular parents'\n        },\n        'aria-roles': {\n          description: 'Ensures all elements with a role attribute use a valid value',\n          help: 'ARIA roles used must conform to valid values'\n        },\n        'aria-valid-attr-value': {\n          description: 'Ensures all ARIA attributes have valid values',\n          help: 'ARIA attributes must conform to valid values'\n        },\n        'aria-valid-attr': {\n          description: 'Ensures attributes that begin with aria- are valid ARIA attributes',\n          help: 'ARIA attributes must conform to valid names'\n        },\n        'audio-caption': {\n          description: 'Ensures <audio> elements have captions',\n          help: '<audio> elements must have a captions track'\n        },\n        blink: {\n          description: 'Ensures <blink> elements are not used',\n          help: '<blink> elements are deprecated and must not be used'\n        },\n        'button-name': {\n          description: 'Ensures buttons have discernible text',\n          help: 'Buttons must have discernible text'\n        },\n        bypass: {\n          description: 'Ensures each page has at least one mechanism for a user to bypass navigation and jump straight to the content',\n          help: 'Page must have means to bypass repeated blocks'\n        },\n        checkboxgroup: {\n          description: 'Ensures related <input type=\"checkbox\"> elements have a group and that that group designation is consistent',\n          help: 'Checkbox inputs with the same name attribute value must be part of a group'\n        },\n        'color-contrast': {\n          description: 'Ensures the contrast between foreground and background colors meets WCAG 2 AA contrast ratio thresholds',\n          help: 'Elements must have sufficient color contrast'\n        },\n        'definition-list': {\n          description: 'Ensures <dl> elements are structured correctly',\n          help: '<dl> elements must only directly contain properly-ordered <dt> and <dd> groups, <script> or <template> elements'\n        },\n        dlitem: {\n          description: 'Ensures <dt> and <dd> elements are contained by a <dl>',\n          help: '<dt> and <dd> elements must be contained by a <dl>'\n        },\n        'document-title': {\n          description: 'Ensures each HTML document contains a non-empty <title> element',\n          help: 'Documents must have <title> element to aid in navigation'\n        },\n        'duplicate-id': {\n          description: 'Ensures every id attribute value is unique',\n          help: 'id attribute value must be unique'\n        },\n        'empty-heading': {\n          description: 'Ensures headings have discernible text',\n          help: 'Headings must not be empty'\n        },\n        'frame-title-unique': {\n          description: 'Ensures <iframe> and <frame> elements contain a unique title attribute',\n          help: 'Frames must have a unique title attribute'\n        },\n        'frame-title': {\n          description: 'Ensures <iframe> and <frame> elements contain a non-empty title attribute',\n          help: 'Frames must have title attribute'\n        },\n        'heading-order': {\n          description: 'Ensures the order of headings is semantically correct',\n          help: 'Heading levels should only increase by one'\n        },\n        'href-no-hash': {\n          description: 'Ensures that href values are valid link references to promote only using anchors as links',\n          help: 'Anchors must only be used as links and must therefore have an href value that is a valid reference. Otherwise you should probably usa a button'\n        },\n        'html-has-lang': {\n          description: 'Ensures every HTML document has a lang attribute',\n          help: '<html> element must have a lang attribute'\n        },\n        'html-lang-valid': {\n          description: 'Ensures the lang attribute of the <html> element has a valid value',\n          help: '<html> element must have a valid value for the lang attribute'\n        },\n        'image-alt': {\n          description: 'Ensures <img> elements have alternate text or a role of none or presentation',\n          help: 'Images must have alternate text'\n        },\n        'image-redundant-alt': {\n          description: 'Ensure button and link text is not repeated as image alternative',\n          help: 'Text of buttons and links should not be repeated in the image alternative'\n        },\n        'input-image-alt': {\n          description: 'Ensures <input type=\"image\"> elements have alternate text',\n          help: 'Image buttons must have alternate text'\n        },\n        'label-title-only': {\n          description: 'Ensures that every form element is not solely labeled using the title or aria-describedby attributes',\n          help: 'Form elements should have a visible label'\n        },\n        label: {\n          description: 'Ensures every form element has a label',\n          help: 'Form elements must have labels'\n        },\n        'layout-table': {\n          description: 'Ensures presentational <table> elements do not use <th>, <caption> elements or the summary attribute',\n          help: 'Layout tables must not use data table elements'\n        },\n        'link-in-text-block': {\n          description: 'Links can be distinguished without relying on color',\n          help: 'Links must be distinguished from surrounding text in a way that does not rely on color'\n        },\n        'link-name': {\n          description: 'Ensures links have discernible text',\n          help: 'Links must have discernible text'\n        },\n        list: {\n          description: 'Ensures that lists are structured correctly',\n          help: '<ul> and <ol> must only directly contain <li>, <script> or <template> elements'\n        },\n        listitem: {\n          description: 'Ensures <li> elements are used semantically',\n          help: '<li> elements must be contained in a <ul> or <ol>'\n        },\n        marquee: {\n          description: 'Ensures <marquee> elements are not used',\n          help: '<marquee> elements are deprecated and must not be used'\n        },\n        'meta-refresh': {\n          description: 'Ensures <meta http-equiv=\"refresh\"> is not used',\n          help: 'Timed refresh must not exist'\n        },\n        'meta-viewport-large': {\n          description: 'Ensures <meta name=\"viewport\"> can scale a significant amount',\n          help: 'Users should be able to zoom and scale the text up to 500%'\n        },\n        'meta-viewport': {\n          description: 'Ensures <meta name=\"viewport\"> does not disable text scaling and zooming',\n          help: 'Zooming and scaling must not be disabled'\n        },\n        'object-alt': {\n          description: 'Ensures <object> elements have alternate text',\n          help: '<object> elements must have alternate text'\n        },\n        'p-as-heading': {\n          description: 'Ensure p elements are not used to style headings',\n          help: 'Bold, italic text and font-size are not used to style p elements as a heading'\n        },\n        radiogroup: {\n          description: 'Ensures related <input type=\"radio\"> elements have a group and that the group designation is consistent',\n          help: 'Radio inputs with the same name attribute value must be part of a group'\n        },\n        region: {\n          description: 'Ensures all content is contained within a landmark region',\n          help: 'Content should be contained in a landmark region'\n        },\n        'scope-attr-valid': {\n          description: 'Ensures the scope attribute is used correctly on tables',\n          help: 'scope attribute should be used correctly'\n        },\n        'server-side-image-map': {\n          description: 'Ensures that server-side image maps are not used',\n          help: 'Server-side image maps must not be used'\n        },\n        'skip-link': {\n          description: 'Ensures the first link on the page is a skip link',\n          help: 'The page should have a skip link as its first link'\n        },\n        tabindex: {\n          description: 'Ensures tabindex attribute values are not greater than 0',\n          help: 'Elements should not have tabindex greater than zero'\n        },\n        'table-duplicate-name': {\n          description: 'Ensure that tables do not have the same summary and caption',\n          help: 'The <caption> element should not contain the same text as the summary attribute'\n        },\n        'table-fake-caption': {\n          description: 'Ensure that tables with a caption use the <caption> element.',\n          help: 'Data or header cells should not be used to give caption to a data table.'\n        },\n        'td-has-header': {\n          description: 'Ensure that each non-empty data cell in a large table has one or more table headers',\n          help: 'All non-empty td element in table larger than 3 by 3 must have an associated table header'\n        },\n        'td-headers-attr': {\n          description: 'Ensure that each cell in a table using the headers refers to another cell in that table',\n          help: 'All cells in a table element that use the headers attribute must only refer to other cells of that same table'\n        },\n        'th-has-data-cells': {\n          description: 'Ensure that each table header in a data table refers to data cells',\n          help: 'All th element and elements with role=columnheader/rowheader must data cells which it describes'\n        },\n        'valid-lang': {\n          description: 'Ensures lang attributes have valid values',\n          help: 'lang attribute must have a valid value'\n        },\n        'video-caption': {\n          description: 'Ensures <video> elements have captions',\n          help: '<video> elements must have captions'\n        },\n        'video-description': {\n          description: 'Ensures <video> elements have audio descriptions',\n          help: '<video> elements must have an audio description track'\n        }\n      },\n      checks: {\n        accesskeys: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Accesskey attribute value is unique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has multiple elements with the same accesskey';\n              return out;\n            }\n          }\n        },\n        'non-empty-alt': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a non-empty alt attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no alt attribute or the alt attribute is empty';\n              return out;\n            }\n          }\n        },\n        'non-empty-title': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a title attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no title attribute or the title attribute is empty';\n              return out;\n            }\n          }\n        },\n        'aria-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'aria-label attribute exists and is not empty';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-label attribute does not exist or is empty';\n              return out;\n            }\n          }\n        },\n        'aria-labelledby': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'aria-labelledby attribute exists and references elements that are visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'aria-labelledby attribute does not exist, references elements that do not exist or references elements that are empty or not visible';\n              return out;\n            }\n          }\n        },\n        'aria-allowed-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attributes are used correctly for the defined role';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'ARIA attribute' + (it.data && it.data.length > 1 ? 's are' : ' is') + ' not allowed:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-required-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All required ARIA attributes are present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA attribute' + (it.data && it.data.length > 1 ? 's' : '') + ' not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-required-children': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Required ARIA children are present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA ' + (it.data && it.data.length > 1 ? 'children' : 'child') + ' role not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-required-parent': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Required ARIA parent role present';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Required ARIA parent' + (it.data && it.data.length > 1 ? 's' : '') + ' role not present:';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        invalidrole: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA role is valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Role must be one of the valid ARIA roles';\n              return out;\n            }\n          }\n        },\n        abstractrole: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Abstract roles are not used';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Abstract roles cannot be directly used';\n              return out;\n            }\n          }\n        },\n        'aria-valid-attr-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attribute values are valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Invalid ARIA attribute value' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        'aria-valid-attr': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ' are valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Invalid ARIA attribute name' + (it.data && it.data.length > 1 ? 's' : '') + ':';\n              var arr1 = it.data;\n              if (arr1) {\n                var value, i1 = -1, l1 = arr1.length - 1;\n                while (i1 < l1) {\n                  value = arr1[i1 += 1];\n                  out += ' ' + value;\n                }\n              }\n              return out;\n            }\n          }\n        },\n        caption: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The multimedia element has a captions track';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The multimedia element does not have a captions track';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'A captions track for this element could not be found';\n              return out;\n            }\n          }\n        },\n        'is-on-screen': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is not visible';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element is visible';\n              return out;\n            }\n          }\n        },\n        'non-empty-if-present': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element ';\n              if (it.data) {\n                out += 'has a non-empty value attribute';\n              } else {\n                out += 'does not have a value attribute';\n              }\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has a value attribute and the value attribute is empty';\n              return out;\n            }\n          }\n        },\n        'non-empty-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has a non-empty value attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has no value attribute or the value attribute is empty';\n              return out;\n            }\n          }\n        },\n        'button-has-visible-text': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has inner text that is visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have inner text that is visible to screen readers';\n              return out;\n            }\n          }\n        },\n        'role-presentation': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s default semantics were overriden with role=\"presentation\"';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s default semantics were not overridden with role=\"presentation\"';\n              return out;\n            }\n          }\n        },\n        'role-none': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s default semantics were overriden with role=\"none\"';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s default semantics were not overridden with role=\"none\"';\n              return out;\n            }\n          }\n        },\n        'focusable-no-name': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is not in tab order or has accessible text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element is in tab order and does not have accessible text';\n              return out;\n            }\n          }\n        },\n        'internal-link-present': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Valid skip link found';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'No valid skip link found';\n              return out;\n            }\n          }\n        },\n        'header-present': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has a header';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page does not have a header';\n              return out;\n            }\n          }\n        },\n        landmark: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Page has a landmark region';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Page does not have a landmark region';\n              return out;\n            }\n          }\n        },\n        'group-labelledby': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All elements with the name \"' + it.data.name + '\" reference the same element with aria-labelledby';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'All elements with the name \"' + it.data.name + '\" do not reference the same element with aria-labelledby';\n              return out;\n            }\n          }\n        },\n        fieldset: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element is contained in a fieldset';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '';\n              var code = it.data && it.data.failureCode;\n              if (code === 'no-legend') {\n                out += 'Fieldset does not have a legend as its first child';\n              } else if (code === 'empty-legend') {\n                out += 'Legend does not have text that is visible to screen readers';\n              } else if (code === 'mixed-inputs') {\n                out += 'Fieldset contains unrelated inputs';\n              } else if (code === 'no-group-label') {\n                out += 'ARIA group does not have aria-label or aria-labelledby';\n              } else if (code === 'group-mixed-inputs') {\n                out += 'ARIA group contains unrelated inputs';\n              } else {\n                out += 'Element does not have a containing fieldset or ARIA group';\n              }\n              return out;\n            }\n          }\n        },\n        'color-contrast': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has sufficient color contrast of ' + it.data.contrastRatio;\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has insufficient color contrast of ' + it.data.contrastRatio + ' (foreground color: ' + it.data.fgColor + ', background color: ' + it.data.bgColor + ', font size: ' + it.data.fontSize + ', font weight: ' + it.data.fontWeight + ')';\n              return out;\n            },\n            incomplete: {\n              bgImage: 'Element\\'s background color could not be determined due to a background image',\n              bgGradient: 'Element\\'s background color could not be determined due to a background gradient',\n              imgNode: 'Element\\'s background color could not be determined because element contains an image node',\n              bgOverlap: 'Element\\'s background color could not be determined because it is overlapped by another element',\n              fgAlpha: 'Element\\'s foreground color could not be determined because of alpha transparency',\n              default: 'Unable to determine contrast ratio'\n            }\n          }\n        },\n        'structured-dlitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'When not empty, element has both <dt> and <dd> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'When not empty, element does not have at least one <dt> element followed by at least one <dd> element';\n              return out;\n            }\n          }\n        },\n        'only-dlitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List element only has direct children that are allowed inside <dt> or <dd> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List element has direct children that are not allowed inside <dt> or <dd> elements';\n              return out;\n            }\n          }\n        },\n        dlitem: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Description list item has a <dl> parent element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Description list item does not have a <dl> parent element';\n              return out;\n            }\n          }\n        },\n        'doc-has-title': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has a non-empty <title> element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document does not have a non-empty <title> element';\n              return out;\n            }\n          }\n        },\n        'duplicate-id': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Document has no elements that share the same id attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Document has multiple elements with the same id attribute: ' + it.data;\n              return out;\n            }\n          }\n        },\n        'has-visible-text': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has text that is visible to screen readers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have text that is visible to screen readers';\n              return out;\n            }\n          }\n        },\n        'unique-frame-title': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element\\'s title attribute is unique';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element\\'s title attribute is not unique';\n              return out;\n            }\n          }\n        },\n        'heading-order': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Heading order valid';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Heading order invalid';\n              return out;\n            }\n          }\n        },\n        'href-no-hash': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Anchor does not have a href quals #';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Anchor has a href quals #';\n              return out;\n            }\n          }\n        },\n        'has-lang': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The <html> element has a lang attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The <html> element does not have a lang attribute';\n              return out;\n            }\n          }\n        },\n        'valid-lang': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Value of lang attribute is included in the list of valid languages';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Value of lang attribute not included in the list of valid languages';\n              return out;\n            }\n          }\n        },\n        'has-alt': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element has an alt attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element does not have an alt attribute';\n              return out;\n            }\n          }\n        },\n        'duplicate-img-label': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not duplicate existing text in <img> alt text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element contains <img> element with alt text that duplicates existing text';\n              return out;\n            }\n          }\n        },\n        'title-only': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element does not solely use title attribute for its label';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Only title used to generate label for form element';\n              return out;\n            }\n          }\n        },\n        'implicit-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element has an implicit (wrapped) <label>';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element does not have an implicit (wrapped) <label>';\n              return out;\n            }\n          }\n        },\n        'explicit-label': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element has an explicit <label>';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element does not have an explicit <label>';\n              return out;\n            }\n          }\n        },\n        'help-same-as-label': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Help text (title or aria-describedby) does not duplicate label text';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Help text (title or aria-describedby) text is the same as the label text';\n              return out;\n            }\n          }\n        },\n        'multiple-label': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Form element does not have multiple <label> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Form element has multiple <label> elements';\n              return out;\n            }\n          }\n        },\n        'has-th': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use <th> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses <th> elements';\n              return out;\n            }\n          }\n        },\n        'has-caption': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use <caption> element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses <caption> element';\n              return out;\n            }\n          }\n        },\n        'has-summary': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Layout table does not use summary attribute';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Layout table uses summary attribute';\n              return out;\n            }\n          }\n        },\n        'link-in-text-block': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Links can be distinguished from surrounding text in a way that does not rely on color';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Links can not be distinguished from surrounding text in a way that does not rely on color';\n              return out;\n            },\n            incomplete: {\n              bgContrast: 'Element\\'s contrast ratio could not be determined. Check for a distinct hover/focus style',\n              bgImage: 'Element\\'s contrast ratio could not be determined due to a background image',\n              bgGradient: 'Element\\'s contrast ratio could not be determined due to a background gradient',\n              imgNode: 'Element\\'s contrast ratio could not be determined because element contains an image node',\n              bgOverlap: 'Element\\'s contrast ratio could not be determined because of element overlap',\n              default: 'Unable to determine contrast ratio'\n            }\n          }\n        },\n        'only-listitems': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List element only has direct children that are allowed inside <li> elements';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List element has direct children that are not allowed inside <li> elements';\n              return out;\n            }\n          }\n        },\n        listitem: {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'List item has a <ul>, <ol> or role=\"list\" parent element';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'List item does not have a <ul>, <ol> or role=\"list\" parent element';\n              return out;\n            }\n          }\n        },\n        'meta-refresh': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not immediately refresh the page';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag forces timed refresh of page';\n              return out;\n            }\n          }\n        },\n        'meta-viewport-large': {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not prevent significant zooming';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag limits zooming';\n              return out;\n            }\n          }\n        },\n        'meta-viewport': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<meta> tag does not disable zooming';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = '<meta> tag disables zooming';\n              return out;\n            }\n          }\n        },\n        'p-as-heading': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = '<p> elements are not styled as headings';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Heading elements should be used instead of styled p elements';\n              return out;\n            }\n          }\n        },\n        region: {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Content contained by ARIA landmark';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Content not contained by an ARIA landmark';\n              return out;\n            }\n          }\n        },\n        'html5-scope': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Scope attribute is only used on table header elements (<th>)';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'In HTML 5, scope attributes may only be used on table header elements (<th>)';\n              return out;\n            }\n          }\n        },\n        'scope-value': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Scope attribute is used correctly';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The value of the scope attribute may only be \\'row\\' or \\'col\\'';\n              return out;\n            }\n          }\n        },\n        exists: {\n          impact: 'minor',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not exist';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element exists';\n              return out;\n            }\n          }\n        },\n        'skip-link': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Valid skip link found';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'No valid skip link found';\n              return out;\n            }\n          }\n        },\n        tabindex: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Element does not have a tabindex greater than 0';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Element has a tabindex greater than 0';\n              return out;\n            }\n          }\n        },\n        'same-caption-summary': {\n          impact: 'moderate',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'Content of summary attribute and <caption> are not duplicated';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Content of summary attribute and <caption> element are identical';\n              return out;\n            }\n          }\n        },\n        'caption-faked': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The first row of a table is not used as a caption';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The first row of the table should be a caption instead of a table cell';\n              return out;\n            }\n          }\n        },\n        'td-has-header': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All non-empty data cells have table headers';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Some non-empty data cells do not have table headers';\n              return out;\n            }\n          }\n        },\n        'td-headers-attr': {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The headers attribute is exclusively used to refer to other cells in the table';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The headers attribute is not exclusively used to refer to other cells in the table';\n              return out;\n            }\n          }\n        },\n        'th-has-data-cells': {\n          impact: 'critical',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'All table header cells refer to data cells';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'Not all table header cells refer to data cells';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'Table data cells are missing or empty';\n              return out;\n            }\n          }\n        },\n        description: {\n          impact: 'serious',\n          messages: {\n            pass: function anonymous(it) {\n              var out = 'The multimedia element has an audio description track';\n              return out;\n            },\n            fail: function anonymous(it) {\n              var out = 'The multimedia element does not have an audio description track';\n              return out;\n            },\n            incomplete: function anonymous(it) {\n              var out = 'An audio description track for this element could not be found';\n              return out;\n            }\n          }\n        }\n      },\n      failureSummaries: {\n        any: {\n          failureMessage: function anonymous(it) {\n            var out = 'Fix any of the following:';\n            var arr1 = it;\n            if (arr1) {\n              var value, i1 = -1, l1 = arr1.length - 1;\n              while (i1 < l1) {\n                value = arr1[i1 += 1];\n                out += '\\n  ' + value.split('\\n').join('\\n  ');\n              }\n            }\n            return out;\n          }\n        },\n        none: {\n          failureMessage: function anonymous(it) {\n            var out = 'Fix all of the following:';\n            var arr1 = it;\n            if (arr1) {\n              var value, i1 = -1, l1 = arr1.length - 1;\n              while (i1 < l1) {\n                value = arr1[i1 += 1];\n                out += '\\n  ' + value.split('\\n').join('\\n  ');\n              }\n            }\n            return out;\n          }\n        }\n      }\n    },\n    rules: [ {\n      id: 'accesskeys',\n      selector: '[accesskey]',\n      excludeHidden: false,\n      tags: [ 'wcag2a', 'wcag211', 'cat.keyboard' ],\n      all: [],\n      any: [],\n      none: [ 'accesskeys' ]\n    }, {\n      id: 'area-alt',\n      selector: 'map area[href]',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-alt', 'non-empty-title', 'aria-label', 'aria-labelledby' ],\n      none: []\n    }, {\n      id: 'aria-allowed-attr',\n      matches: function matches(node) {\n        var role = node.getAttribute('role');\n        if (!role) {\n          role = axe.commons.aria.implicitRole(node);\n        }\n        var allowed = axe.commons.aria.allowedAttr(role);\n        if (role && allowed) {\n          var aria = /^aria-/;\n          if (node.hasAttributes()) {\n            var attrs = node.attributes;\n            for (var i = 0, l = attrs.length; i < l; i++) {\n              if (aria.test(attrs[i].name)) {\n                return true;\n              }\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag411', 'wcag412' ],\n      all: [],\n      any: [ 'aria-allowed-attr' ],\n      none: []\n    }, {\n      id: 'aria-required-attr',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag411', 'wcag412' ],\n      all: [],\n      any: [ 'aria-required-attr' ],\n      none: []\n    }, {\n      id: 'aria-required-children',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'aria-required-children' ],\n      none: []\n    }, {\n      id: 'aria-required-parent',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'aria-required-parent' ],\n      none: []\n    }, {\n      id: 'aria-roles',\n      selector: '[role]',\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131', 'wcag411', 'wcag412' ],\n      all: [],\n      any: [],\n      none: [ 'invalidrole', 'abstractrole' ]\n    }, {\n      id: 'aria-valid-attr-value',\n      matches: function matches(node) {\n        var aria = /^aria-/;\n        if (node.hasAttributes()) {\n          var attrs = node.attributes;\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            if (aria.test(attrs[i].name)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag131', 'wcag411', 'wcag412' ],\n      all: [],\n      any: [ {\n        options: [],\n        id: 'aria-valid-attr-value'\n      } ],\n      none: []\n    }, {\n      id: 'aria-valid-attr',\n      matches: function matches(node) {\n        var aria = /^aria-/;\n        if (node.hasAttributes()) {\n          var attrs = node.attributes;\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            if (aria.test(attrs[i].name)) {\n              return true;\n            }\n          }\n        }\n        return false;\n      },\n      tags: [ 'cat.aria', 'wcag2a', 'wcag411' ],\n      all: [],\n      any: [ {\n        options: [],\n        id: 'aria-valid-attr'\n      } ],\n      none: []\n    }, {\n      id: 'audio-caption',\n      selector: 'audio',\n      excludeHidden: false,\n      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag122', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [],\n      none: [ 'caption' ]\n    }, {\n      id: 'blink',\n      selector: 'blink',\n      excludeHidden: false,\n      tags: [ 'cat.time-and-media', 'wcag2a', 'wcag222', 'section508', 'section508.22.j' ],\n      all: [],\n      any: [],\n      none: [ 'is-on-screen' ]\n    }, {\n      id: 'button-name',\n      selector: 'button, [role=\"button\"], input[type=\"button\"], input[type=\"submit\"], input[type=\"reset\"]',\n      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag412', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-if-present', 'non-empty-value', 'button-has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none' ],\n      none: [ 'focusable-no-name' ]\n    }, {\n      id: 'bypass',\n      selector: 'html',\n      pageLevel: true,\n      matches: function matches(node) {\n        return !!node.querySelector('a[href]');\n      },\n      tags: [ 'cat.keyboard', 'wcag2a', 'wcag241', 'section508', 'section508.22.o' ],\n      all: [],\n      any: [ 'internal-link-present', 'header-present', 'landmark' ],\n      none: []\n    }, {\n      id: 'checkboxgroup',\n      selector: 'input[type=checkbox][name]',\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [ 'group-labelledby', 'fieldset' ],\n      none: []\n    }, {\n      id: 'color-contrast',\n      matches: function matches(node) {\n        var nodeName = node.nodeName.toUpperCase(), nodeType = node.type, doc = document;\n        if (node.getAttribute('aria-disabled') === 'true' || axe.commons.dom.findUp(node, '[aria-disabled=\"true\"]')) {\n          return false;\n        }\n        if (nodeName === 'INPUT') {\n          return [ 'hidden', 'range', 'color', 'checkbox', 'radio', 'image' ].indexOf(nodeType) === -1 && !node.disabled;\n        }\n        if (nodeName === 'SELECT') {\n          return !!node.options.length && !node.disabled;\n        }\n        if (nodeName === 'TEXTAREA') {\n          return !node.disabled;\n        }\n        if (nodeName === 'OPTION') {\n          return false;\n        }\n        if (nodeName === 'BUTTON' && node.disabled || axe.commons.dom.findUp(node, 'button[disabled]')) {\n          return false;\n        }\n        if (nodeName === 'FIELDSET' && node.disabled || axe.commons.dom.findUp(node, 'fieldset[disabled]')) {\n          return false;\n        }\n        var nodeParentLabel = axe.commons.dom.findUp(node, 'label');\n        if (nodeName === 'LABEL' || nodeParentLabel) {\n          var relevantNode = node;\n          if (nodeParentLabel) {\n            relevantNode = nodeParentLabel;\n          }\n          var candidate = relevantNode.htmlFor && doc.getElementById(relevantNode.htmlFor);\n          if (candidate && candidate.disabled) {\n            return false;\n          }\n          var candidate = node.querySelector('input:not([type=\"hidden\"]):not([type=\"image\"])' + ':not([type=\"button\"]):not([type=\"submit\"]):not([type=\"reset\"]), select, textarea');\n          if (candidate && candidate.disabled) {\n            return false;\n          }\n        }\n        if (node.id) {\n          var candidate = doc.querySelector('[aria-labelledby~=' + axe.commons.utils.escapeSelector(node.id) + ']');\n          if (candidate && candidate.disabled) {\n            return false;\n          }\n        }\n        if (axe.commons.text.visible(node, false, true) === '') {\n          return false;\n        }\n        var range = document.createRange(), childNodes = node.childNodes, length = childNodes.length, child, index;\n        for (index = 0; index < length; index++) {\n          child = childNodes[index];\n          if (child.nodeType === 3 && axe.commons.text.sanitize(child.nodeValue) !== '') {\n            range.selectNodeContents(child);\n          }\n        }\n        var rects = range.getClientRects();\n        length = rects.length;\n        for (index = 0; index < length; index++) {\n          if (axe.commons.dom.visuallyOverlaps(rects[index], node)) {\n            return true;\n          }\n        }\n        return false;\n      },\n      excludeHidden: false,\n      options: {\n        noScroll: false\n      },\n      tags: [ 'cat.color', 'wcag2aa', 'wcag143' ],\n      all: [],\n      any: [ 'color-contrast' ],\n      none: []\n    }, {\n      id: 'definition-list',\n      selector: 'dl:not([role])',\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'structured-dlitems', 'only-dlitems' ]\n    }, {\n      id: 'dlitem',\n      selector: 'dd:not([role]), dt:not([role])',\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'dlitem' ],\n      none: []\n    }, {\n      id: 'document-title',\n      selector: 'html',\n      matches: function matches(node) {\n        return node.ownerDocument.defaultView.self === node.ownerDocument.defaultView.top;\n      },\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag242' ],\n      all: [],\n      any: [ 'doc-has-title' ],\n      none: []\n    }, {\n      id: 'duplicate-id',\n      selector: '[id]',\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag411' ],\n      all: [],\n      any: [ 'duplicate-id' ],\n      none: []\n    }, {\n      id: 'empty-heading',\n      selector: 'h1, h2, h3, h4, h5, h6, [role=\"heading\"]',\n      enabled: true,\n      tags: [ 'cat.name-role-value', 'best-practice' ],\n      all: [],\n      any: [ 'has-visible-text', 'role-presentation', 'role-none' ],\n      none: []\n    }, {\n      id: 'frame-title-unique',\n      selector: 'frame[title]:not([title=\\'\\']), iframe[title]:not([title=\\'\\'])',\n      matches: function matches(node) {\n        var title = node.getAttribute('title');\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      },\n      tags: [ 'cat.text-alternatives', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'unique-frame-title' ]\n    }, {\n      id: 'frame-title',\n      selector: 'frame, iframe',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag241', 'section508', 'section508.22.i' ],\n      all: [],\n      any: [ 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n      none: []\n    }, {\n      id: 'heading-order',\n      selector: 'h1,h2,h3,h4,h5,h6,[role=heading]',\n      enabled: false,\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'heading-order' ],\n      none: []\n    }, {\n      id: 'href-no-hash',\n      selector: 'a[href]',\n      enabled: false,\n      tags: [ 'cat.semantics', 'best-practice' ],\n      all: [],\n      any: [ 'href-no-hash' ],\n      none: []\n    }, {\n      id: 'html-has-lang',\n      selector: 'html',\n      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n      all: [],\n      any: [ 'has-lang' ],\n      none: []\n    }, {\n      id: 'html-lang-valid',\n      selector: 'html[lang]',\n      tags: [ 'cat.language', 'wcag2a', 'wcag311' ],\n      all: [],\n      any: [],\n      none: [ {\n        options: [ 'aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'in', 'io', 'is', 'it', 'iu', 'iw', 'ja', 'ji', 'jv', 'jw', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mo', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu', 'aaa', 'aab', 'aac', 'aad', 'aae', 'aaf', 'aag', 'aah', 'aai', 'aak', 'aal', 'aam', 'aan', 'aao', 'aap', 'aaq', 'aas', 'aat', 'aau', 'aav', 'aaw', 'aax', 'aaz', 'aba', 'abb', 'abc', 'abd', 'abe', 'abf', 'abg', 'abh', 'abi', 'abj', 'abl', 'abm', 'abn', 'abo', 'abp', 'abq', 'abr', 'abs', 'abt', 'abu', 'abv', 'abw', 'abx', 'aby', 'abz', 'aca', 'acb', 'acd', 'ace', 'acf', 'ach', 'aci', 'ack', 'acl', 'acm', 'acn', 'acp', 'acq', 'acr', 'acs', 'act', 'acu', 'acv', 'acw', 'acx', 'acy', 'acz', 'ada', 'adb', 'add', 'ade', 'adf', 'adg', 'adh', 'adi', 'adj', 'adl', 'adn', 'ado', 'adp', 'adq', 'adr', 'ads', 'adt', 'adu', 'adw', 'adx', 'ady', 'adz', 'aea', 'aeb', 'aec', 'aed', 'aee', 'aek', 'ael', 'aem', 'aen', 'aeq', 'aer', 'aes', 'aeu', 'aew', 'aey', 'aez', 'afa', 'afb', 'afd', 'afe', 'afg', 'afh', 'afi', 'afk', 'afn', 'afo', 'afp', 'afs', 'aft', 'afu', 'afz', 'aga', 'agb', 'agc', 'agd', 'age', 'agf', 'agg', 'agh', 'agi', 'agj', 'agk', 'agl', 'agm', 'agn', 'ago', 'agp', 'agq', 'agr', 'ags', 'agt', 'agu', 'agv', 'agw', 'agx', 'agy', 'agz', 'aha', 'ahb', 'ahg', 'ahh', 'ahi', 'ahk', 'ahl', 'ahm', 'ahn', 'aho', 'ahp', 'ahr', 'ahs', 'aht', 'aia', 'aib', 'aic', 'aid', 'aie', 'aif', 'aig', 'aih', 'aii', 'aij', 'aik', 'ail', 'aim', 'ain', 'aio', 'aip', 'aiq', 'air', 'ais', 'ait', 'aiw', 'aix', 'aiy', 'aja', 'ajg', 'aji', 'ajn', 'ajp', 'ajt', 'aju', 'ajw', 'ajz', 'akb', 'akc', 'akd', 'ake', 'akf', 'akg', 'akh', 'aki', 'akj', 'akk', 'akl', 'akm', 'ako', 'akp', 'akq', 'akr', 'aks', 'akt', 'aku', 'akv', 'akw', 'akx', 'aky', 'akz', 'ala', 'alc', 'ald', 'ale', 'alf', 'alg', 'alh', 'ali', 'alj', 'alk', 'all', 'alm', 'aln', 'alo', 'alp', 'alq', 'alr', 'als', 'alt', 'alu', 'alv', 'alw', 'alx', 'aly', 'alz', 'ama', 'amb', 'amc', 'ame', 'amf', 'amg', 'ami', 'amj', 'amk', 'aml', 'amm', 'amn', 'amo', 'amp', 'amq', 'amr', 'ams', 'amt', 'amu', 'amv', 'amw', 'amx', 'amy', 'amz', 'ana', 'anb', 'anc', 'and', 'ane', 'anf', 'ang', 'anh', 'ani', 'anj', 'ank', 'anl', 'anm', 'ann', 'ano', 'anp', 'anq', 'anr', 'ans', 'ant', 'anu', 'anv', 'anw', 'anx', 'any', 'anz', 'aoa', 'aob', 'aoc', 'aod', 'aoe', 'aof', 'aog', 'aoh', 'aoi', 'aoj', 'aok', 'aol', 'aom', 'aon', 'aor', 'aos', 'aot', 'aou', 'aox', 'aoz', 'apa', 'apb', 'apc', 'apd', 'ape', 'apf', 'apg', 'aph', 'api', 'apj', 'apk', 'apl', 'apm', 'apn', 'apo', 'app', 'apq', 'apr', 'aps', 'apt', 'apu', 'apv', 'apw', 'apx', 'apy', 'apz', 'aqa', 'aqc', 'aqd', 'aqg', 'aql', 'aqm', 'aqn', 'aqp', 'aqr', 'aqt', 'aqz', 'arb', 'arc', 'ard', 'are', 'arh', 'ari', 'arj', 'ark', 'arl', 'arn', 'aro', 'arp', 'arq', 'arr', 'ars', 'art', 'aru', 'arv', 'arw', 'arx', 'ary', 'arz', 'asa', 'asb', 'asc', 'asd', 'ase', 'asf', 'asg', 'ash', 'asi', 'asj', 'ask', 'asl', 'asn', 'aso', 'asp', 'asq', 'asr', 'ass', 'ast', 'asu', 'asv', 'asw', 'asx', 'asy', 'asz', 'ata', 'atb', 'atc', 'atd', 'ate', 'atg', 'ath', 'ati', 'atj', 'atk', 'atl', 'atm', 'atn', 'ato', 'atp', 'atq', 'atr', 'ats', 'att', 'atu', 'atv', 'atw', 'atx', 'aty', 'atz', 'aua', 'aub', 'auc', 'aud', 'aue', 'auf', 'aug', 'auh', 'aui', 'auj', 'auk', 'aul', 'aum', 'aun', 'auo', 'aup', 'auq', 'aur', 'aus', 'aut', 'auu', 'auw', 'aux', 'auy', 'auz', 'avb', 'avd', 'avi', 'avk', 'avl', 'avm', 'avn', 'avo', 'avs', 'avt', 'avu', 'avv', 'awa', 'awb', 'awc', 'awd', 'awe', 'awg', 'awh', 'awi', 'awk', 'awm', 'awn', 'awo', 'awr', 'aws', 'awt', 'awu', 'awv', 'aww', 'awx', 'awy', 'axb', 'axe', 'axg', 'axk', 'axl', 'axm', 'axx', 'aya', 'ayb', 'ayc', 'ayd', 'aye', 'ayg', 'ayh', 'ayi', 'ayk', 'ayl', 'ayn', 'ayo', 'ayp', 'ayq', 'ayr', 'ays', 'ayt', 'ayu', 'ayx', 'ayy', 'ayz', 'aza', 'azb', 'azc', 'azd', 'azg', 'azj', 'azm', 'azn', 'azo', 'azt', 'azz', 'baa', 'bab', 'bac', 'bad', 'bae', 'baf', 'bag', 'bah', 'bai', 'baj', 'bal', 'ban', 'bao', 'bap', 'bar', 'bas', 'bat', 'bau', 'bav', 'baw', 'bax', 'bay', 'baz', 'bba', 'bbb', 'bbc', 'bbd', 'bbe', 'bbf', 'bbg', 'bbh', 'bbi', 'bbj', 'bbk', 'bbl', 'bbm', 'bbn', 'bbo', 'bbp', 'bbq', 'bbr', 'bbs', 'bbt', 'bbu', 'bbv', 'bbw', 'bbx', 'bby', 'bbz', 'bca', 'bcb', 'bcc', 'bcd', 'bce', 'bcf', 'bcg', 'bch', 'bci', 'bcj', 'bck', 'bcl', 'bcm', 'bcn', 'bco', 'bcp', 'bcq', 'bcr', 'bcs', 'bct', 'bcu', 'bcv', 'bcw', 'bcy', 'bcz', 'bda', 'bdb', 'bdc', 'bdd', 'bde', 'bdf', 'bdg', 'bdh', 'bdi', 'bdj', 'bdk', 'bdl', 'bdm', 'bdn', 'bdo', 'bdp', 'bdq', 'bdr', 'bds', 'bdt', 'bdu', 'bdv', 'bdw', 'bdx', 'bdy', 'bdz', 'bea', 'beb', 'bec', 'bed', 'bee', 'bef', 'beg', 'beh', 'bei', 'bej', 'bek', 'bem', 'beo', 'bep', 'beq', 'ber', 'bes', 'bet', 'beu', 'bev', 'bew', 'bex', 'bey', 'bez', 'bfa', 'bfb', 'bfc', 'bfd', 'bfe', 'bff', 'bfg', 'bfh', 'bfi', 'bfj', 'bfk', 'bfl', 'bfm', 'bfn', 'bfo', 'bfp', 'bfq', 'bfr', 'bfs', 'bft', 'bfu', 'bfw', 'bfx', 'bfy', 'bfz', 'bga', 'bgb', 'bgc', 'bgd', 'bge', 'bgf', 'bgg', 'bgi', 'bgj', 'bgk', 'bgl', 'bgm', 'bgn', 'bgo', 'bgp', 'bgq', 'bgr', 'bgs', 'bgt', 'bgu', 'bgv', 'bgw', 'bgx', 'bgy', 'bgz', 'bha', 'bhb', 'bhc', 'bhd', 'bhe', 'bhf', 'bhg', 'bhh', 'bhi', 'bhj', 'bhk', 'bhl', 'bhm', 'bhn', 'bho', 'bhp', 'bhq', 'bhr', 'bhs', 'bht', 'bhu', 'bhv', 'bhw', 'bhx', 'bhy', 'bhz', 'bia', 'bib', 'bic', 'bid', 'bie', 'bif', 'big', 'bij', 'bik', 'bil', 'bim', 'bin', 'bio', 'bip', 'biq', 'bir', 'bit', 'biu', 'biv', 'biw', 'bix', 'biy', 'biz', 'bja', 'bjb', 'bjc', 'bjd', 'bje', 'bjf', 'bjg', 'bjh', 'bji', 'bjj', 'bjk', 'bjl', 'bjm', 'bjn', 'bjo', 'bjp', 'bjq', 'bjr', 'bjs', 'bjt', 'bju', 'bjv', 'bjw', 'bjx', 'bjy', 'bjz', 'bka', 'bkb', 'bkc', 'bkd', 'bkf', 'bkg', 'bkh', 'bki', 'bkj', 'bkk', 'bkl', 'bkm', 'bkn', 'bko', 'bkp', 'bkq', 'bkr', 'bks', 'bkt', 'bku', 'bkv', 'bkw', 'bkx', 'bky', 'bkz', 'bla', 'blb', 'blc', 'bld', 'ble', 'blf', 'blg', 'blh', 'bli', 'blj', 'blk', 'bll', 'blm', 'bln', 'blo', 'blp', 'blq', 'blr', 'bls', 'blt', 'blv', 'blw', 'blx', 'bly', 'blz', 'bma', 'bmb', 'bmc', 'bmd', 'bme', 'bmf', 'bmg', 'bmh', 'bmi', 'bmj', 'bmk', 'bml', 'bmm', 'bmn', 'bmo', 'bmp', 'bmq', 'bmr', 'bms', 'bmt', 'bmu', 'bmv', 'bmw', 'bmx', 'bmy', 'bmz', 'bna', 'bnb', 'bnc', 'bnd', 'bne', 'bnf', 'bng', 'bni', 'bnj', 'bnk', 'bnl', 'bnm', 'bnn', 'bno', 'bnp', 'bnq', 'bnr', 'bns', 'bnt', 'bnu', 'bnv', 'bnw', 'bnx', 'bny', 'bnz', 'boa', 'bob', 'boe', 'bof', 'bog', 'boh', 'boi', 'boj', 'bok', 'bol', 'bom', 'bon', 'boo', 'bop', 'boq', 'bor', 'bot', 'bou', 'bov', 'bow', 'box', 'boy', 'boz', 'bpa', 'bpb', 'bpd', 'bpg', 'bph', 'bpi', 'bpj', 'bpk', 'bpl', 'bpm', 'bpn', 'bpo', 'bpp', 'bpq', 'bpr', 'bps', 'bpt', 'bpu', 'bpv', 'bpw', 'bpx', 'bpy', 'bpz', 'bqa', 'bqb', 'bqc', 'bqd', 'bqf', 'bqg', 'bqh', 'bqi', 'bqj', 'bqk', 'bql', 'bqm', 'bqn', 'bqo', 'bqp', 'bqq', 'bqr', 'bqs', 'bqt', 'bqu', 'bqv', 'bqw', 'bqx', 'bqy', 'bqz', 'bra', 'brb', 'brc', 'brd', 'brf', 'brg', 'brh', 'bri', 'brj', 'brk', 'brl', 'brm', 'brn', 'bro', 'brp', 'brq', 'brr', 'brs', 'brt', 'bru', 'brv', 'brw', 'brx', 'bry', 'brz', 'bsa', 'bsb', 'bsc', 'bse', 'bsf', 'bsg', 'bsh', 'bsi', 'bsj', 'bsk', 'bsl', 'bsm', 'bsn', 'bso', 'bsp', 'bsq', 'bsr', 'bss', 'bst', 'bsu', 'bsv', 'bsw', 'bsx', 'bsy', 'bta', 'btb', 'btc', 'btd', 'bte', 'btf', 'btg', 'bth', 'bti', 'btj', 'btk', 'btl', 'btm', 'btn', 'bto', 'btp', 'btq', 'btr', 'bts', 'btt', 'btu', 'btv', 'btw', 'btx', 'bty', 'btz', 'bua', 'bub', 'buc', 'bud', 'bue', 'buf', 'bug', 'buh', 'bui', 'buj', 'buk', 'bum', 'bun', 'buo', 'bup', 'buq', 'bus', 'but', 'buu', 'buv', 'buw', 'bux', 'buy', 'buz', 'bva', 'bvb', 'bvc', 'bvd', 'bve', 'bvf', 'bvg', 'bvh', 'bvi', 'bvj', 'bvk', 'bvl', 'bvm', 'bvn', 'bvo', 'bvp', 'bvq', 'bvr', 'bvt', 'bvu', 'bvv', 'bvw', 'bvx', 'bvy', 'bvz', 'bwa', 'bwb', 'bwc', 'bwd', 'bwe', 'bwf', 'bwg', 'bwh', 'bwi', 'bwj', 'bwk', 'bwl', 'bwm', 'bwn', 'bwo', 'bwp', 'bwq', 'bwr', 'bws', 'bwt', 'bwu', 'bww', 'bwx', 'bwy', 'bwz', 'bxa', 'bxb', 'bxc', 'bxd', 'bxe', 'bxf', 'bxg', 'bxh', 'bxi', 'bxj', 'bxk', 'bxl', 'bxm', 'bxn', 'bxo', 'bxp', 'bxq', 'bxr', 'bxs', 'bxu', 'bxv', 'bxw', 'bxx', 'bxz', 'bya', 'byb', 'byc', 'byd', 'bye', 'byf', 'byg', 'byh', 'byi', 'byj', 'byk', 'byl', 'bym', 'byn', 'byo', 'byp', 'byq', 'byr', 'bys', 'byt', 'byv', 'byw', 'byx', 'byy', 'byz', 'bza', 'bzb', 'bzc', 'bzd', 'bze', 'bzf', 'bzg', 'bzh', 'bzi', 'bzj', 'bzk', 'bzl', 'bzm', 'bzn', 'bzo', 'bzp', 'bzq', 'bzr', 'bzs', 'bzt', 'bzu', 'bzv', 'bzw', 'bzx', 'bzy', 'bzz', 'caa', 'cab', 'cac', 'cad', 'cae', 'caf', 'cag', 'cah', 'cai', 'caj', 'cak', 'cal', 'cam', 'can', 'cao', 'cap', 'caq', 'car', 'cas', 'cau', 'cav', 'caw', 'cax', 'cay', 'caz', 'cba', 'cbb', 'cbc', 'cbd', 'cbe', 'cbg', 'cbh', 'cbi', 'cbj', 'cbk', 'cbl', 'cbn', 'cbo', 'cbq', 'cbr', 'cbs', 'cbt', 'cbu', 'cbv', 'cbw', 'cby', 'cca', 'ccc', 'ccd', 'cce', 'ccg', 'cch', 'ccj', 'ccl', 'ccm', 'ccn', 'cco', 'ccp', 'ccq', 'ccr', 'ccs', 'cda', 'cdc', 'cdd', 'cde', 'cdf', 'cdg', 'cdh', 'cdi', 'cdj', 'cdm', 'cdn', 'cdo', 'cdr', 'cds', 'cdy', 'cdz', 'cea', 'ceb', 'ceg', 'cek', 'cel', 'cen', 'cet', 'cfa', 'cfd', 'cfg', 'cfm', 'cga', 'cgc', 'cgg', 'cgk', 'chb', 'chc', 'chd', 'chf', 'chg', 'chh', 'chj', 'chk', 'chl', 'chm', 'chn', 'cho', 'chp', 'chq', 'chr', 'cht', 'chw', 'chx', 'chy', 'chz', 'cia', 'cib', 'cic', 'cid', 'cie', 'cih', 'cik', 'cim', 'cin', 'cip', 'cir', 'ciw', 'ciy', 'cja', 'cje', 'cjh', 'cji', 'cjk', 'cjm', 'cjn', 'cjo', 'cjp', 'cjr', 'cjs', 'cjv', 'cjy', 'cka', 'ckb', 'ckh', 'ckl', 'ckn', 'cko', 'ckq', 'ckr', 'cks', 'ckt', 'cku', 'ckv', 'ckx', 'cky', 'ckz', 'cla', 'clc', 'cld', 'cle', 'clh', 'cli', 'clj', 'clk', 'cll', 'clm', 'clo', 'clt', 'clu', 'clw', 'cly', 'cma', 'cmc', 'cme', 'cmg', 'cmi', 'cmk', 'cml', 'cmm', 'cmn', 'cmo', 'cmr', 'cms', 'cmt', 'cna', 'cnb', 'cnc', 'cng', 'cnh', 'cni', 'cnk', 'cnl', 'cno', 'cns', 'cnt', 'cnu', 'cnw', 'cnx', 'coa', 'cob', 'coc', 'cod', 'coe', 'cof', 'cog', 'coh', 'coj', 'cok', 'col', 'com', 'con', 'coo', 'cop', 'coq', 'cot', 'cou', 'cov', 'cow', 'cox', 'coy', 'coz', 'cpa', 'cpb', 'cpc', 'cpe', 'cpf', 'cpg', 'cpi', 'cpn', 'cpo', 'cpp', 'cps', 'cpu', 'cpx', 'cpy', 'cqd', 'cqu', 'cra', 'crb', 'crc', 'crd', 'crf', 'crg', 'crh', 'cri', 'crj', 'crk', 'crl', 'crm', 'crn', 'cro', 'crp', 'crq', 'crr', 'crs', 'crt', 'crv', 'crw', 'crx', 'cry', 'crz', 'csa', 'csb', 'csc', 'csd', 'cse', 'csf', 'csg', 'csh', 'csi', 'csj', 'csk', 'csl', 'csm', 'csn', 'cso', 'csq', 'csr', 'css', 'cst', 'csu', 'csv', 'csw', 'csy', 'csz', 'cta', 'ctc', 'ctd', 'cte', 'ctg', 'cth', 'ctl', 'ctm', 'ctn', 'cto', 'ctp', 'cts', 'ctt', 'ctu', 'ctz', 'cua', 'cub', 'cuc', 'cug', 'cuh', 'cui', 'cuj', 'cuk', 'cul', 'cum', 'cuo', 'cup', 'cuq', 'cur', 'cus', 'cut', 'cuu', 'cuv', 'cuw', 'cux', 'cvg', 'cvn', 'cwa', 'cwb', 'cwd', 'cwe', 'cwg', 'cwt', 'cya', 'cyb', 'cyo', 'czh', 'czk', 'czn', 'czo', 'czt', 'daa', 'dac', 'dad', 'dae', 'daf', 'dag', 'dah', 'dai', 'daj', 'dak', 'dal', 'dam', 'dao', 'dap', 'daq', 'dar', 'das', 'dau', 'dav', 'daw', 'dax', 'day', 'daz', 'dba', 'dbb', 'dbd', 'dbe', 'dbf', 'dbg', 'dbi', 'dbj', 'dbl', 'dbm', 'dbn', 'dbo', 'dbp', 'dbq', 'dbr', 'dbt', 'dbu', 'dbv', 'dbw', 'dby', 'dcc', 'dcr', 'dda', 'ddd', 'dde', 'ddg', 'ddi', 'ddj', 'ddn', 'ddo', 'ddr', 'dds', 'ddw', 'dec', 'ded', 'dee', 'def', 'deg', 'deh', 'dei', 'dek', 'del', 'dem', 'den', 'dep', 'deq', 'der', 'des', 'dev', 'dez', 'dga', 'dgb', 'dgc', 'dgd', 'dge', 'dgg', 'dgh', 'dgi', 'dgk', 'dgl', 'dgn', 'dgo', 'dgr', 'dgs', 'dgt', 'dgu', 'dgw', 'dgx', 'dgz', 'dha', 'dhd', 'dhg', 'dhi', 'dhl', 'dhm', 'dhn', 'dho', 'dhr', 'dhs', 'dhu', 'dhv', 'dhw', 'dhx', 'dia', 'dib', 'dic', 'did', 'dif', 'dig', 'dih', 'dii', 'dij', 'dik', 'dil', 'dim', 'din', 'dio', 'dip', 'diq', 'dir', 'dis', 'dit', 'diu', 'diw', 'dix', 'diy', 'diz', 'dja', 'djb', 'djc', 'djd', 'dje', 'djf', 'dji', 'djj', 'djk', 'djl', 'djm', 'djn', 'djo', 'djr', 'dju', 'djw', 'dka', 'dkk', 'dkl', 'dkr', 'dks', 'dkx', 'dlg', 'dlk', 'dlm', 'dln', 'dma', 'dmb', 'dmc', 'dmd', 'dme', 'dmg', 'dmk', 'dml', 'dmm', 'dmn', 'dmo', 'dmr', 'dms', 'dmu', 'dmv', 'dmw', 'dmx', 'dmy', 'dna', 'dnd', 'dne', 'dng', 'dni', 'dnj', 'dnk', 'dnn', 'dnr', 'dnt', 'dnu', 'dnv', 'dnw', 'dny', 'doa', 'dob', 'doc', 'doe', 'dof', 'doh', 'doi', 'dok', 'dol', 'don', 'doo', 'dop', 'doq', 'dor', 'dos', 'dot', 'dov', 'dow', 'dox', 'doy', 'doz', 'dpp', 'dra', 'drb', 'drc', 'drd', 'dre', 'drg', 'drh', 'dri', 'drl', 'drn', 'dro', 'drq', 'drr', 'drs', 'drt', 'dru', 'drw', 'dry', 'dsb', 'dse', 'dsh', 'dsi', 'dsl', 'dsn', 'dso', 'dsq', 'dta', 'dtb', 'dtd', 'dth', 'dti', 'dtk', 'dtm', 'dtn', 'dto', 'dtp', 'dtr', 'dts', 'dtt', 'dtu', 'dty', 'dua', 'dub', 'duc', 'dud', 'due', 'duf', 'dug', 'duh', 'dui', 'duj', 'duk', 'dul', 'dum', 'dun', 'duo', 'dup', 'duq', 'dur', 'dus', 'duu', 'duv', 'duw', 'dux', 'duy', 'duz', 'dva', 'dwa', 'dwl', 'dwr', 'dws', 'dwu', 'dww', 'dwy', 'dya', 'dyb', 'dyd', 'dyg', 'dyi', 'dym', 'dyn', 'dyo', 'dyu', 'dyy', 'dza', 'dzd', 'dze', 'dzg', 'dzl', 'dzn', 'eaa', 'ebg', 'ebk', 'ebo', 'ebr', 'ebu', 'ecr', 'ecs', 'ecy', 'eee', 'efa', 'efe', 'efi', 'ega', 'egl', 'ego', 'egx', 'egy', 'ehu', 'eip', 'eit', 'eiv', 'eja', 'eka', 'ekc', 'eke', 'ekg', 'eki', 'ekk', 'ekl', 'ekm', 'eko', 'ekp', 'ekr', 'eky', 'ele', 'elh', 'eli', 'elk', 'elm', 'elo', 'elp', 'elu', 'elx', 'ema', 'emb', 'eme', 'emg', 'emi', 'emk', 'emm', 'emn', 'emo', 'emp', 'ems', 'emu', 'emw', 'emx', 'emy', 'ena', 'enb', 'enc', 'end', 'enf', 'enh', 'enl', 'enm', 'enn', 'eno', 'enq', 'enr', 'enu', 'env', 'enw', 'enx', 'eot', 'epi', 'era', 'erg', 'erh', 'eri', 'erk', 'ero', 'err', 'ers', 'ert', 'erw', 'ese', 'esg', 'esh', 'esi', 'esk', 'esl', 'esm', 'esn', 'eso', 'esq', 'ess', 'esu', 'esx', 'esy', 'etb', 'etc', 'eth', 'etn', 'eto', 'etr', 'ets', 'ett', 'etu', 'etx', 'etz', 'euq', 'eve', 'evh', 'evn', 'ewo', 'ext', 'eya', 'eyo', 'eza', 'eze', 'faa', 'fab', 'fad', 'faf', 'fag', 'fah', 'fai', 'faj', 'fak', 'fal', 'fam', 'fan', 'fap', 'far', 'fat', 'fau', 'fax', 'fay', 'faz', 'fbl', 'fcs', 'fer', 'ffi', 'ffm', 'fgr', 'fia', 'fie', 'fil', 'fip', 'fir', 'fit', 'fiu', 'fiw', 'fkk', 'fkv', 'fla', 'flh', 'fli', 'fll', 'fln', 'flr', 'fly', 'fmp', 'fmu', 'fnb', 'fng', 'fni', 'fod', 'foi', 'fom', 'fon', 'for', 'fos', 'fox', 'fpe', 'fqs', 'frc', 'frd', 'frk', 'frm', 'fro', 'frp', 'frq', 'frr', 'frs', 'frt', 'fse', 'fsl', 'fss', 'fub', 'fuc', 'fud', 'fue', 'fuf', 'fuh', 'fui', 'fuj', 'fum', 'fun', 'fuq', 'fur', 'fut', 'fuu', 'fuv', 'fuy', 'fvr', 'fwa', 'fwe', 'gaa', 'gab', 'gac', 'gad', 'gae', 'gaf', 'gag', 'gah', 'gai', 'gaj', 'gak', 'gal', 'gam', 'gan', 'gao', 'gap', 'gaq', 'gar', 'gas', 'gat', 'gau', 'gav', 'gaw', 'gax', 'gay', 'gaz', 'gba', 'gbb', 'gbc', 'gbd', 'gbe', 'gbf', 'gbg', 'gbh', 'gbi', 'gbj', 'gbk', 'gbl', 'gbm', 'gbn', 'gbo', 'gbp', 'gbq', 'gbr', 'gbs', 'gbu', 'gbv', 'gbw', 'gbx', 'gby', 'gbz', 'gcc', 'gcd', 'gce', 'gcf', 'gcl', 'gcn', 'gcr', 'gct', 'gda', 'gdb', 'gdc', 'gdd', 'gde', 'gdf', 'gdg', 'gdh', 'gdi', 'gdj', 'gdk', 'gdl', 'gdm', 'gdn', 'gdo', 'gdq', 'gdr', 'gds', 'gdt', 'gdu', 'gdx', 'gea', 'geb', 'gec', 'ged', 'geg', 'geh', 'gei', 'gej', 'gek', 'gel', 'gem', 'geq', 'ges', 'gev', 'gew', 'gex', 'gey', 'gez', 'gfk', 'gft', 'gfx', 'gga', 'ggb', 'ggd', 'gge', 'ggg', 'ggk', 'ggl', 'ggn', 'ggo', 'ggr', 'ggt', 'ggu', 'ggw', 'gha', 'ghc', 'ghe', 'ghh', 'ghk', 'ghl', 'ghn', 'gho', 'ghr', 'ghs', 'ght', 'gia', 'gib', 'gic', 'gid', 'gig', 'gih', 'gil', 'gim', 'gin', 'gio', 'gip', 'giq', 'gir', 'gis', 'git', 'giu', 'giw', 'gix', 'giy', 'giz', 'gji', 'gjk', 'gjm', 'gjn', 'gjr', 'gju', 'gka', 'gke', 'gkn', 'gko', 'gkp', 'gku', 'glc', 'gld', 'glh', 'gli', 'glj', 'glk', 'gll', 'glo', 'glr', 'glu', 'glw', 'gly', 'gma', 'gmb', 'gmd', 'gme', 'gmg', 'gmh', 'gml', 'gmm', 'gmn', 'gmq', 'gmu', 'gmv', 'gmw', 'gmx', 'gmy', 'gmz', 'gna', 'gnb', 'gnc', 'gnd', 'gne', 'gng', 'gnh', 'gni', 'gnk', 'gnl', 'gnm', 'gnn', 'gno', 'gnq', 'gnr', 'gnt', 'gnu', 'gnw', 'gnz', 'goa', 'gob', 'goc', 'god', 'goe', 'gof', 'gog', 'goh', 'goi', 'goj', 'gok', 'gol', 'gom', 'gon', 'goo', 'gop', 'goq', 'gor', 'gos', 'got', 'gou', 'gow', 'gox', 'goy', 'goz', 'gpa', 'gpe', 'gpn', 'gqa', 'gqi', 'gqn', 'gqr', 'gqu', 'gra', 'grb', 'grc', 'grd', 'grg', 'grh', 'gri', 'grj', 'grk', 'grm', 'gro', 'grq', 'grr', 'grs', 'grt', 'gru', 'grv', 'grw', 'grx', 'gry', 'grz', 'gse', 'gsg', 'gsl', 'gsm', 'gsn', 'gso', 'gsp', 'gss', 'gsw', 'gta', 'gti', 'gtu', 'gua', 'gub', 'guc', 'gud', 'gue', 'guf', 'gug', 'guh', 'gui', 'guk', 'gul', 'gum', 'gun', 'guo', 'gup', 'guq', 'gur', 'gus', 'gut', 'guu', 'guv', 'guw', 'gux', 'guz', 'gva', 'gvc', 'gve', 'gvf', 'gvj', 'gvl', 'gvm', 'gvn', 'gvo', 'gvp', 'gvr', 'gvs', 'gvy', 'gwa', 'gwb', 'gwc', 'gwd', 'gwe', 'gwf', 'gwg', 'gwi', 'gwj', 'gwm', 'gwn', 'gwr', 'gwt', 'gwu', 'gww', 'gwx', 'gxx', 'gya', 'gyb', 'gyd', 'gye', 'gyf', 'gyg', 'gyi', 'gyl', 'gym', 'gyn', 'gyr', 'gyy', 'gza', 'gzi', 'gzn', 'haa', 'hab', 'hac', 'had', 'hae', 'haf', 'hag', 'hah', 'hai', 'haj', 'hak', 'hal', 'ham', 'han', 'hao', 'hap', 'haq', 'har', 'has', 'hav', 'haw', 'hax', 'hay', 'haz', 'hba', 'hbb', 'hbn', 'hbo', 'hbu', 'hca', 'hch', 'hdn', 'hds', 'hdy', 'hea', 'hed', 'heg', 'heh', 'hei', 'hem', 'hgm', 'hgw', 'hhi', 'hhr', 'hhy', 'hia', 'hib', 'hid', 'hif', 'hig', 'hih', 'hii', 'hij', 'hik', 'hil', 'him', 'hio', 'hir', 'hit', 'hiw', 'hix', 'hji', 'hka', 'hke', 'hkk', 'hks', 'hla', 'hlb', 'hld', 'hle', 'hlt', 'hlu', 'hma', 'hmb', 'hmc', 'hmd', 'hme', 'hmf', 'hmg', 'hmh', 'hmi', 'hmj', 'hmk', 'hml', 'hmm', 'hmn', 'hmp', 'hmq', 'hmr', 'hms', 'hmt', 'hmu', 'hmv', 'hmw', 'hmx', 'hmy', 'hmz', 'hna', 'hnd', 'hne', 'hnh', 'hni', 'hnj', 'hnn', 'hno', 'hns', 'hnu', 'hoa', 'hob', 'hoc', 'hod', 'hoe', 'hoh', 'hoi', 'hoj', 'hok', 'hol', 'hom', 'hoo', 'hop', 'hor', 'hos', 'hot', 'hov', 'how', 'hoy', 'hoz', 'hpo', 'hps', 'hra', 'hrc', 'hre', 'hrk', 'hrm', 'hro', 'hrp', 'hrr', 'hrt', 'hru', 'hrw', 'hrx', 'hrz', 'hsb', 'hsh', 'hsl', 'hsn', 'hss', 'hti', 'hto', 'hts', 'htu', 'htx', 'hub', 'huc', 'hud', 'hue', 'huf', 'hug', 'huh', 'hui', 'huj', 'huk', 'hul', 'hum', 'huo', 'hup', 'huq', 'hur', 'hus', 'hut', 'huu', 'huv', 'huw', 'hux', 'huy', 'huz', 'hvc', 'hve', 'hvk', 'hvn', 'hvv', 'hwa', 'hwc', 'hwo', 'hya', 'hyx', 'iai', 'ian', 'iap', 'iar', 'iba', 'ibb', 'ibd', 'ibe', 'ibg', 'ibi', 'ibl', 'ibm', 'ibn', 'ibr', 'ibu', 'iby', 'ica', 'ich', 'icl', 'icr', 'ida', 'idb', 'idc', 'idd', 'ide', 'idi', 'idr', 'ids', 'idt', 'idu', 'ifa', 'ifb', 'ife', 'iff', 'ifk', 'ifm', 'ifu', 'ify', 'igb', 'ige', 'igg', 'igl', 'igm', 'ign', 'igo', 'igs', 'igw', 'ihb', 'ihi', 'ihp', 'ihw', 'iin', 'iir', 'ijc', 'ije', 'ijj', 'ijn', 'ijo', 'ijs', 'ike', 'iki', 'ikk', 'ikl', 'iko', 'ikp', 'ikr', 'iks', 'ikt', 'ikv', 'ikw', 'ikx', 'ikz', 'ila', 'ilb', 'ilg', 'ili', 'ilk', 'ill', 'ilm', 'ilo', 'ilp', 'ils', 'ilu', 'ilv', 'ilw', 'ima', 'ime', 'imi', 'iml', 'imn', 'imo', 'imr', 'ims', 'imy', 'inb', 'inc', 'ine', 'ing', 'inh', 'inj', 'inl', 'inm', 'inn', 'ino', 'inp', 'ins', 'int', 'inz', 'ior', 'iou', 'iow', 'ipi', 'ipo', 'iqu', 'iqw', 'ira', 'ire', 'irh', 'iri', 'irk', 'irn', 'iro', 'irr', 'iru', 'irx', 'iry', 'isa', 'isc', 'isd', 'ise', 'isg', 'ish', 'isi', 'isk', 'ism', 'isn', 'iso', 'isr', 'ist', 'isu', 'itb', 'itc', 'itd', 'ite', 'iti', 'itk', 'itl', 'itm', 'ito', 'itr', 'its', 'itt', 'itv', 'itw', 'itx', 'ity', 'itz', 'ium', 'ivb', 'ivv', 'iwk', 'iwm', 'iwo', 'iws', 'ixc', 'ixl', 'iya', 'iyo', 'iyx', 'izh', 'izi', 'izr', 'izz', 'jaa', 'jab', 'jac', 'jad', 'jae', 'jaf', 'jah', 'jaj', 'jak', 'jal', 'jam', 'jan', 'jao', 'jaq', 'jar', 'jas', 'jat', 'jau', 'jax', 'jay', 'jaz', 'jbe', 'jbi', 'jbj', 'jbk', 'jbn', 'jbo', 'jbr', 'jbt', 'jbu', 'jbw', 'jcs', 'jct', 'jda', 'jdg', 'jdt', 'jeb', 'jee', 'jeg', 'jeh', 'jei', 'jek', 'jel', 'jen', 'jer', 'jet', 'jeu', 'jgb', 'jge', 'jgk', 'jgo', 'jhi', 'jhs', 'jia', 'jib', 'jic', 'jid', 'jie', 'jig', 'jih', 'jii', 'jil', 'jim', 'jio', 'jiq', 'jit', 'jiu', 'jiv', 'jiy', 'jje', 'jjr', 'jka', 'jkm', 'jko', 'jkp', 'jkr', 'jku', 'jle', 'jls', 'jma', 'jmb', 'jmc', 'jmd', 'jmi', 'jml', 'jmn', 'jmr', 'jms', 'jmw', 'jmx', 'jna', 'jnd', 'jng', 'jni', 'jnj', 'jnl', 'jns', 'job', 'jod', 'jog', 'jor', 'jos', 'jow', 'jpa', 'jpr', 'jpx', 'jqr', 'jra', 'jrb', 'jrr', 'jrt', 'jru', 'jsl', 'jua', 'jub', 'juc', 'jud', 'juh', 'jui', 'juk', 'jul', 'jum', 'jun', 'juo', 'jup', 'jur', 'jus', 'jut', 'juu', 'juw', 'juy', 'jvd', 'jvn', 'jwi', 'jya', 'jye', 'jyy', 'kaa', 'kab', 'kac', 'kad', 'kae', 'kaf', 'kag', 'kah', 'kai', 'kaj', 'kak', 'kam', 'kao', 'kap', 'kaq', 'kar', 'kav', 'kaw', 'kax', 'kay', 'kba', 'kbb', 'kbc', 'kbd', 'kbe', 'kbf', 'kbg', 'kbh', 'kbi', 'kbj', 'kbk', 'kbl', 'kbm', 'kbn', 'kbo', 'kbp', 'kbq', 'kbr', 'kbs', 'kbt', 'kbu', 'kbv', 'kbw', 'kbx', 'kby', 'kbz', 'kca', 'kcb', 'kcc', 'kcd', 'kce', 'kcf', 'kcg', 'kch', 'kci', 'kcj', 'kck', 'kcl', 'kcm', 'kcn', 'kco', 'kcp', 'kcq', 'kcr', 'kcs', 'kct', 'kcu', 'kcv', 'kcw', 'kcx', 'kcy', 'kcz', 'kda', 'kdc', 'kdd', 'kde', 'kdf', 'kdg', 'kdh', 'kdi', 'kdj', 'kdk', 'kdl', 'kdm', 'kdn', 'kdo', 'kdp', 'kdq', 'kdr', 'kdt', 'kdu', 'kdv', 'kdw', 'kdx', 'kdy', 'kdz', 'kea', 'keb', 'kec', 'ked', 'kee', 'kef', 'keg', 'keh', 'kei', 'kej', 'kek', 'kel', 'kem', 'ken', 'keo', 'kep', 'keq', 'ker', 'kes', 'ket', 'keu', 'kev', 'kew', 'kex', 'key', 'kez', 'kfa', 'kfb', 'kfc', 'kfd', 'kfe', 'kff', 'kfg', 'kfh', 'kfi', 'kfj', 'kfk', 'kfl', 'kfm', 'kfn', 'kfo', 'kfp', 'kfq', 'kfr', 'kfs', 'kft', 'kfu', 'kfv', 'kfw', 'kfx', 'kfy', 'kfz', 'kga', 'kgb', 'kgc', 'kgd', 'kge', 'kgf', 'kgg', 'kgh', 'kgi', 'kgj', 'kgk', 'kgl', 'kgm', 'kgn', 'kgo', 'kgp', 'kgq', 'kgr', 'kgs', 'kgt', 'kgu', 'kgv', 'kgw', 'kgx', 'kgy', 'kha', 'khb', 'khc', 'khd', 'khe', 'khf', 'khg', 'khh', 'khi', 'khj', 'khk', 'khl', 'khn', 'kho', 'khp', 'khq', 'khr', 'khs', 'kht', 'khu', 'khv', 'khw', 'khx', 'khy', 'khz', 'kia', 'kib', 'kic', 'kid', 'kie', 'kif', 'kig', 'kih', 'kii', 'kij', 'kil', 'kim', 'kio', 'kip', 'kiq', 'kis', 'kit', 'kiu', 'kiv', 'kiw', 'kix', 'kiy', 'kiz', 'kja', 'kjb', 'kjc', 'kjd', 'kje', 'kjf', 'kjg', 'kjh', 'kji', 'kjj', 'kjk', 'kjl', 'kjm', 'kjn', 'kjo', 'kjp', 'kjq', 'kjr', 'kjs', 'kjt', 'kju', 'kjv', 'kjx', 'kjy', 'kjz', 'kka', 'kkb', 'kkc', 'kkd', 'kke', 'kkf', 'kkg', 'kkh', 'kki', 'kkj', 'kkk', 'kkl', 'kkm', 'kkn', 'kko', 'kkp', 'kkq', 'kkr', 'kks', 'kkt', 'kku', 'kkv', 'kkw', 'kkx', 'kky', 'kkz', 'kla', 'klb', 'klc', 'kld', 'kle', 'klf', 'klg', 'klh', 'kli', 'klj', 'klk', 'kll', 'klm', 'kln', 'klo', 'klp', 'klq', 'klr', 'kls', 'klt', 'klu', 'klv', 'klw', 'klx', 'kly', 'klz', 'kma', 'kmb', 'kmc', 'kmd', 'kme', 'kmf', 'kmg', 'kmh', 'kmi', 'kmj', 'kmk', 'kml', 'kmm', 'kmn', 'kmo', 'kmp', 'kmq', 'kmr', 'kms', 'kmt', 'kmu', 'kmv', 'kmw', 'kmx', 'kmy', 'kmz', 'kna', 'knb', 'knc', 'knd', 'kne', 'knf', 'kng', 'kni', 'knj', 'knk', 'knl', 'knm', 'knn', 'kno', 'knp', 'knq', 'knr', 'kns', 'knt', 'knu', 'knv', 'knw', 'knx', 'kny', 'knz', 'koa', 'koc', 'kod', 'koe', 'kof', 'kog', 'koh', 'koi', 'koj', 'kok', 'kol', 'koo', 'kop', 'koq', 'kos', 'kot', 'kou', 'kov', 'kow', 'kox', 'koy', 'koz', 'kpa', 'kpb', 'kpc', 'kpd', 'kpe', 'kpf', 'kpg', 'kph', 'kpi', 'kpj', 'kpk', 'kpl', 'kpm', 'kpn', 'kpo', 'kpp', 'kpq', 'kpr', 'kps', 'kpt', 'kpu', 'kpv', 'kpw', 'kpx', 'kpy', 'kpz', 'kqa', 'kqb', 'kqc', 'kqd', 'kqe', 'kqf', 'kqg', 'kqh', 'kqi', 'kqj', 'kqk', 'kql', 'kqm', 'kqn', 'kqo', 'kqp', 'kqq', 'kqr', 'kqs', 'kqt', 'kqu', 'kqv', 'kqw', 'kqx', 'kqy', 'kqz', 'kra', 'krb', 'krc', 'krd', 'kre', 'krf', 'krh', 'kri', 'krj', 'krk', 'krl', 'krm', 'krn', 'kro', 'krp', 'krr', 'krs', 'krt', 'kru', 'krv', 'krw', 'krx', 'kry', 'krz', 'ksa', 'ksb', 'ksc', 'ksd', 'kse', 'ksf', 'ksg', 'ksh', 'ksi', 'ksj', 'ksk', 'ksl', 'ksm', 'ksn', 'kso', 'ksp', 'ksq', 'ksr', 'kss', 'kst', 'ksu', 'ksv', 'ksw', 'ksx', 'ksy', 'ksz', 'kta', 'ktb', 'ktc', 'ktd', 'kte', 'ktf', 'ktg', 'kth', 'kti', 'ktj', 'ktk', 'ktl', 'ktm', 'ktn', 'kto', 'ktp', 'ktq', 'ktr', 'kts', 'ktt', 'ktu', 'ktv', 'ktw', 'ktx', 'kty', 'ktz', 'kub', 'kuc', 'kud', 'kue', 'kuf', 'kug', 'kuh', 'kui', 'kuj', 'kuk', 'kul', 'kum', 'kun', 'kuo', 'kup', 'kuq', 'kus', 'kut', 'kuu', 'kuv', 'kuw', 'kux', 'kuy', 'kuz', 'kva', 'kvb', 'kvc', 'kvd', 'kve', 'kvf', 'kvg', 'kvh', 'kvi', 'kvj', 'kvk', 'kvl', 'kvm', 'kvn', 'kvo', 'kvp', 'kvq', 'kvr', 'kvs', 'kvt', 'kvu', 'kvv', 'kvw', 'kvx', 'kvy', 'kvz', 'kwa', 'kwb', 'kwc', 'kwd', 'kwe', 'kwf', 'kwg', 'kwh', 'kwi', 'kwj', 'kwk', 'kwl', 'kwm', 'kwn', 'kwo', 'kwp', 'kwq', 'kwr', 'kws', 'kwt', 'kwu', 'kwv', 'kww', 'kwx', 'kwy', 'kwz', 'kxa', 'kxb', 'kxc', 'kxd', 'kxe', 'kxf', 'kxh', 'kxi', 'kxj', 'kxk', 'kxl', 'kxm', 'kxn', 'kxo', 'kxp', 'kxq', 'kxr', 'kxs', 'kxt', 'kxu', 'kxv', 'kxw', 'kxx', 'kxy', 'kxz', 'kya', 'kyb', 'kyc', 'kyd', 'kye', 'kyf', 'kyg', 'kyh', 'kyi', 'kyj', 'kyk', 'kyl', 'kym', 'kyn', 'kyo', 'kyp', 'kyq', 'kyr', 'kys', 'kyt', 'kyu', 'kyv', 'kyw', 'kyx', 'kyy', 'kyz', 'kza', 'kzb', 'kzc', 'kzd', 'kze', 'kzf', 'kzg', 'kzh', 'kzi', 'kzj', 'kzk', 'kzl', 'kzm', 'kzn', 'kzo', 'kzp', 'kzq', 'kzr', 'kzs', 'kzt', 'kzu', 'kzv', 'kzw', 'kzx', 'kzy', 'kzz', 'laa', 'lab', 'lac', 'lad', 'lae', 'laf', 'lag', 'lah', 'lai', 'laj', 'lak', 'lal', 'lam', 'lan', 'lap', 'laq', 'lar', 'las', 'lau', 'law', 'lax', 'lay', 'laz', 'lba', 'lbb', 'lbc', 'lbe', 'lbf', 'lbg', 'lbi', 'lbj', 'lbk', 'lbl', 'lbm', 'lbn', 'lbo', 'lbq', 'lbr', 'lbs', 'lbt', 'lbu', 'lbv', 'lbw', 'lbx', 'lby', 'lbz', 'lcc', 'lcd', 'lce', 'lcf', 'lch', 'lcl', 'lcm', 'lcp', 'lcq', 'lcs', 'lda', 'ldb', 'ldd', 'ldg', 'ldh', 'ldi', 'ldj', 'ldk', 'ldl', 'ldm', 'ldn', 'ldo', 'ldp', 'ldq', 'lea', 'leb', 'lec', 'led', 'lee', 'lef', 'leg', 'leh', 'lei', 'lej', 'lek', 'lel', 'lem', 'len', 'leo', 'lep', 'leq', 'ler', 'les', 'let', 'leu', 'lev', 'lew', 'lex', 'ley', 'lez', 'lfa', 'lfn', 'lga', 'lgb', 'lgg', 'lgh', 'lgi', 'lgk', 'lgl', 'lgm', 'lgn', 'lgq', 'lgr', 'lgt', 'lgu', 'lgz', 'lha', 'lhh', 'lhi', 'lhl', 'lhm', 'lhn', 'lhp', 'lhs', 'lht', 'lhu', 'lia', 'lib', 'lic', 'lid', 'lie', 'lif', 'lig', 'lih', 'lii', 'lij', 'lik', 'lil', 'lio', 'lip', 'liq', 'lir', 'lis', 'liu', 'liv', 'liw', 'lix', 'liy', 'liz', 'lja', 'lje', 'lji', 'ljl', 'ljp', 'ljw', 'ljx', 'lka', 'lkb', 'lkc', 'lkd', 'lke', 'lkh', 'lki', 'lkj', 'lkl', 'lkm', 'lkn', 'lko', 'lkr', 'lks', 'lkt', 'lku', 'lky', 'lla', 'llb', 'llc', 'lld', 'lle', 'llf', 'llg', 'llh', 'lli', 'llj', 'llk', 'lll', 'llm', 'lln', 'llo', 'llp', 'llq', 'lls', 'llu', 'llx', 'lma', 'lmb', 'lmc', 'lmd', 'lme', 'lmf', 'lmg', 'lmh', 'lmi', 'lmj', 'lmk', 'lml', 'lmm', 'lmn', 'lmo', 'lmp', 'lmq', 'lmr', 'lmu', 'lmv', 'lmw', 'lmx', 'lmy', 'lmz', 'lna', 'lnb', 'lnd', 'lng', 'lnh', 'lni', 'lnj', 'lnl', 'lnm', 'lnn', 'lno', 'lns', 'lnu', 'lnw', 'lnz', 'loa', 'lob', 'loc', 'loe', 'lof', 'log', 'loh', 'loi', 'loj', 'lok', 'lol', 'lom', 'lon', 'loo', 'lop', 'loq', 'lor', 'los', 'lot', 'lou', 'lov', 'low', 'lox', 'loy', 'loz', 'lpa', 'lpe', 'lpn', 'lpo', 'lpx', 'lra', 'lrc', 'lre', 'lrg', 'lri', 'lrk', 'lrl', 'lrm', 'lrn', 'lro', 'lrr', 'lrt', 'lrv', 'lrz', 'lsa', 'lsd', 'lse', 'lsg', 'lsh', 'lsi', 'lsl', 'lsm', 'lso', 'lsp', 'lsr', 'lss', 'lst', 'lsy', 'ltc', 'ltg', 'lti', 'ltn', 'lto', 'lts', 'ltu', 'lua', 'luc', 'lud', 'lue', 'luf', 'lui', 'luj', 'luk', 'lul', 'lum', 'lun', 'luo', 'lup', 'luq', 'lur', 'lus', 'lut', 'luu', 'luv', 'luw', 'luy', 'luz', 'lva', 'lvk', 'lvs', 'lvu', 'lwa', 'lwe', 'lwg', 'lwh', 'lwl', 'lwm', 'lwo', 'lwt', 'lwu', 'lww', 'lya', 'lyg', 'lyn', 'lzh', 'lzl', 'lzn', 'lzz', 'maa', 'mab', 'mad', 'mae', 'maf', 'mag', 'mai', 'maj', 'mak', 'mam', 'man', 'map', 'maq', 'mas', 'mat', 'mau', 'mav', 'maw', 'max', 'maz', 'mba', 'mbb', 'mbc', 'mbd', 'mbe', 'mbf', 'mbh', 'mbi', 'mbj', 'mbk', 'mbl', 'mbm', 'mbn', 'mbo', 'mbp', 'mbq', 'mbr', 'mbs', 'mbt', 'mbu', 'mbv', 'mbw', 'mbx', 'mby', 'mbz', 'mca', 'mcb', 'mcc', 'mcd', 'mce', 'mcf', 'mcg', 'mch', 'mci', 'mcj', 'mck', 'mcl', 'mcm', 'mcn', 'mco', 'mcp', 'mcq', 'mcr', 'mcs', 'mct', 'mcu', 'mcv', 'mcw', 'mcx', 'mcy', 'mcz', 'mda', 'mdb', 'mdc', 'mdd', 'mde', 'mdf', 'mdg', 'mdh', 'mdi', 'mdj', 'mdk', 'mdl', 'mdm', 'mdn', 'mdp', 'mdq', 'mdr', 'mds', 'mdt', 'mdu', 'mdv', 'mdw', 'mdx', 'mdy', 'mdz', 'mea', 'meb', 'mec', 'med', 'mee', 'mef', 'meg', 'meh', 'mei', 'mej', 'mek', 'mel', 'mem', 'men', 'meo', 'mep', 'meq', 'mer', 'mes', 'met', 'meu', 'mev', 'mew', 'mey', 'mez', 'mfa', 'mfb', 'mfc', 'mfd', 'mfe', 'mff', 'mfg', 'mfh', 'mfi', 'mfj', 'mfk', 'mfl', 'mfm', 'mfn', 'mfo', 'mfp', 'mfq', 'mfr', 'mfs', 'mft', 'mfu', 'mfv', 'mfw', 'mfx', 'mfy', 'mfz', 'mga', 'mgb', 'mgc', 'mgd', 'mge', 'mgf', 'mgg', 'mgh', 'mgi', 'mgj', 'mgk', 'mgl', 'mgm', 'mgn', 'mgo', 'mgp', 'mgq', 'mgr', 'mgs', 'mgt', 'mgu', 'mgv', 'mgw', 'mgx', 'mgy', 'mgz', 'mha', 'mhb', 'mhc', 'mhd', 'mhe', 'mhf', 'mhg', 'mhh', 'mhi', 'mhj', 'mhk', 'mhl', 'mhm', 'mhn', 'mho', 'mhp', 'mhq', 'mhr', 'mhs', 'mht', 'mhu', 'mhw', 'mhx', 'mhy', 'mhz', 'mia', 'mib', 'mic', 'mid', 'mie', 'mif', 'mig', 'mih', 'mii', 'mij', 'mik', 'mil', 'mim', 'min', 'mio', 'mip', 'miq', 'mir', 'mis', 'mit', 'miu', 'miw', 'mix', 'miy', 'miz', 'mja', 'mjb', 'mjc', 'mjd', 'mje', 'mjg', 'mjh', 'mji', 'mjj', 'mjk', 'mjl', 'mjm', 'mjn', 'mjo', 'mjp', 'mjq', 'mjr', 'mjs', 'mjt', 'mju', 'mjv', 'mjw', 'mjx', 'mjy', 'mjz', 'mka', 'mkb', 'mkc', 'mke', 'mkf', 'mkg', 'mkh', 'mki', 'mkj', 'mkk', 'mkl', 'mkm', 'mkn', 'mko', 'mkp', 'mkq', 'mkr', 'mks', 'mkt', 'mku', 'mkv', 'mkw', 'mkx', 'mky', 'mkz', 'mla', 'mlb', 'mlc', 'mld', 'mle', 'mlf', 'mlh', 'mli', 'mlj', 'mlk', 'mll', 'mlm', 'mln', 'mlo', 'mlp', 'mlq', 'mlr', 'mls', 'mlu', 'mlv', 'mlw', 'mlx', 'mlz', 'mma', 'mmb', 'mmc', 'mmd', 'mme', 'mmf', 'mmg', 'mmh', 'mmi', 'mmj', 'mmk', 'mml', 'mmm', 'mmn', 'mmo', 'mmp', 'mmq', 'mmr', 'mmt', 'mmu', 'mmv', 'mmw', 'mmx', 'mmy', 'mmz', 'mna', 'mnb', 'mnc', 'mnd', 'mne', 'mnf', 'mng', 'mnh', 'mni', 'mnj', 'mnk', 'mnl', 'mnm', 'mnn', 'mno', 'mnp', 'mnq', 'mnr', 'mns', 'mnt', 'mnu', 'mnv', 'mnw', 'mnx', 'mny', 'mnz', 'moa', 'moc', 'mod', 'moe', 'mof', 'mog', 'moh', 'moi', 'moj', 'mok', 'mom', 'moo', 'mop', 'moq', 'mor', 'mos', 'mot', 'mou', 'mov', 'mow', 'mox', 'moy', 'moz', 'mpa', 'mpb', 'mpc', 'mpd', 'mpe', 'mpg', 'mph', 'mpi', 'mpj', 'mpk', 'mpl', 'mpm', 'mpn', 'mpo', 'mpp', 'mpq', 'mpr', 'mps', 'mpt', 'mpu', 'mpv', 'mpw', 'mpx', 'mpy', 'mpz', 'mqa', 'mqb', 'mqc', 'mqe', 'mqf', 'mqg', 'mqh', 'mqi', 'mqj', 'mqk', 'mql', 'mqm', 'mqn', 'mqo', 'mqp', 'mqq', 'mqr', 'mqs', 'mqt', 'mqu', 'mqv', 'mqw', 'mqx', 'mqy', 'mqz', 'mra', 'mrb', 'mrc', 'mrd', 'mre', 'mrf', 'mrg', 'mrh', 'mrj', 'mrk', 'mrl', 'mrm', 'mrn', 'mro', 'mrp', 'mrq', 'mrr', 'mrs', 'mrt', 'mru', 'mrv', 'mrw', 'mrx', 'mry', 'mrz', 'msb', 'msc', 'msd', 'mse', 'msf', 'msg', 'msh', 'msi', 'msj', 'msk', 'msl', 'msm', 'msn', 'mso', 'msp', 'msq', 'msr', 'mss', 'mst', 'msu', 'msv', 'msw', 'msx', 'msy', 'msz', 'mta', 'mtb', 'mtc', 'mtd', 'mte', 'mtf', 'mtg', 'mth', 'mti', 'mtj', 'mtk', 'mtl', 'mtm', 'mtn', 'mto', 'mtp', 'mtq', 'mtr', 'mts', 'mtt', 'mtu', 'mtv', 'mtw', 'mtx', 'mty', 'mua', 'mub', 'muc', 'mud', 'mue', 'mug', 'muh', 'mui', 'muj', 'muk', 'mul', 'mum', 'mun', 'muo', 'mup', 'muq', 'mur', 'mus', 'mut', 'muu', 'muv', 'mux', 'muy', 'muz', 'mva', 'mvb', 'mvd', 'mve', 'mvf', 'mvg', 'mvh', 'mvi', 'mvk', 'mvl', 'mvm', 'mvn', 'mvo', 'mvp', 'mvq', 'mvr', 'mvs', 'mvt', 'mvu', 'mvv', 'mvw', 'mvx', 'mvy', 'mvz', 'mwa', 'mwb', 'mwc', 'mwd', 'mwe', 'mwf', 'mwg', 'mwh', 'mwi', 'mwj', 'mwk', 'mwl', 'mwm', 'mwn', 'mwo', 'mwp', 'mwq', 'mwr', 'mws', 'mwt', 'mwu', 'mwv', 'mww', 'mwx', 'mwy', 'mwz', 'mxa', 'mxb', 'mxc', 'mxd', 'mxe', 'mxf', 'mxg', 'mxh', 'mxi', 'mxj', 'mxk', 'mxl', 'mxm', 'mxn', 'mxo', 'mxp', 'mxq', 'mxr', 'mxs', 'mxt', 'mxu', 'mxv', 'mxw', 'mxx', 'mxy', 'mxz', 'myb', 'myc', 'myd', 'mye', 'myf', 'myg', 'myh', 'myi', 'myj', 'myk', 'myl', 'mym', 'myn', 'myo', 'myp', 'myq', 'myr', 'mys', 'myt', 'myu', 'myv', 'myw', 'myx', 'myy', 'myz', 'mza', 'mzb', 'mzc', 'mzd', 'mze', 'mzg', 'mzh', 'mzi', 'mzj', 'mzk', 'mzl', 'mzm', 'mzn', 'mzo', 'mzp', 'mzq', 'mzr', 'mzs', 'mzt', 'mzu', 'mzv', 'mzw', 'mzx', 'mzy', 'mzz', 'naa', 'nab', 'nac', 'nad', 'nae', 'naf', 'nag', 'nah', 'nai', 'naj', 'nak', 'nal', 'nam', 'nan', 'nao', 'nap', 'naq', 'nar', 'nas', 'nat', 'naw', 'nax', 'nay', 'naz', 'nba', 'nbb', 'nbc', 'nbd', 'nbe', 'nbf', 'nbg', 'nbh', 'nbi', 'nbj', 'nbk', 'nbm', 'nbn', 'nbo', 'nbp', 'nbq', 'nbr', 'nbs', 'nbt', 'nbu', 'nbv', 'nbw', 'nbx', 'nby', 'nca', 'ncb', 'ncc', 'ncd', 'nce', 'ncf', 'ncg', 'nch', 'nci', 'ncj', 'nck', 'ncl', 'ncm', 'ncn', 'nco', 'ncp', 'ncr', 'ncs', 'nct', 'ncu', 'ncx', 'ncz', 'nda', 'ndb', 'ndc', 'ndd', 'ndf', 'ndg', 'ndh', 'ndi', 'ndj', 'ndk', 'ndl', 'ndm', 'ndn', 'ndp', 'ndq', 'ndr', 'nds', 'ndt', 'ndu', 'ndv', 'ndw', 'ndx', 'ndy', 'ndz', 'nea', 'neb', 'nec', 'ned', 'nee', 'nef', 'neg', 'neh', 'nei', 'nej', 'nek', 'nem', 'nen', 'neo', 'neq', 'ner', 'nes', 'net', 'neu', 'nev', 'new', 'nex', 'ney', 'nez', 'nfa', 'nfd', 'nfl', 'nfr', 'nfu', 'nga', 'ngb', 'ngc', 'ngd', 'nge', 'ngf', 'ngg', 'ngh', 'ngi', 'ngj', 'ngk', 'ngl', 'ngm', 'ngn', 'ngo', 'ngp', 'ngq', 'ngr', 'ngs', 'ngt', 'ngu', 'ngv', 'ngw', 'ngx', 'ngy', 'ngz', 'nha', 'nhb', 'nhc', 'nhd', 'nhe', 'nhf', 'nhg', 'nhh', 'nhi', 'nhk', 'nhm', 'nhn', 'nho', 'nhp', 'nhq', 'nhr', 'nht', 'nhu', 'nhv', 'nhw', 'nhx', 'nhy', 'nhz', 'nia', 'nib', 'nic', 'nid', 'nie', 'nif', 'nig', 'nih', 'nii', 'nij', 'nik', 'nil', 'nim', 'nin', 'nio', 'niq', 'nir', 'nis', 'nit', 'niu', 'niv', 'niw', 'nix', 'niy', 'niz', 'nja', 'njb', 'njd', 'njh', 'nji', 'njj', 'njl', 'njm', 'njn', 'njo', 'njr', 'njs', 'njt', 'nju', 'njx', 'njy', 'njz', 'nka', 'nkb', 'nkc', 'nkd', 'nke', 'nkf', 'nkg', 'nkh', 'nki', 'nkj', 'nkk', 'nkm', 'nkn', 'nko', 'nkp', 'nkq', 'nkr', 'nks', 'nkt', 'nku', 'nkv', 'nkw', 'nkx', 'nkz', 'nla', 'nlc', 'nle', 'nlg', 'nli', 'nlj', 'nlk', 'nll', 'nln', 'nlo', 'nlq', 'nlr', 'nlu', 'nlv', 'nlw', 'nlx', 'nly', 'nlz', 'nma', 'nmb', 'nmc', 'nmd', 'nme', 'nmf', 'nmg', 'nmh', 'nmi', 'nmj', 'nmk', 'nml', 'nmm', 'nmn', 'nmo', 'nmp', 'nmq', 'nmr', 'nms', 'nmt', 'nmu', 'nmv', 'nmw', 'nmx', 'nmy', 'nmz', 'nna', 'nnb', 'nnc', 'nnd', 'nne', 'nnf', 'nng', 'nnh', 'nni', 'nnj', 'nnk', 'nnl', 'nnm', 'nnn', 'nnp', 'nnq', 'nnr', 'nns', 'nnt', 'nnu', 'nnv', 'nnw', 'nnx', 'nny', 'nnz', 'noa', 'noc', 'nod', 'noe', 'nof', 'nog', 'noh', 'noi', 'noj', 'nok', 'nol', 'nom', 'non', 'noo', 'nop', 'noq', 'nos', 'not', 'nou', 'nov', 'now', 'noy', 'noz', 'npa', 'npb', 'npg', 'nph', 'npi', 'npl', 'npn', 'npo', 'nps', 'npu', 'npy', 'nqg', 'nqk', 'nqm', 'nqn', 'nqo', 'nqq', 'nqy', 'nra', 'nrb', 'nrc', 'nre', 'nrf', 'nrg', 'nri', 'nrk', 'nrl', 'nrm', 'nrn', 'nrp', 'nrr', 'nrt', 'nru', 'nrx', 'nrz', 'nsa', 'nsc', 'nsd', 'nse', 'nsf', 'nsg', 'nsh', 'nsi', 'nsk', 'nsl', 'nsm', 'nsn', 'nso', 'nsp', 'nsq', 'nsr', 'nss', 'nst', 'nsu', 'nsv', 'nsw', 'nsx', 'nsy', 'nsz', 'ntd', 'nte', 'ntg', 'nti', 'ntj', 'ntk', 'ntm', 'nto', 'ntp', 'ntr', 'nts', 'ntu', 'ntw', 'ntx', 'nty', 'ntz', 'nua', 'nub', 'nuc', 'nud', 'nue', 'nuf', 'nug', 'nuh', 'nui', 'nuj', 'nuk', 'nul', 'num', 'nun', 'nuo', 'nup', 'nuq', 'nur', 'nus', 'nut', 'nuu', 'nuv', 'nuw', 'nux', 'nuy', 'nuz', 'nvh', 'nvm', 'nvo', 'nwa', 'nwb', 'nwc', 'nwe', 'nwg', 'nwi', 'nwm', 'nwo', 'nwr', 'nwx', 'nwy', 'nxa', 'nxd', 'nxe', 'nxg', 'nxi', 'nxk', 'nxl', 'nxm', 'nxn', 'nxo', 'nxq', 'nxr', 'nxu', 'nxx', 'nyb', 'nyc', 'nyd', 'nye', 'nyf', 'nyg', 'nyh', 'nyi', 'nyj', 'nyk', 'nyl', 'nym', 'nyn', 'nyo', 'nyp', 'nyq', 'nyr', 'nys', 'nyt', 'nyu', 'nyv', 'nyw', 'nyx', 'nyy', 'nza', 'nzb', 'nzi', 'nzk', 'nzm', 'nzs', 'nzu', 'nzy', 'nzz', 'oaa', 'oac', 'oar', 'oav', 'obi', 'obk', 'obl', 'obm', 'obo', 'obr', 'obt', 'obu', 'oca', 'och', 'oco', 'ocu', 'oda', 'odk', 'odt', 'odu', 'ofo', 'ofs', 'ofu', 'ogb', 'ogc', 'oge', 'ogg', 'ogo', 'ogu', 'oht', 'ohu', 'oia', 'oin', 'ojb', 'ojc', 'ojg', 'ojp', 'ojs', 'ojv', 'ojw', 'oka', 'okb', 'okd', 'oke', 'okg', 'okh', 'oki', 'okj', 'okk', 'okl', 'okm', 'okn', 'oko', 'okr', 'oks', 'oku', 'okv', 'okx', 'ola', 'old', 'ole', 'olk', 'olm', 'olo', 'olr', 'olt', 'olu', 'oma', 'omb', 'omc', 'ome', 'omg', 'omi', 'omk', 'oml', 'omn', 'omo', 'omp', 'omq', 'omr', 'omt', 'omu', 'omv', 'omw', 'omx', 'ona', 'onb', 'one', 'ong', 'oni', 'onj', 'onk', 'onn', 'ono', 'onp', 'onr', 'ons', 'ont', 'onu', 'onw', 'onx', 'ood', 'oog', 'oon', 'oor', 'oos', 'opa', 'opk', 'opm', 'opo', 'opt', 'opy', 'ora', 'orc', 'ore', 'org', 'orh', 'orn', 'oro', 'orr', 'ors', 'ort', 'oru', 'orv', 'orw', 'orx', 'ory', 'orz', 'osa', 'osc', 'osi', 'oso', 'osp', 'ost', 'osu', 'osx', 'ota', 'otb', 'otd', 'ote', 'oti', 'otk', 'otl', 'otm', 'otn', 'oto', 'otq', 'otr', 'ots', 'ott', 'otu', 'otw', 'otx', 'oty', 'otz', 'oua', 'oub', 'oue', 'oui', 'oum', 'oun', 'ovd', 'owi', 'owl', 'oyb', 'oyd', 'oym', 'oyy', 'ozm', 'paa', 'pab', 'pac', 'pad', 'pae', 'paf', 'pag', 'pah', 'pai', 'pak', 'pal', 'pam', 'pao', 'pap', 'paq', 'par', 'pas', 'pat', 'pau', 'pav', 'paw', 'pax', 'pay', 'paz', 'pbb', 'pbc', 'pbe', 'pbf', 'pbg', 'pbh', 'pbi', 'pbl', 'pbn', 'pbo', 'pbp', 'pbr', 'pbs', 'pbt', 'pbu', 'pbv', 'pby', 'pbz', 'pca', 'pcb', 'pcc', 'pcd', 'pce', 'pcf', 'pcg', 'pch', 'pci', 'pcj', 'pck', 'pcl', 'pcm', 'pcn', 'pcp', 'pcr', 'pcw', 'pda', 'pdc', 'pdi', 'pdn', 'pdo', 'pdt', 'pdu', 'pea', 'peb', 'ped', 'pee', 'pef', 'peg', 'peh', 'pei', 'pej', 'pek', 'pel', 'pem', 'peo', 'pep', 'peq', 'pes', 'pev', 'pex', 'pey', 'pez', 'pfa', 'pfe', 'pfl', 'pga', 'pgd', 'pgg', 'pgi', 'pgk', 'pgl', 'pgn', 'pgs', 'pgu', 'pgy', 'pgz', 'pha', 'phd', 'phg', 'phh', 'phi', 'phk', 'phl', 'phm', 'phn', 'pho', 'phq', 'phr', 'pht', 'phu', 'phv', 'phw', 'pia', 'pib', 'pic', 'pid', 'pie', 'pif', 'pig', 'pih', 'pii', 'pij', 'pil', 'pim', 'pin', 'pio', 'pip', 'pir', 'pis', 'pit', 'piu', 'piv', 'piw', 'pix', 'piy', 'piz', 'pjt', 'pka', 'pkb', 'pkc', 'pkg', 'pkh', 'pkn', 'pko', 'pkp', 'pkr', 'pks', 'pkt', 'pku', 'pla', 'plb', 'plc', 'pld', 'ple', 'plf', 'plg', 'plh', 'plj', 'plk', 'pll', 'pln', 'plo', 'plp', 'plq', 'plr', 'pls', 'plt', 'plu', 'plv', 'plw', 'ply', 'plz', 'pma', 'pmb', 'pmc', 'pmd', 'pme', 'pmf', 'pmh', 'pmi', 'pmj', 'pmk', 'pml', 'pmm', 'pmn', 'pmo', 'pmq', 'pmr', 'pms', 'pmt', 'pmu', 'pmw', 'pmx', 'pmy', 'pmz', 'pna', 'pnb', 'pnc', 'pne', 'png', 'pnh', 'pni', 'pnj', 'pnk', 'pnl', 'pnm', 'pnn', 'pno', 'pnp', 'pnq', 'pnr', 'pns', 'pnt', 'pnu', 'pnv', 'pnw', 'pnx', 'pny', 'pnz', 'poc', 'pod', 'poe', 'pof', 'pog', 'poh', 'poi', 'pok', 'pom', 'pon', 'poo', 'pop', 'poq', 'pos', 'pot', 'pov', 'pow', 'pox', 'poy', 'poz', 'ppa', 'ppe', 'ppi', 'ppk', 'ppl', 'ppm', 'ppn', 'ppo', 'ppp', 'ppq', 'ppr', 'pps', 'ppt', 'ppu', 'pqa', 'pqe', 'pqm', 'pqw', 'pra', 'prb', 'prc', 'prd', 'pre', 'prf', 'prg', 'prh', 'pri', 'prk', 'prl', 'prm', 'prn', 'pro', 'prp', 'prq', 'prr', 'prs', 'prt', 'pru', 'prw', 'prx', 'pry', 'prz', 'psa', 'psc', 'psd', 'pse', 'psg', 'psh', 'psi', 'psl', 'psm', 'psn', 'pso', 'psp', 'psq', 'psr', 'pss', 'pst', 'psu', 'psw', 'psy', 'pta', 'pth', 'pti', 'ptn', 'pto', 'ptp', 'ptq', 'ptr', 'ptt', 'ptu', 'ptv', 'ptw', 'pty', 'pua', 'pub', 'puc', 'pud', 'pue', 'puf', 'pug', 'pui', 'puj', 'puk', 'pum', 'puo', 'pup', 'puq', 'pur', 'put', 'puu', 'puw', 'pux', 'puy', 'puz', 'pwa', 'pwb', 'pwg', 'pwi', 'pwm', 'pwn', 'pwo', 'pwr', 'pww', 'pxm', 'pye', 'pym', 'pyn', 'pys', 'pyu', 'pyx', 'pyy', 'pzn', 'qaa..qtz', 'qua', 'qub', 'quc', 'qud', 'quf', 'qug', 'quh', 'qui', 'quk', 'qul', 'qum', 'qun', 'qup', 'quq', 'qur', 'qus', 'quv', 'quw', 'qux', 'quy', 'quz', 'qva', 'qvc', 'qve', 'qvh', 'qvi', 'qvj', 'qvl', 'qvm', 'qvn', 'qvo', 'qvp', 'qvs', 'qvw', 'qvy', 'qvz', 'qwa', 'qwc', 'qwe', 'qwh', 'qwm', 'qws', 'qwt', 'qxa', 'qxc', 'qxh', 'qxl', 'qxn', 'qxo', 'qxp', 'qxq', 'qxr', 'qxs', 'qxt', 'qxu', 'qxw', 'qya', 'qyp', 'raa', 'rab', 'rac', 'rad', 'raf', 'rag', 'rah', 'rai', 'raj', 'rak', 'ral', 'ram', 'ran', 'rao', 'rap', 'raq', 'rar', 'ras', 'rat', 'rau', 'rav', 'raw', 'rax', 'ray', 'raz', 'rbb', 'rbk', 'rbl', 'rbp', 'rcf', 'rdb', 'rea', 'reb', 'ree', 'reg', 'rei', 'rej', 'rel', 'rem', 'ren', 'rer', 'res', 'ret', 'rey', 'rga', 'rge', 'rgk', 'rgn', 'rgr', 'rgs', 'rgu', 'rhg', 'rhp', 'ria', 'rie', 'rif', 'ril', 'rim', 'rin', 'rir', 'rit', 'riu', 'rjg', 'rji', 'rjs', 'rka', 'rkb', 'rkh', 'rki', 'rkm', 'rkt', 'rkw', 'rma', 'rmb', 'rmc', 'rmd', 'rme', 'rmf', 'rmg', 'rmh', 'rmi', 'rmk', 'rml', 'rmm', 'rmn', 'rmo', 'rmp', 'rmq', 'rmr', 'rms', 'rmt', 'rmu', 'rmv', 'rmw', 'rmx', 'rmy', 'rmz', 'rna', 'rnd', 'rng', 'rnl', 'rnn', 'rnp', 'rnr', 'rnw', 'roa', 'rob', 'roc', 'rod', 'roe', 'rof', 'rog', 'rol', 'rom', 'roo', 'rop', 'ror', 'rou', 'row', 'rpn', 'rpt', 'rri', 'rro', 'rrt', 'rsb', 'rsi', 'rsl', 'rsm', 'rtc', 'rth', 'rtm', 'rts', 'rtw', 'rub', 'ruc', 'rue', 'ruf', 'rug', 'ruh', 'rui', 'ruk', 'ruo', 'rup', 'ruq', 'rut', 'ruu', 'ruy', 'ruz', 'rwa', 'rwk', 'rwm', 'rwo', 'rwr', 'rxd', 'rxw', 'ryn', 'rys', 'ryu', 'rzh', 'saa', 'sab', 'sac', 'sad', 'sae', 'saf', 'sah', 'sai', 'saj', 'sak', 'sal', 'sam', 'sao', 'sap', 'saq', 'sar', 'sas', 'sat', 'sau', 'sav', 'saw', 'sax', 'say', 'saz', 'sba', 'sbb', 'sbc', 'sbd', 'sbe', 'sbf', 'sbg', 'sbh', 'sbi', 'sbj', 'sbk', 'sbl', 'sbm', 'sbn', 'sbo', 'sbp', 'sbq', 'sbr', 'sbs', 'sbt', 'sbu', 'sbv', 'sbw', 'sbx', 'sby', 'sbz', 'sca', 'scb', 'sce', 'scf', 'scg', 'sch', 'sci', 'sck', 'scl', 'scn', 'sco', 'scp', 'scq', 'scs', 'scu', 'scv', 'scw', 'scx', 'sda', 'sdb', 'sdc', 'sde', 'sdf', 'sdg', 'sdh', 'sdj', 'sdk', 'sdl', 'sdm', 'sdn', 'sdo', 'sdp', 'sdr', 'sds', 'sdt', 'sdu', 'sdv', 'sdx', 'sdz', 'sea', 'seb', 'sec', 'sed', 'see', 'sef', 'seg', 'seh', 'sei', 'sej', 'sek', 'sel', 'sem', 'sen', 'seo', 'sep', 'seq', 'ser', 'ses', 'set', 'seu', 'sev', 'sew', 'sey', 'sez', 'sfb', 'sfe', 'sfm', 'sfs', 'sfw', 'sga', 'sgb', 'sgc', 'sgd', 'sge', 'sgg', 'sgh', 'sgi', 'sgj', 'sgk', 'sgl', 'sgm', 'sgn', 'sgo', 'sgp', 'sgr', 'sgs', 'sgt', 'sgu', 'sgw', 'sgx', 'sgy', 'sgz', 'sha', 'shb', 'shc', 'shd', 'she', 'shg', 'shh', 'shi', 'shj', 'shk', 'shl', 'shm', 'shn', 'sho', 'shp', 'shq', 'shr', 'shs', 'sht', 'shu', 'shv', 'shw', 'shx', 'shy', 'shz', 'sia', 'sib', 'sid', 'sie', 'sif', 'sig', 'sih', 'sii', 'sij', 'sik', 'sil', 'sim', 'sio', 'sip', 'siq', 'sir', 'sis', 'sit', 'siu', 'siv', 'siw', 'six', 'siy', 'siz', 'sja', 'sjb', 'sjd', 'sje', 'sjg', 'sjk', 'sjl', 'sjm', 'sjn', 'sjo', 'sjp', 'sjr', 'sjs', 'sjt', 'sju', 'sjw', 'ska', 'skb', 'skc', 'skd', 'ske', 'skf', 'skg', 'skh', 'ski', 'skj', 'skk', 'skm', 'skn', 'sko', 'skp', 'skq', 'skr', 'sks', 'skt', 'sku', 'skv', 'skw', 'skx', 'sky', 'skz', 'sla', 'slc', 'sld', 'sle', 'slf', 'slg', 'slh', 'sli', 'slj', 'sll', 'slm', 'sln', 'slp', 'slq', 'slr', 'sls', 'slt', 'slu', 'slw', 'slx', 'sly', 'slz', 'sma', 'smb', 'smc', 'smd', 'smf', 'smg', 'smh', 'smi', 'smj', 'smk', 'sml', 'smm', 'smn', 'smp', 'smq', 'smr', 'sms', 'smt', 'smu', 'smv', 'smw', 'smx', 'smy', 'smz', 'snb', 'snc', 'sne', 'snf', 'sng', 'snh', 'sni', 'snj', 'snk', 'snl', 'snm', 'snn', 'sno', 'snp', 'snq', 'snr', 'sns', 'snu', 'snv', 'snw', 'snx', 'sny', 'snz', 'soa', 'sob', 'soc', 'sod', 'soe', 'sog', 'soh', 'soi', 'soj', 'sok', 'sol', 'son', 'soo', 'sop', 'soq', 'sor', 'sos', 'sou', 'sov', 'sow', 'sox', 'soy', 'soz', 'spb', 'spc', 'spd', 'spe', 'spg', 'spi', 'spk', 'spl', 'spm', 'spn', 'spo', 'spp', 'spq', 'spr', 'sps', 'spt', 'spu', 'spv', 'spx', 'spy', 'sqa', 'sqh', 'sqj', 'sqk', 'sqm', 'sqn', 'sqo', 'sqq', 'sqr', 'sqs', 'sqt', 'squ', 'sra', 'srb', 'src', 'sre', 'srf', 'srg', 'srh', 'sri', 'srk', 'srl', 'srm', 'srn', 'sro', 'srq', 'srr', 'srs', 'srt', 'sru', 'srv', 'srw', 'srx', 'sry', 'srz', 'ssa', 'ssb', 'ssc', 'ssd', 'sse', 'ssf', 'ssg', 'ssh', 'ssi', 'ssj', 'ssk', 'ssl', 'ssm', 'ssn', 'sso', 'ssp', 'ssq', 'ssr', 'sss', 'sst', 'ssu', 'ssv', 'ssx', 'ssy', 'ssz', 'sta', 'stb', 'std', 'ste', 'stf', 'stg', 'sth', 'sti', 'stj', 'stk', 'stl', 'stm', 'stn', 'sto', 'stp', 'stq', 'str', 'sts', 'stt', 'stu', 'stv', 'stw', 'sty', 'sua', 'sub', 'suc', 'sue', 'sug', 'sui', 'suj', 'suk', 'sul', 'sum', 'suq', 'sur', 'sus', 'sut', 'suv', 'suw', 'sux', 'suy', 'suz', 'sva', 'svb', 'svc', 'sve', 'svk', 'svm', 'svr', 'svs', 'svx', 'swb', 'swc', 'swf', 'swg', 'swh', 'swi', 'swj', 'swk', 'swl', 'swm', 'swn', 'swo', 'swp', 'swq', 'swr', 'sws', 'swt', 'swu', 'swv', 'sww', 'swx', 'swy', 'sxb', 'sxc', 'sxe', 'sxg', 'sxk', 'sxl', 'sxm', 'sxn', 'sxo', 'sxr', 'sxs', 'sxu', 'sxw', 'sya', 'syb', 'syc', 'syd', 'syi', 'syk', 'syl', 'sym', 'syn', 'syo', 'syr', 'sys', 'syw', 'syx', 'syy', 'sza', 'szb', 'szc', 'szd', 'sze', 'szg', 'szl', 'szn', 'szp', 'szv', 'szw', 'taa', 'tab', 'tac', 'tad', 'tae', 'taf', 'tag', 'tai', 'taj', 'tak', 'tal', 'tan', 'tao', 'tap', 'taq', 'tar', 'tas', 'tau', 'tav', 'taw', 'tax', 'tay', 'taz', 'tba', 'tbb', 'tbc', 'tbd', 'tbe', 'tbf', 'tbg', 'tbh', 'tbi', 'tbj', 'tbk', 'tbl', 'tbm', 'tbn', 'tbo', 'tbp', 'tbq', 'tbr', 'tbs', 'tbt', 'tbu', 'tbv', 'tbw', 'tbx', 'tby', 'tbz', 'tca', 'tcb', 'tcc', 'tcd', 'tce', 'tcf', 'tcg', 'tch', 'tci', 'tck', 'tcl', 'tcm', 'tcn', 'tco', 'tcp', 'tcq', 'tcs', 'tct', 'tcu', 'tcw', 'tcx', 'tcy', 'tcz', 'tda', 'tdb', 'tdc', 'tdd', 'tde', 'tdf', 'tdg', 'tdh', 'tdi', 'tdj', 'tdk', 'tdl', 'tdm', 'tdn', 'tdo', 'tdq', 'tdr', 'tds', 'tdt', 'tdu', 'tdv', 'tdx', 'tdy', 'tea', 'teb', 'tec', 'ted', 'tee', 'tef', 'teg', 'teh', 'tei', 'tek', 'tem', 'ten', 'teo', 'tep', 'teq', 'ter', 'tes', 'tet', 'teu', 'tev', 'tew', 'tex', 'tey', 'tfi', 'tfn', 'tfo', 'tfr', 'tft', 'tga', 'tgb', 'tgc', 'tgd', 'tge', 'tgf', 'tgg', 'tgh', 'tgi', 'tgj', 'tgn', 'tgo', 'tgp', 'tgq', 'tgr', 'tgs', 'tgt', 'tgu', 'tgv', 'tgw', 'tgx', 'tgy', 'tgz', 'thc', 'thd', 'the', 'thf', 'thh', 'thi', 'thk', 'thl', 'thm', 'thn', 'thp', 'thq', 'thr', 'ths', 'tht', 'thu', 'thv', 'thw', 'thx', 'thy', 'thz', 'tia', 'tic', 'tid', 'tie', 'tif', 'tig', 'tih', 'tii', 'tij', 'tik', 'til', 'tim', 'tin', 'tio', 'tip', 'tiq', 'tis', 'tit', 'tiu', 'tiv', 'tiw', 'tix', 'tiy', 'tiz', 'tja', 'tjg', 'tji', 'tjl', 'tjm', 'tjn', 'tjo', 'tjs', 'tju', 'tjw', 'tka', 'tkb', 'tkd', 'tke', 'tkf', 'tkg', 'tkk', 'tkl', 'tkm', 'tkn', 'tkp', 'tkq', 'tkr', 'tks', 'tkt', 'tku', 'tkv', 'tkw', 'tkx', 'tkz', 'tla', 'tlb', 'tlc', 'tld', 'tlf', 'tlg', 'tlh', 'tli', 'tlj', 'tlk', 'tll', 'tlm', 'tln', 'tlo', 'tlp', 'tlq', 'tlr', 'tls', 'tlt', 'tlu', 'tlv', 'tlw', 'tlx', 'tly', 'tma', 'tmb', 'tmc', 'tmd', 'tme', 'tmf', 'tmg', 'tmh', 'tmi', 'tmj', 'tmk', 'tml', 'tmm', 'tmn', 'tmo', 'tmp', 'tmq', 'tmr', 'tms', 'tmt', 'tmu', 'tmv', 'tmw', 'tmy', 'tmz', 'tna', 'tnb', 'tnc', 'tnd', 'tne', 'tnf', 'tng', 'tnh', 'tni', 'tnk', 'tnl', 'tnm', 'tnn', 'tno', 'tnp', 'tnq', 'tnr', 'tns', 'tnt', 'tnu', 'tnv', 'tnw', 'tnx', 'tny', 'tnz', 'tob', 'toc', 'tod', 'toe', 'tof', 'tog', 'toh', 'toi', 'toj', 'tol', 'tom', 'too', 'top', 'toq', 'tor', 'tos', 'tou', 'tov', 'tow', 'tox', 'toy', 'toz', 'tpa', 'tpc', 'tpe', 'tpf', 'tpg', 'tpi', 'tpj', 'tpk', 'tpl', 'tpm', 'tpn', 'tpo', 'tpp', 'tpq', 'tpr', 'tpt', 'tpu', 'tpv', 'tpw', 'tpx', 'tpy', 'tpz', 'tqb', 'tql', 'tqm', 'tqn', 'tqo', 'tqp', 'tqq', 'tqr', 'tqt', 'tqu', 'tqw', 'tra', 'trb', 'trc', 'trd', 'tre', 'trf', 'trg', 'trh', 'tri', 'trj', 'trk', 'trl', 'trm', 'trn', 'tro', 'trp', 'trq', 'trr', 'trs', 'trt', 'tru', 'trv', 'trw', 'trx', 'try', 'trz', 'tsa', 'tsb', 'tsc', 'tsd', 'tse', 'tsf', 'tsg', 'tsh', 'tsi', 'tsj', 'tsk', 'tsl', 'tsm', 'tsp', 'tsq', 'tsr', 'tss', 'tst', 'tsu', 'tsv', 'tsw', 'tsx', 'tsy', 'tsz', 'tta', 'ttb', 'ttc', 'ttd', 'tte', 'ttf', 'ttg', 'tth', 'tti', 'ttj', 'ttk', 'ttl', 'ttm', 'ttn', 'tto', 'ttp', 'ttq', 'ttr', 'tts', 'ttt', 'ttu', 'ttv', 'ttw', 'tty', 'ttz', 'tua', 'tub', 'tuc', 'tud', 'tue', 'tuf', 'tug', 'tuh', 'tui', 'tuj', 'tul', 'tum', 'tun', 'tuo', 'tup', 'tuq', 'tus', 'tut', 'tuu', 'tuv', 'tuw', 'tux', 'tuy', 'tuz', 'tva', 'tvd', 'tve', 'tvk', 'tvl', 'tvm', 'tvn', 'tvo', 'tvs', 'tvt', 'tvu', 'tvw', 'tvy', 'twa', 'twb', 'twc', 'twd', 'twe', 'twf', 'twg', 'twh', 'twl', 'twm', 'twn', 'two', 'twp', 'twq', 'twr', 'twt', 'twu', 'tww', 'twx', 'twy', 'txa', 'txb', 'txc', 'txe', 'txg', 'txh', 'txi', 'txj', 'txm', 'txn', 'txo', 'txq', 'txr', 'txs', 'txt', 'txu', 'txx', 'txy', 'tya', 'tye', 'tyh', 'tyi', 'tyj', 'tyl', 'tyn', 'typ', 'tyr', 'tys', 'tyt', 'tyu', 'tyv', 'tyx', 'tyz', 'tza', 'tzh', 'tzj', 'tzl', 'tzm', 'tzn', 'tzo', 'tzx', 'uam', 'uan', 'uar', 'uba', 'ubi', 'ubl', 'ubr', 'ubu', 'uby', 'uda', 'ude', 'udg', 'udi', 'udj', 'udl', 'udm', 'udu', 'ues', 'ufi', 'uga', 'ugb', 'uge', 'ugn', 'ugo', 'ugy', 'uha', 'uhn', 'uis', 'uiv', 'uji', 'uka', 'ukg', 'ukh', 'ukl', 'ukp', 'ukq', 'uks', 'uku', 'ukw', 'uky', 'ula', 'ulb', 'ulc', 'ule', 'ulf', 'uli', 'ulk', 'ull', 'ulm', 'uln', 'ulu', 'ulw', 'uma', 'umb', 'umc', 'umd', 'umg', 'umi', 'umm', 'umn', 'umo', 'ump', 'umr', 'ums', 'umu', 'una', 'und', 'une', 'ung', 'unk', 'unm', 'unn', 'unp', 'unr', 'unu', 'unx', 'unz', 'uok', 'upi', 'upv', 'ura', 'urb', 'urc', 'ure', 'urf', 'urg', 'urh', 'uri', 'urj', 'urk', 'url', 'urm', 'urn', 'uro', 'urp', 'urr', 'urt', 'uru', 'urv', 'urw', 'urx', 'ury', 'urz', 'usa', 'ush', 'usi', 'usk', 'usp', 'usu', 'uta', 'ute', 'utp', 'utr', 'utu', 'uum', 'uun', 'uur', 'uuu', 'uve', 'uvh', 'uvl', 'uwa', 'uya', 'uzn', 'uzs', 'vaa', 'vae', 'vaf', 'vag', 'vah', 'vai', 'vaj', 'val', 'vam', 'van', 'vao', 'vap', 'var', 'vas', 'vau', 'vav', 'vay', 'vbb', 'vbk', 'vec', 'ved', 'vel', 'vem', 'veo', 'vep', 'ver', 'vgr', 'vgt', 'vic', 'vid', 'vif', 'vig', 'vil', 'vin', 'vis', 'vit', 'viv', 'vka', 'vki', 'vkj', 'vkk', 'vkl', 'vkm', 'vko', 'vkp', 'vkt', 'vku', 'vlp', 'vls', 'vma', 'vmb', 'vmc', 'vmd', 'vme', 'vmf', 'vmg', 'vmh', 'vmi', 'vmj', 'vmk', 'vml', 'vmm', 'vmp', 'vmq', 'vmr', 'vms', 'vmu', 'vmv', 'vmw', 'vmx', 'vmy', 'vmz', 'vnk', 'vnm', 'vnp', 'vor', 'vot', 'vra', 'vro', 'vrs', 'vrt', 'vsi', 'vsl', 'vsv', 'vto', 'vum', 'vun', 'vut', 'vwa', 'waa', 'wab', 'wac', 'wad', 'wae', 'waf', 'wag', 'wah', 'wai', 'waj', 'wak', 'wal', 'wam', 'wan', 'wao', 'wap', 'waq', 'war', 'was', 'wat', 'wau', 'wav', 'waw', 'wax', 'way', 'waz', 'wba', 'wbb', 'wbe', 'wbf', 'wbh', 'wbi', 'wbj', 'wbk', 'wbl', 'wbm', 'wbp', 'wbq', 'wbr', 'wbt', 'wbv', 'wbw', 'wca', 'wci', 'wdd', 'wdg', 'wdj', 'wdk', 'wdu', 'wdy', 'wea', 'wec', 'wed', 'weg', 'weh', 'wei', 'wem', 'wen', 'weo', 'wep', 'wer', 'wes', 'wet', 'weu', 'wew', 'wfg', 'wga', 'wgb', 'wgg', 'wgi', 'wgo', 'wgu', 'wgw', 'wgy', 'wha', 'whg', 'whk', 'whu', 'wib', 'wic', 'wie', 'wif', 'wig', 'wih', 'wii', 'wij', 'wik', 'wil', 'wim', 'win', 'wir', 'wit', 'wiu', 'wiv', 'wiw', 'wiy', 'wja', 'wji', 'wka', 'wkb', 'wkd', 'wkl', 'wku', 'wkw', 'wky', 'wla', 'wlc', 'wle', 'wlg', 'wli', 'wlk', 'wll', 'wlm', 'wlo', 'wlr', 'wls', 'wlu', 'wlv', 'wlw', 'wlx', 'wly', 'wma', 'wmb', 'wmc', 'wmd', 'wme', 'wmh', 'wmi', 'wmm', 'wmn', 'wmo', 'wms', 'wmt', 'wmw', 'wmx', 'wnb', 'wnc', 'wnd', 'wne', 'wng', 'wni', 'wnk', 'wnm', 'wnn', 'wno', 'wnp', 'wnu', 'wnw', 'wny', 'woa', 'wob', 'woc', 'wod', 'woe', 'wof', 'wog', 'woi', 'wok', 'wom', 'won', 'woo', 'wor', 'wos', 'wow', 'woy', 'wpc', 'wra', 'wrb', 'wrd', 'wrg', 'wrh', 'wri', 'wrk', 'wrl', 'wrm', 'wrn', 'wro', 'wrp', 'wrr', 'wrs', 'wru', 'wrv', 'wrw', 'wrx', 'wry', 'wrz', 'wsa', 'wsg', 'wsi', 'wsk', 'wsr', 'wss', 'wsu', 'wsv', 'wtf', 'wth', 'wti', 'wtk', 'wtm', 'wtw', 'wua', 'wub', 'wud', 'wuh', 'wul', 'wum', 'wun', 'wur', 'wut', 'wuu', 'wuv', 'wux', 'wuy', 'wwa', 'wwb', 'wwo', 'wwr', 'www', 'wxa', 'wxw', 'wya', 'wyb', 'wyi', 'wym', 'wyr', 'wyy', 'xaa', 'xab', 'xac', 'xad', 'xae', 'xag', 'xai', 'xaj', 'xak', 'xal', 'xam', 'xan', 'xao', 'xap', 'xaq', 'xar', 'xas', 'xat', 'xau', 'xav', 'xaw', 'xay', 'xba', 'xbb', 'xbc', 'xbd', 'xbe', 'xbg', 'xbi', 'xbj', 'xbm', 'xbn', 'xbo', 'xbp', 'xbr', 'xbw', 'xbx', 'xby', 'xcb', 'xcc', 'xce', 'xcg', 'xch', 'xcl', 'xcm', 'xcn', 'xco', 'xcr', 'xct', 'xcu', 'xcv', 'xcw', 'xcy', 'xda', 'xdc', 'xdk', 'xdm', 'xdy', 'xeb', 'xed', 'xeg', 'xel', 'xem', 'xep', 'xer', 'xes', 'xet', 'xeu', 'xfa', 'xga', 'xgb', 'xgd', 'xgf', 'xgg', 'xgi', 'xgl', 'xgm', 'xgn', 'xgr', 'xgu', 'xgw', 'xha', 'xhc', 'xhd', 'xhe', 'xhr', 'xht', 'xhu', 'xhv', 'xia', 'xib', 'xii', 'xil', 'xin', 'xip', 'xir', 'xis', 'xiv', 'xiy', 'xjb', 'xjt', 'xka', 'xkb', 'xkc', 'xkd', 'xke', 'xkf', 'xkg', 'xkh', 'xki', 'xkj', 'xkk', 'xkl', 'xkn', 'xko', 'xkp', 'xkq', 'xkr', 'xks', 'xkt', 'xku', 'xkv', 'xkw', 'xkx', 'xky', 'xkz', 'xla', 'xlb', 'xlc', 'xld', 'xle', 'xlg', 'xli', 'xln', 'xlo', 'xlp', 'xls', 'xlu', 'xly', 'xma', 'xmb', 'xmc', 'xmd', 'xme', 'xmf', 'xmg', 'xmh', 'xmj', 'xmk', 'xml', 'xmm', 'xmn', 'xmo', 'xmp', 'xmq', 'xmr', 'xms', 'xmt', 'xmu', 'xmv', 'xmw', 'xmx', 'xmy', 'xmz', 'xna', 'xnb', 'xnd', 'xng', 'xnh', 'xni', 'xnk', 'xnn', 'xno', 'xnr', 'xns', 'xnt', 'xnu', 'xny', 'xnz', 'xoc', 'xod', 'xog', 'xoi', 'xok', 'xom', 'xon', 'xoo', 'xop', 'xor', 'xow', 'xpa', 'xpc', 'xpe', 'xpg', 'xpi', 'xpj', 'xpk', 'xpm', 'xpn', 'xpo', 'xpp', 'xpq', 'xpr', 'xps', 'xpt', 'xpu', 'xpy', 'xqa', 'xqt', 'xra', 'xrb', 'xrd', 'xre', 'xrg', 'xri', 'xrm', 'xrn', 'xrq', 'xrr', 'xrt', 'xru', 'xrw', 'xsa', 'xsb', 'xsc', 'xsd', 'xse', 'xsh', 'xsi', 'xsj', 'xsl', 'xsm', 'xsn', 'xso', 'xsp', 'xsq', 'xsr', 'xss', 'xsu', 'xsv', 'xsy', 'xta', 'xtb', 'xtc', 'xtd', 'xte', 'xtg', 'xth', 'xti', 'xtj', 'xtl', 'xtm', 'xtn', 'xto', 'xtp', 'xtq', 'xtr', 'xts', 'xtt', 'xtu', 'xtv', 'xtw', 'xty', 'xtz', 'xua', 'xub', 'xud', 'xug', 'xuj', 'xul', 'xum', 'xun', 'xuo', 'xup', 'xur', 'xut', 'xuu', 'xve', 'xvi', 'xvn', 'xvo', 'xvs', 'xwa', 'xwc', 'xwd', 'xwe', 'xwg', 'xwj', 'xwk', 'xwl', 'xwo', 'xwr', 'xwt', 'xww', 'xxb', 'xxk', 'xxm', 'xxr', 'xxt', 'xya', 'xyb', 'xyj', 'xyk', 'xyl', 'xyt', 'xyy', 'xzh', 'xzm', 'xzp', 'yaa', 'yab', 'yac', 'yad', 'yae', 'yaf', 'yag', 'yah', 'yai', 'yaj', 'yak', 'yal', 'yam', 'yan', 'yao', 'yap', 'yaq', 'yar', 'yas', 'yat', 'yau', 'yav', 'yaw', 'yax', 'yay', 'yaz', 'yba', 'ybb', 'ybd', 'ybe', 'ybh', 'ybi', 'ybj', 'ybk', 'ybl', 'ybm', 'ybn', 'ybo', 'ybx', 'yby', 'ych', 'ycl', 'ycn', 'ycp', 'yda', 'ydd', 'yde', 'ydg', 'ydk', 'yds', 'yea', 'yec', 'yee', 'yei', 'yej', 'yel', 'yen', 'yer', 'yes', 'yet', 'yeu', 'yev', 'yey', 'yga', 'ygi', 'ygl', 'ygm', 'ygp', 'ygr', 'ygs', 'ygu', 'ygw', 'yha', 'yhd', 'yhl', 'yhs', 'yia', 'yif', 'yig', 'yih', 'yii', 'yij', 'yik', 'yil', 'yim', 'yin', 'yip', 'yiq', 'yir', 'yis', 'yit', 'yiu', 'yiv', 'yix', 'yiy', 'yiz', 'yka', 'ykg', 'yki', 'ykk', 'ykl', 'ykm', 'ykn', 'yko', 'ykr', 'ykt', 'yku', 'yky', 'yla', 'ylb', 'yle', 'ylg', 'yli', 'yll', 'ylm', 'yln', 'ylo', 'ylr', 'ylu', 'yly', 'yma', 'ymb', 'ymc', 'ymd', 'yme', 'ymg', 'ymh', 'ymi', 'ymk', 'yml', 'ymm', 'ymn', 'ymo', 'ymp', 'ymq', 'ymr', 'yms', 'ymt', 'ymx', 'ymz', 'yna', 'ynd', 'yne', 'yng', 'ynh', 'ynk', 'ynl', 'ynn', 'yno', 'ynq', 'yns', 'ynu', 'yob', 'yog', 'yoi', 'yok', 'yol', 'yom', 'yon', 'yos', 'yot', 'yox', 'yoy', 'ypa', 'ypb', 'ypg', 'yph', 'ypk', 'ypm', 'ypn', 'ypo', 'ypp', 'ypz', 'yra', 'yrb', 'yre', 'yri', 'yrk', 'yrl', 'yrm', 'yrn', 'yro', 'yrs', 'yrw', 'yry', 'ysc', 'ysd', 'ysg', 'ysl', 'ysn', 'yso', 'ysp', 'ysr', 'yss', 'ysy', 'yta', 'ytl', 'ytp', 'ytw', 'yty', 'yua', 'yub', 'yuc', 'yud', 'yue', 'yuf', 'yug', 'yui', 'yuj', 'yuk', 'yul', 'yum', 'yun', 'yup', 'yuq', 'yur', 'yut', 'yuu', 'yuw', 'yux', 'yuy', 'yuz', 'yva', 'yvt', 'ywa', 'ywg', 'ywl', 'ywn', 'ywq', 'ywr', 'ywt', 'ywu', 'yww', 'yxa', 'yxg', 'yxl', 'yxm', 'yxu', 'yxy', 'yyr', 'yyu', 'yyz', 'yzg', 'yzk', 'zaa', 'zab', 'zac', 'zad', 'zae', 'zaf', 'zag', 'zah', 'zai', 'zaj', 'zak', 'zal', 'zam', 'zao', 'zap', 'zaq', 'zar', 'zas', 'zat', 'zau', 'zav', 'zaw', 'zax', 'zay', 'zaz', 'zbc', 'zbe', 'zbl', 'zbt', 'zbw', 'zca', 'zch', 'zdj', 'zea', 'zeg', 'zeh', 'zen', 'zga', 'zgb', 'zgh', 'zgm', 'zgn', 'zgr', 'zhb', 'zhd', 'zhi', 'zhn', 'zhw', 'zhx', 'zia', 'zib', 'zik', 'zil', 'zim', 'zin', 'zir', 'ziw', 'ziz', 'zka', 'zkb', 'zkd', 'zkg', 'zkh', 'zkk', 'zkn', 'zko', 'zkp', 'zkr', 'zkt', 'zku', 'zkv', 'zkz', 'zle', 'zlj', 'zlm', 'zln', 'zlq', 'zls', 'zlw', 'zma', 'zmb', 'zmc', 'zmd', 'zme', 'zmf', 'zmg', 'zmh', 'zmi', 'zmj', 'zmk', 'zml', 'zmm', 'zmn', 'zmo', 'zmp', 'zmq', 'zmr', 'zms', 'zmt', 'zmu', 'zmv', 'zmw', 'zmx', 'zmy', 'zmz', 'zna', 'znd', 'zne', 'zng', 'znk', 'zns', 'zoc', 'zoh', 'zom', 'zoo', 'zoq', 'zor', 'zos', 'zpa', 'zpb', 'zpc', 'zpd', 'zpe', 'zpf', 'zpg', 'zph', 'zpi', 'zpj', 'zpk', 'zpl', 'zpm', 'zpn', 'zpo', 'zpp', 'zpq', 'zpr', 'zps', 'zpt', 'zpu', 'zpv', 'zpw', 'zpx', 'zpy', 'zpz', 'zqe', 'zra', 'zrg', 'zrn', 'zro', 'zrp', 'zrs', 'zsa', 'zsk', 'zsl', 'zsm', 'zsr', 'zsu', 'zte', 'ztg', 'ztl', 'ztm', 'ztn', 'ztp', 'ztq', 'zts', 'ztt', 'ztu', 'ztx', 'zty', 'zua', 'zuh', 'zum', 'zun', 'zuy', 'zwa', 'zxx', 'zyb', 'zyg', 'zyj', 'zyn', 'zyp', 'zza', 'zzj' ],\n        id: 'valid-lang'\n      } ]\n    }, {\n      id: 'image-alt',\n      selector: 'img, [role=\\'img\\']',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-alt', 'aria-label', 'aria-labelledby', 'non-empty-title', 'role-presentation', 'role-none' ],\n      none: []\n    }, {\n      id: 'image-redundant-alt',\n      selector: 'button, [role=\"button\"], a[href], p, li, td, th',\n      tags: [ 'cat.text-alternatives', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'duplicate-img-label' ]\n    }, {\n      id: 'input-image-alt',\n      selector: 'input[type=\"image\"]',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'non-empty-alt', 'aria-label', 'aria-labelledby', 'non-empty-title' ],\n      none: []\n    }, {\n      id: 'label-title-only',\n      selector: 'input:not([type=\\'hidden\\']):not([type=\\'image\\']):not([type=\\'button\\']):not([type=\\'submit\\']):not([type=\\'reset\\']), select, textarea',\n      enabled: false,\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'title-only' ]\n    }, {\n      id: 'label',\n      selector: 'input:not([type=\\'hidden\\']):not([type=\\'image\\']):not([type=\\'button\\']):not([type=\\'submit\\']):not([type=\\'reset\\']), select, textarea',\n      tags: [ 'cat.forms', 'wcag2a', 'wcag332', 'wcag131', 'section508', 'section508.22.n' ],\n      all: [],\n      any: [ 'aria-label', 'aria-labelledby', 'implicit-label', 'explicit-label', 'non-empty-title' ],\n      none: [ 'help-same-as-label', 'multiple-label' ]\n    }, {\n      id: 'layout-table',\n      selector: 'table',\n      matches: function matches(node) {\n        return !axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.semantics', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'has-th', 'has-caption', 'has-summary' ]\n    }, {\n      id: 'link-in-text-block',\n      selector: 'a[href]:not([role]), *[role=link]',\n      matches: function matches(node) {\n        var text = axe.commons.text.sanitize(node.textContent);\n        if (!text) {\n          return false;\n        }\n        if (!axe.commons.dom.isVisible(node, false)) {\n          return false;\n        }\n        return axe.commons.dom.isInTextBlock(node);\n      },\n      excludeHidden: false,\n      enabled: false,\n      tags: [ 'cat.color', 'experimental', 'wcag2a', 'wcag141' ],\n      all: [ 'link-in-text-block' ],\n      any: [],\n      none: []\n    }, {\n      id: 'link-name',\n      selector: 'a[href]:not([role=\"button\"]), [role=link][href]',\n      tags: [ 'cat.name-role-value', 'wcag2a', 'wcag111', 'wcag412', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'role-presentation', 'role-none' ],\n      none: [ 'focusable-no-name' ]\n    }, {\n      id: 'list',\n      selector: 'ul:not([role]), ol:not([role])',\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [],\n      none: [ 'only-listitems' ]\n    }, {\n      id: 'listitem',\n      selector: 'li:not([role])',\n      tags: [ 'cat.structure', 'wcag2a', 'wcag131' ],\n      all: [],\n      any: [ 'listitem' ],\n      none: []\n    }, {\n      id: 'marquee',\n      selector: 'marquee',\n      excludeHidden: false,\n      tags: [ 'cat.parsing', 'wcag2a', 'wcag222' ],\n      all: [],\n      any: [],\n      none: [ 'is-on-screen' ]\n    }, {\n      id: 'meta-refresh',\n      selector: 'meta[http-equiv=\"refresh\"]',\n      excludeHidden: false,\n      tags: [ 'cat.time', 'wcag2a', 'wcag2aaa', 'wcag221', 'wcag224', 'wcag325' ],\n      all: [],\n      any: [ 'meta-refresh' ],\n      none: []\n    }, {\n      id: 'meta-viewport-large',\n      selector: 'meta[name=\"viewport\"]',\n      excludeHidden: false,\n      tags: [ 'cat.sensory-and-visual-cues', 'best-practice' ],\n      all: [],\n      any: [ {\n        options: {\n          scaleMinimum: 5,\n          lowerBound: 2\n        },\n        id: 'meta-viewport-large'\n      } ],\n      none: []\n    }, {\n      id: 'meta-viewport',\n      selector: 'meta[name=\"viewport\"]',\n      excludeHidden: false,\n      tags: [ 'cat.sensory-and-visual-cues', 'wcag2aa', 'wcag144' ],\n      all: [],\n      any: [ {\n        options: {\n          scaleMinimum: 2\n        },\n        id: 'meta-viewport'\n      } ],\n      none: []\n    }, {\n      id: 'object-alt',\n      selector: 'object',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag111', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [ 'has-visible-text', 'aria-label', 'aria-labelledby', 'non-empty-title' ],\n      none: []\n    }, {\n      id: 'p-as-heading',\n      selector: 'p',\n      matches: function matches(node) {\n        var children = Array.from(node.parentNode.childNodes);\n        var nodeText = node.textContent.trim();\n        var isSentence = /[.!?:;](?![.!?:;])/g;\n        if (nodeText.length === 0 || (nodeText.match(isSentence) || []).length >= 2) {\n          return false;\n        }\n        var siblingsAfter = children.slice(children.indexOf(node) + 1).filter(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P' && elm.textContent.trim() !== '';\n        });\n        return siblingsAfter.length !== 0;\n      },\n      tags: [ 'cat.semantics', 'wcag2a', 'wcag131', 'experimental' ],\n      all: [ {\n        options: {\n          margins: [ {\n            weight: 150,\n            italic: true\n          }, {\n            weight: 150,\n            size: 1.15\n          }, {\n            italic: true,\n            size: 1.15\n          }, {\n            size: 1.4\n          } ]\n        },\n        id: 'p-as-heading'\n      } ],\n      any: [],\n      none: []\n    }, {\n      id: 'radiogroup',\n      selector: 'input[type=radio][name]',\n      tags: [ 'cat.forms', 'best-practice' ],\n      all: [],\n      any: [ 'group-labelledby', 'fieldset' ],\n      none: []\n    }, {\n      id: 'region',\n      selector: 'html',\n      pageLevel: true,\n      enabled: false,\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'region' ],\n      none: []\n    }, {\n      id: 'scope-attr-valid',\n      selector: 'td[scope], th[scope]',\n      enabled: true,\n      tags: [ 'cat.tables', 'best-practice' ],\n      all: [ 'html5-scope', 'scope-value' ],\n      any: [],\n      none: []\n    }, {\n      id: 'server-side-image-map',\n      selector: 'img[ismap]',\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag211', 'section508', 'section508.22.f' ],\n      all: [],\n      any: [],\n      none: [ 'exists' ]\n    }, {\n      id: 'skip-link',\n      selector: 'a[href]',\n      pageLevel: true,\n      enabled: false,\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'skip-link' ],\n      none: []\n    }, {\n      id: 'tabindex',\n      selector: '[tabindex]',\n      tags: [ 'cat.keyboard', 'best-practice' ],\n      all: [],\n      any: [ 'tabindex' ],\n      none: []\n    }, {\n      id: 'table-duplicate-name',\n      selector: 'table',\n      tags: [ 'cat.tables', 'best-practice' ],\n      all: [],\n      any: [],\n      none: [ 'same-caption-summary' ]\n    }, {\n      id: 'table-fake-caption',\n      selector: 'table',\n      matches: function matches(node) {\n        return axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'caption-faked' ],\n      any: [],\n      none: []\n    }, {\n      id: 'td-has-header',\n      selector: 'table',\n      matches: function matches(node) {\n        if (axe.commons.table.isDataTable(node)) {\n          var tableArray = axe.commons.table.toArray(node);\n          return tableArray.length >= 3 && tableArray[0].length >= 3 && tableArray[1].length >= 3 && tableArray[2].length >= 3;\n        }\n        return false;\n      },\n      tags: [ 'cat.tables', 'experimental', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'td-has-header' ],\n      any: [],\n      none: []\n    }, {\n      id: 'td-headers-attr',\n      selector: 'table',\n      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'td-headers-attr' ],\n      any: [],\n      none: []\n    }, {\n      id: 'th-has-data-cells',\n      selector: 'table',\n      matches: function matches(node) {\n        return axe.commons.table.isDataTable(node);\n      },\n      tags: [ 'cat.tables', 'wcag2a', 'wcag131', 'section508', 'section508.22.g' ],\n      all: [ 'th-has-data-cells' ],\n      any: [],\n      none: []\n    }, {\n      id: 'valid-lang',\n      selector: '[lang]:not(html), [xml\\\\:lang]:not(html)',\n      tags: [ 'cat.language', 'wcag2aa', 'wcag312' ],\n      all: [],\n      any: [],\n      none: [ {\n        options: [ 'aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'in', 'io', 'is', 'it', 'iu', 'iw', 'ja', 'ji', 'jv', 'jw', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mo', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu', 'aaa', 'aab', 'aac', 'aad', 'aae', 'aaf', 'aag', 'aah', 'aai', 'aak', 'aal', 'aam', 'aan', 'aao', 'aap', 'aaq', 'aas', 'aat', 'aau', 'aav', 'aaw', 'aax', 'aaz', 'aba', 'abb', 'abc', 'abd', 'abe', 'abf', 'abg', 'abh', 'abi', 'abj', 'abl', 'abm', 'abn', 'abo', 'abp', 'abq', 'abr', 'abs', 'abt', 'abu', 'abv', 'abw', 'abx', 'aby', 'abz', 'aca', 'acb', 'acd', 'ace', 'acf', 'ach', 'aci', 'ack', 'acl', 'acm', 'acn', 'acp', 'acq', 'acr', 'acs', 'act', 'acu', 'acv', 'acw', 'acx', 'acy', 'acz', 'ada', 'adb', 'add', 'ade', 'adf', 'adg', 'adh', 'adi', 'adj', 'adl', 'adn', 'ado', 'adp', 'adq', 'adr', 'ads', 'adt', 'adu', 'adw', 'adx', 'ady', 'adz', 'aea', 'aeb', 'aec', 'aed', 'aee', 'aek', 'ael', 'aem', 'aen', 'aeq', 'aer', 'aes', 'aeu', 'aew', 'aey', 'aez', 'afa', 'afb', 'afd', 'afe', 'afg', 'afh', 'afi', 'afk', 'afn', 'afo', 'afp', 'afs', 'aft', 'afu', 'afz', 'aga', 'agb', 'agc', 'agd', 'age', 'agf', 'agg', 'agh', 'agi', 'agj', 'agk', 'agl', 'agm', 'agn', 'ago', 'agp', 'agq', 'agr', 'ags', 'agt', 'agu', 'agv', 'agw', 'agx', 'agy', 'agz', 'aha', 'ahb', 'ahg', 'ahh', 'ahi', 'ahk', 'ahl', 'ahm', 'ahn', 'aho', 'ahp', 'ahr', 'ahs', 'aht', 'aia', 'aib', 'aic', 'aid', 'aie', 'aif', 'aig', 'aih', 'aii', 'aij', 'aik', 'ail', 'aim', 'ain', 'aio', 'aip', 'aiq', 'air', 'ais', 'ait', 'aiw', 'aix', 'aiy', 'aja', 'ajg', 'aji', 'ajn', 'ajp', 'ajt', 'aju', 'ajw', 'ajz', 'akb', 'akc', 'akd', 'ake', 'akf', 'akg', 'akh', 'aki', 'akj', 'akk', 'akl', 'akm', 'ako', 'akp', 'akq', 'akr', 'aks', 'akt', 'aku', 'akv', 'akw', 'akx', 'aky', 'akz', 'ala', 'alc', 'ald', 'ale', 'alf', 'alg', 'alh', 'ali', 'alj', 'alk', 'all', 'alm', 'aln', 'alo', 'alp', 'alq', 'alr', 'als', 'alt', 'alu', 'alv', 'alw', 'alx', 'aly', 'alz', 'ama', 'amb', 'amc', 'ame', 'amf', 'amg', 'ami', 'amj', 'amk', 'aml', 'amm', 'amn', 'amo', 'amp', 'amq', 'amr', 'ams', 'amt', 'amu', 'amv', 'amw', 'amx', 'amy', 'amz', 'ana', 'anb', 'anc', 'and', 'ane', 'anf', 'ang', 'anh', 'ani', 'anj', 'ank', 'anl', 'anm', 'ann', 'ano', 'anp', 'anq', 'anr', 'ans', 'ant', 'anu', 'anv', 'anw', 'anx', 'any', 'anz', 'aoa', 'aob', 'aoc', 'aod', 'aoe', 'aof', 'aog', 'aoh', 'aoi', 'aoj', 'aok', 'aol', 'aom', 'aon', 'aor', 'aos', 'aot', 'aou', 'aox', 'aoz', 'apa', 'apb', 'apc', 'apd', 'ape', 'apf', 'apg', 'aph', 'api', 'apj', 'apk', 'apl', 'apm', 'apn', 'apo', 'app', 'apq', 'apr', 'aps', 'apt', 'apu', 'apv', 'apw', 'apx', 'apy', 'apz', 'aqa', 'aqc', 'aqd', 'aqg', 'aql', 'aqm', 'aqn', 'aqp', 'aqr', 'aqt', 'aqz', 'arb', 'arc', 'ard', 'are', 'arh', 'ari', 'arj', 'ark', 'arl', 'arn', 'aro', 'arp', 'arq', 'arr', 'ars', 'art', 'aru', 'arv', 'arw', 'arx', 'ary', 'arz', 'asa', 'asb', 'asc', 'asd', 'ase', 'asf', 'asg', 'ash', 'asi', 'asj', 'ask', 'asl', 'asn', 'aso', 'asp', 'asq', 'asr', 'ass', 'ast', 'asu', 'asv', 'asw', 'asx', 'asy', 'asz', 'ata', 'atb', 'atc', 'atd', 'ate', 'atg', 'ath', 'ati', 'atj', 'atk', 'atl', 'atm', 'atn', 'ato', 'atp', 'atq', 'atr', 'ats', 'att', 'atu', 'atv', 'atw', 'atx', 'aty', 'atz', 'aua', 'aub', 'auc', 'aud', 'aue', 'auf', 'aug', 'auh', 'aui', 'auj', 'auk', 'aul', 'aum', 'aun', 'auo', 'aup', 'auq', 'aur', 'aus', 'aut', 'auu', 'auw', 'aux', 'auy', 'auz', 'avb', 'avd', 'avi', 'avk', 'avl', 'avm', 'avn', 'avo', 'avs', 'avt', 'avu', 'avv', 'awa', 'awb', 'awc', 'awd', 'awe', 'awg', 'awh', 'awi', 'awk', 'awm', 'awn', 'awo', 'awr', 'aws', 'awt', 'awu', 'awv', 'aww', 'awx', 'awy', 'axb', 'axe', 'axg', 'axk', 'axl', 'axm', 'axx', 'aya', 'ayb', 'ayc', 'ayd', 'aye', 'ayg', 'ayh', 'ayi', 'ayk', 'ayl', 'ayn', 'ayo', 'ayp', 'ayq', 'ayr', 'ays', 'ayt', 'ayu', 'ayx', 'ayy', 'ayz', 'aza', 'azb', 'azc', 'azd', 'azg', 'azj', 'azm', 'azn', 'azo', 'azt', 'azz', 'baa', 'bab', 'bac', 'bad', 'bae', 'baf', 'bag', 'bah', 'bai', 'baj', 'bal', 'ban', 'bao', 'bap', 'bar', 'bas', 'bat', 'bau', 'bav', 'baw', 'bax', 'bay', 'baz', 'bba', 'bbb', 'bbc', 'bbd', 'bbe', 'bbf', 'bbg', 'bbh', 'bbi', 'bbj', 'bbk', 'bbl', 'bbm', 'bbn', 'bbo', 'bbp', 'bbq', 'bbr', 'bbs', 'bbt', 'bbu', 'bbv', 'bbw', 'bbx', 'bby', 'bbz', 'bca', 'bcb', 'bcc', 'bcd', 'bce', 'bcf', 'bcg', 'bch', 'bci', 'bcj', 'bck', 'bcl', 'bcm', 'bcn', 'bco', 'bcp', 'bcq', 'bcr', 'bcs', 'bct', 'bcu', 'bcv', 'bcw', 'bcy', 'bcz', 'bda', 'bdb', 'bdc', 'bdd', 'bde', 'bdf', 'bdg', 'bdh', 'bdi', 'bdj', 'bdk', 'bdl', 'bdm', 'bdn', 'bdo', 'bdp', 'bdq', 'bdr', 'bds', 'bdt', 'bdu', 'bdv', 'bdw', 'bdx', 'bdy', 'bdz', 'bea', 'beb', 'bec', 'bed', 'bee', 'bef', 'beg', 'beh', 'bei', 'bej', 'bek', 'bem', 'beo', 'bep', 'beq', 'ber', 'bes', 'bet', 'beu', 'bev', 'bew', 'bex', 'bey', 'bez', 'bfa', 'bfb', 'bfc', 'bfd', 'bfe', 'bff', 'bfg', 'bfh', 'bfi', 'bfj', 'bfk', 'bfl', 'bfm', 'bfn', 'bfo', 'bfp', 'bfq', 'bfr', 'bfs', 'bft', 'bfu', 'bfw', 'bfx', 'bfy', 'bfz', 'bga', 'bgb', 'bgc', 'bgd', 'bge', 'bgf', 'bgg', 'bgi', 'bgj', 'bgk', 'bgl', 'bgm', 'bgn', 'bgo', 'bgp', 'bgq', 'bgr', 'bgs', 'bgt', 'bgu', 'bgv', 'bgw', 'bgx', 'bgy', 'bgz', 'bha', 'bhb', 'bhc', 'bhd', 'bhe', 'bhf', 'bhg', 'bhh', 'bhi', 'bhj', 'bhk', 'bhl', 'bhm', 'bhn', 'bho', 'bhp', 'bhq', 'bhr', 'bhs', 'bht', 'bhu', 'bhv', 'bhw', 'bhx', 'bhy', 'bhz', 'bia', 'bib', 'bic', 'bid', 'bie', 'bif', 'big', 'bij', 'bik', 'bil', 'bim', 'bin', 'bio', 'bip', 'biq', 'bir', 'bit', 'biu', 'biv', 'biw', 'bix', 'biy', 'biz', 'bja', 'bjb', 'bjc', 'bjd', 'bje', 'bjf', 'bjg', 'bjh', 'bji', 'bjj', 'bjk', 'bjl', 'bjm', 'bjn', 'bjo', 'bjp', 'bjq', 'bjr', 'bjs', 'bjt', 'bju', 'bjv', 'bjw', 'bjx', 'bjy', 'bjz', 'bka', 'bkb', 'bkc', 'bkd', 'bkf', 'bkg', 'bkh', 'bki', 'bkj', 'bkk', 'bkl', 'bkm', 'bkn', 'bko', 'bkp', 'bkq', 'bkr', 'bks', 'bkt', 'bku', 'bkv', 'bkw', 'bkx', 'bky', 'bkz', 'bla', 'blb', 'blc', 'bld', 'ble', 'blf', 'blg', 'blh', 'bli', 'blj', 'blk', 'bll', 'blm', 'bln', 'blo', 'blp', 'blq', 'blr', 'bls', 'blt', 'blv', 'blw', 'blx', 'bly', 'blz', 'bma', 'bmb', 'bmc', 'bmd', 'bme', 'bmf', 'bmg', 'bmh', 'bmi', 'bmj', 'bmk', 'bml', 'bmm', 'bmn', 'bmo', 'bmp', 'bmq', 'bmr', 'bms', 'bmt', 'bmu', 'bmv', 'bmw', 'bmx', 'bmy', 'bmz', 'bna', 'bnb', 'bnc', 'bnd', 'bne', 'bnf', 'bng', 'bni', 'bnj', 'bnk', 'bnl', 'bnm', 'bnn', 'bno', 'bnp', 'bnq', 'bnr', 'bns', 'bnt', 'bnu', 'bnv', 'bnw', 'bnx', 'bny', 'bnz', 'boa', 'bob', 'boe', 'bof', 'bog', 'boh', 'boi', 'boj', 'bok', 'bol', 'bom', 'bon', 'boo', 'bop', 'boq', 'bor', 'bot', 'bou', 'bov', 'bow', 'box', 'boy', 'boz', 'bpa', 'bpb', 'bpd', 'bpg', 'bph', 'bpi', 'bpj', 'bpk', 'bpl', 'bpm', 'bpn', 'bpo', 'bpp', 'bpq', 'bpr', 'bps', 'bpt', 'bpu', 'bpv', 'bpw', 'bpx', 'bpy', 'bpz', 'bqa', 'bqb', 'bqc', 'bqd', 'bqf', 'bqg', 'bqh', 'bqi', 'bqj', 'bqk', 'bql', 'bqm', 'bqn', 'bqo', 'bqp', 'bqq', 'bqr', 'bqs', 'bqt', 'bqu', 'bqv', 'bqw', 'bqx', 'bqy', 'bqz', 'bra', 'brb', 'brc', 'brd', 'brf', 'brg', 'brh', 'bri', 'brj', 'brk', 'brl', 'brm', 'brn', 'bro', 'brp', 'brq', 'brr', 'brs', 'brt', 'bru', 'brv', 'brw', 'brx', 'bry', 'brz', 'bsa', 'bsb', 'bsc', 'bse', 'bsf', 'bsg', 'bsh', 'bsi', 'bsj', 'bsk', 'bsl', 'bsm', 'bsn', 'bso', 'bsp', 'bsq', 'bsr', 'bss', 'bst', 'bsu', 'bsv', 'bsw', 'bsx', 'bsy', 'bta', 'btb', 'btc', 'btd', 'bte', 'btf', 'btg', 'bth', 'bti', 'btj', 'btk', 'btl', 'btm', 'btn', 'bto', 'btp', 'btq', 'btr', 'bts', 'btt', 'btu', 'btv', 'btw', 'btx', 'bty', 'btz', 'bua', 'bub', 'buc', 'bud', 'bue', 'buf', 'bug', 'buh', 'bui', 'buj', 'buk', 'bum', 'bun', 'buo', 'bup', 'buq', 'bus', 'but', 'buu', 'buv', 'buw', 'bux', 'buy', 'buz', 'bva', 'bvb', 'bvc', 'bvd', 'bve', 'bvf', 'bvg', 'bvh', 'bvi', 'bvj', 'bvk', 'bvl', 'bvm', 'bvn', 'bvo', 'bvp', 'bvq', 'bvr', 'bvt', 'bvu', 'bvv', 'bvw', 'bvx', 'bvy', 'bvz', 'bwa', 'bwb', 'bwc', 'bwd', 'bwe', 'bwf', 'bwg', 'bwh', 'bwi', 'bwj', 'bwk', 'bwl', 'bwm', 'bwn', 'bwo', 'bwp', 'bwq', 'bwr', 'bws', 'bwt', 'bwu', 'bww', 'bwx', 'bwy', 'bwz', 'bxa', 'bxb', 'bxc', 'bxd', 'bxe', 'bxf', 'bxg', 'bxh', 'bxi', 'bxj', 'bxk', 'bxl', 'bxm', 'bxn', 'bxo', 'bxp', 'bxq', 'bxr', 'bxs', 'bxu', 'bxv', 'bxw', 'bxx', 'bxz', 'bya', 'byb', 'byc', 'byd', 'bye', 'byf', 'byg', 'byh', 'byi', 'byj', 'byk', 'byl', 'bym', 'byn', 'byo', 'byp', 'byq', 'byr', 'bys', 'byt', 'byv', 'byw', 'byx', 'byy', 'byz', 'bza', 'bzb', 'bzc', 'bzd', 'bze', 'bzf', 'bzg', 'bzh', 'bzi', 'bzj', 'bzk', 'bzl', 'bzm', 'bzn', 'bzo', 'bzp', 'bzq', 'bzr', 'bzs', 'bzt', 'bzu', 'bzv', 'bzw', 'bzx', 'bzy', 'bzz', 'caa', 'cab', 'cac', 'cad', 'cae', 'caf', 'cag', 'cah', 'cai', 'caj', 'cak', 'cal', 'cam', 'can', 'cao', 'cap', 'caq', 'car', 'cas', 'cau', 'cav', 'caw', 'cax', 'cay', 'caz', 'cba', 'cbb', 'cbc', 'cbd', 'cbe', 'cbg', 'cbh', 'cbi', 'cbj', 'cbk', 'cbl', 'cbn', 'cbo', 'cbq', 'cbr', 'cbs', 'cbt', 'cbu', 'cbv', 'cbw', 'cby', 'cca', 'ccc', 'ccd', 'cce', 'ccg', 'cch', 'ccj', 'ccl', 'ccm', 'ccn', 'cco', 'ccp', 'ccq', 'ccr', 'ccs', 'cda', 'cdc', 'cdd', 'cde', 'cdf', 'cdg', 'cdh', 'cdi', 'cdj', 'cdm', 'cdn', 'cdo', 'cdr', 'cds', 'cdy', 'cdz', 'cea', 'ceb', 'ceg', 'cek', 'cel', 'cen', 'cet', 'cfa', 'cfd', 'cfg', 'cfm', 'cga', 'cgc', 'cgg', 'cgk', 'chb', 'chc', 'chd', 'chf', 'chg', 'chh', 'chj', 'chk', 'chl', 'chm', 'chn', 'cho', 'chp', 'chq', 'chr', 'cht', 'chw', 'chx', 'chy', 'chz', 'cia', 'cib', 'cic', 'cid', 'cie', 'cih', 'cik', 'cim', 'cin', 'cip', 'cir', 'ciw', 'ciy', 'cja', 'cje', 'cjh', 'cji', 'cjk', 'cjm', 'cjn', 'cjo', 'cjp', 'cjr', 'cjs', 'cjv', 'cjy', 'cka', 'ckb', 'ckh', 'ckl', 'ckn', 'cko', 'ckq', 'ckr', 'cks', 'ckt', 'cku', 'ckv', 'ckx', 'cky', 'ckz', 'cla', 'clc', 'cld', 'cle', 'clh', 'cli', 'clj', 'clk', 'cll', 'clm', 'clo', 'clt', 'clu', 'clw', 'cly', 'cma', 'cmc', 'cme', 'cmg', 'cmi', 'cmk', 'cml', 'cmm', 'cmn', 'cmo', 'cmr', 'cms', 'cmt', 'cna', 'cnb', 'cnc', 'cng', 'cnh', 'cni', 'cnk', 'cnl', 'cno', 'cns', 'cnt', 'cnu', 'cnw', 'cnx', 'coa', 'cob', 'coc', 'cod', 'coe', 'cof', 'cog', 'coh', 'coj', 'cok', 'col', 'com', 'con', 'coo', 'cop', 'coq', 'cot', 'cou', 'cov', 'cow', 'cox', 'coy', 'coz', 'cpa', 'cpb', 'cpc', 'cpe', 'cpf', 'cpg', 'cpi', 'cpn', 'cpo', 'cpp', 'cps', 'cpu', 'cpx', 'cpy', 'cqd', 'cqu', 'cra', 'crb', 'crc', 'crd', 'crf', 'crg', 'crh', 'cri', 'crj', 'crk', 'crl', 'crm', 'crn', 'cro', 'crp', 'crq', 'crr', 'crs', 'crt', 'crv', 'crw', 'crx', 'cry', 'crz', 'csa', 'csb', 'csc', 'csd', 'cse', 'csf', 'csg', 'csh', 'csi', 'csj', 'csk', 'csl', 'csm', 'csn', 'cso', 'csq', 'csr', 'css', 'cst', 'csu', 'csv', 'csw', 'csy', 'csz', 'cta', 'ctc', 'ctd', 'cte', 'ctg', 'cth', 'ctl', 'ctm', 'ctn', 'cto', 'ctp', 'cts', 'ctt', 'ctu', 'ctz', 'cua', 'cub', 'cuc', 'cug', 'cuh', 'cui', 'cuj', 'cuk', 'cul', 'cum', 'cuo', 'cup', 'cuq', 'cur', 'cus', 'cut', 'cuu', 'cuv', 'cuw', 'cux', 'cvg', 'cvn', 'cwa', 'cwb', 'cwd', 'cwe', 'cwg', 'cwt', 'cya', 'cyb', 'cyo', 'czh', 'czk', 'czn', 'czo', 'czt', 'daa', 'dac', 'dad', 'dae', 'daf', 'dag', 'dah', 'dai', 'daj', 'dak', 'dal', 'dam', 'dao', 'dap', 'daq', 'dar', 'das', 'dau', 'dav', 'daw', 'dax', 'day', 'daz', 'dba', 'dbb', 'dbd', 'dbe', 'dbf', 'dbg', 'dbi', 'dbj', 'dbl', 'dbm', 'dbn', 'dbo', 'dbp', 'dbq', 'dbr', 'dbt', 'dbu', 'dbv', 'dbw', 'dby', 'dcc', 'dcr', 'dda', 'ddd', 'dde', 'ddg', 'ddi', 'ddj', 'ddn', 'ddo', 'ddr', 'dds', 'ddw', 'dec', 'ded', 'dee', 'def', 'deg', 'deh', 'dei', 'dek', 'del', 'dem', 'den', 'dep', 'deq', 'der', 'des', 'dev', 'dez', 'dga', 'dgb', 'dgc', 'dgd', 'dge', 'dgg', 'dgh', 'dgi', 'dgk', 'dgl', 'dgn', 'dgo', 'dgr', 'dgs', 'dgt', 'dgu', 'dgw', 'dgx', 'dgz', 'dha', 'dhd', 'dhg', 'dhi', 'dhl', 'dhm', 'dhn', 'dho', 'dhr', 'dhs', 'dhu', 'dhv', 'dhw', 'dhx', 'dia', 'dib', 'dic', 'did', 'dif', 'dig', 'dih', 'dii', 'dij', 'dik', 'dil', 'dim', 'din', 'dio', 'dip', 'diq', 'dir', 'dis', 'dit', 'diu', 'diw', 'dix', 'diy', 'diz', 'dja', 'djb', 'djc', 'djd', 'dje', 'djf', 'dji', 'djj', 'djk', 'djl', 'djm', 'djn', 'djo', 'djr', 'dju', 'djw', 'dka', 'dkk', 'dkl', 'dkr', 'dks', 'dkx', 'dlg', 'dlk', 'dlm', 'dln', 'dma', 'dmb', 'dmc', 'dmd', 'dme', 'dmg', 'dmk', 'dml', 'dmm', 'dmn', 'dmo', 'dmr', 'dms', 'dmu', 'dmv', 'dmw', 'dmx', 'dmy', 'dna', 'dnd', 'dne', 'dng', 'dni', 'dnj', 'dnk', 'dnn', 'dnr', 'dnt', 'dnu', 'dnv', 'dnw', 'dny', 'doa', 'dob', 'doc', 'doe', 'dof', 'doh', 'doi', 'dok', 'dol', 'don', 'doo', 'dop', 'doq', 'dor', 'dos', 'dot', 'dov', 'dow', 'dox', 'doy', 'doz', 'dpp', 'dra', 'drb', 'drc', 'drd', 'dre', 'drg', 'drh', 'dri', 'drl', 'drn', 'dro', 'drq', 'drr', 'drs', 'drt', 'dru', 'drw', 'dry', 'dsb', 'dse', 'dsh', 'dsi', 'dsl', 'dsn', 'dso', 'dsq', 'dta', 'dtb', 'dtd', 'dth', 'dti', 'dtk', 'dtm', 'dtn', 'dto', 'dtp', 'dtr', 'dts', 'dtt', 'dtu', 'dty', 'dua', 'dub', 'duc', 'dud', 'due', 'duf', 'dug', 'duh', 'dui', 'duj', 'duk', 'dul', 'dum', 'dun', 'duo', 'dup', 'duq', 'dur', 'dus', 'duu', 'duv', 'duw', 'dux', 'duy', 'duz', 'dva', 'dwa', 'dwl', 'dwr', 'dws', 'dwu', 'dww', 'dwy', 'dya', 'dyb', 'dyd', 'dyg', 'dyi', 'dym', 'dyn', 'dyo', 'dyu', 'dyy', 'dza', 'dzd', 'dze', 'dzg', 'dzl', 'dzn', 'eaa', 'ebg', 'ebk', 'ebo', 'ebr', 'ebu', 'ecr', 'ecs', 'ecy', 'eee', 'efa', 'efe', 'efi', 'ega', 'egl', 'ego', 'egx', 'egy', 'ehu', 'eip', 'eit', 'eiv', 'eja', 'eka', 'ekc', 'eke', 'ekg', 'eki', 'ekk', 'ekl', 'ekm', 'eko', 'ekp', 'ekr', 'eky', 'ele', 'elh', 'eli', 'elk', 'elm', 'elo', 'elp', 'elu', 'elx', 'ema', 'emb', 'eme', 'emg', 'emi', 'emk', 'emm', 'emn', 'emo', 'emp', 'ems', 'emu', 'emw', 'emx', 'emy', 'ena', 'enb', 'enc', 'end', 'enf', 'enh', 'enl', 'enm', 'enn', 'eno', 'enq', 'enr', 'enu', 'env', 'enw', 'enx', 'eot', 'epi', 'era', 'erg', 'erh', 'eri', 'erk', 'ero', 'err', 'ers', 'ert', 'erw', 'ese', 'esg', 'esh', 'esi', 'esk', 'esl', 'esm', 'esn', 'eso', 'esq', 'ess', 'esu', 'esx', 'esy', 'etb', 'etc', 'eth', 'etn', 'eto', 'etr', 'ets', 'ett', 'etu', 'etx', 'etz', 'euq', 'eve', 'evh', 'evn', 'ewo', 'ext', 'eya', 'eyo', 'eza', 'eze', 'faa', 'fab', 'fad', 'faf', 'fag', 'fah', 'fai', 'faj', 'fak', 'fal', 'fam', 'fan', 'fap', 'far', 'fat', 'fau', 'fax', 'fay', 'faz', 'fbl', 'fcs', 'fer', 'ffi', 'ffm', 'fgr', 'fia', 'fie', 'fil', 'fip', 'fir', 'fit', 'fiu', 'fiw', 'fkk', 'fkv', 'fla', 'flh', 'fli', 'fll', 'fln', 'flr', 'fly', 'fmp', 'fmu', 'fnb', 'fng', 'fni', 'fod', 'foi', 'fom', 'fon', 'for', 'fos', 'fox', 'fpe', 'fqs', 'frc', 'frd', 'frk', 'frm', 'fro', 'frp', 'frq', 'frr', 'frs', 'frt', 'fse', 'fsl', 'fss', 'fub', 'fuc', 'fud', 'fue', 'fuf', 'fuh', 'fui', 'fuj', 'fum', 'fun', 'fuq', 'fur', 'fut', 'fuu', 'fuv', 'fuy', 'fvr', 'fwa', 'fwe', 'gaa', 'gab', 'gac', 'gad', 'gae', 'gaf', 'gag', 'gah', 'gai', 'gaj', 'gak', 'gal', 'gam', 'gan', 'gao', 'gap', 'gaq', 'gar', 'gas', 'gat', 'gau', 'gav', 'gaw', 'gax', 'gay', 'gaz', 'gba', 'gbb', 'gbc', 'gbd', 'gbe', 'gbf', 'gbg', 'gbh', 'gbi', 'gbj', 'gbk', 'gbl', 'gbm', 'gbn', 'gbo', 'gbp', 'gbq', 'gbr', 'gbs', 'gbu', 'gbv', 'gbw', 'gbx', 'gby', 'gbz', 'gcc', 'gcd', 'gce', 'gcf', 'gcl', 'gcn', 'gcr', 'gct', 'gda', 'gdb', 'gdc', 'gdd', 'gde', 'gdf', 'gdg', 'gdh', 'gdi', 'gdj', 'gdk', 'gdl', 'gdm', 'gdn', 'gdo', 'gdq', 'gdr', 'gds', 'gdt', 'gdu', 'gdx', 'gea', 'geb', 'gec', 'ged', 'geg', 'geh', 'gei', 'gej', 'gek', 'gel', 'gem', 'geq', 'ges', 'gev', 'gew', 'gex', 'gey', 'gez', 'gfk', 'gft', 'gfx', 'gga', 'ggb', 'ggd', 'gge', 'ggg', 'ggk', 'ggl', 'ggn', 'ggo', 'ggr', 'ggt', 'ggu', 'ggw', 'gha', 'ghc', 'ghe', 'ghh', 'ghk', 'ghl', 'ghn', 'gho', 'ghr', 'ghs', 'ght', 'gia', 'gib', 'gic', 'gid', 'gig', 'gih', 'gil', 'gim', 'gin', 'gio', 'gip', 'giq', 'gir', 'gis', 'git', 'giu', 'giw', 'gix', 'giy', 'giz', 'gji', 'gjk', 'gjm', 'gjn', 'gjr', 'gju', 'gka', 'gke', 'gkn', 'gko', 'gkp', 'gku', 'glc', 'gld', 'glh', 'gli', 'glj', 'glk', 'gll', 'glo', 'glr', 'glu', 'glw', 'gly', 'gma', 'gmb', 'gmd', 'gme', 'gmg', 'gmh', 'gml', 'gmm', 'gmn', 'gmq', 'gmu', 'gmv', 'gmw', 'gmx', 'gmy', 'gmz', 'gna', 'gnb', 'gnc', 'gnd', 'gne', 'gng', 'gnh', 'gni', 'gnk', 'gnl', 'gnm', 'gnn', 'gno', 'gnq', 'gnr', 'gnt', 'gnu', 'gnw', 'gnz', 'goa', 'gob', 'goc', 'god', 'goe', 'gof', 'gog', 'goh', 'goi', 'goj', 'gok', 'gol', 'gom', 'gon', 'goo', 'gop', 'goq', 'gor', 'gos', 'got', 'gou', 'gow', 'gox', 'goy', 'goz', 'gpa', 'gpe', 'gpn', 'gqa', 'gqi', 'gqn', 'gqr', 'gqu', 'gra', 'grb', 'grc', 'grd', 'grg', 'grh', 'gri', 'grj', 'grk', 'grm', 'gro', 'grq', 'grr', 'grs', 'grt', 'gru', 'grv', 'grw', 'grx', 'gry', 'grz', 'gse', 'gsg', 'gsl', 'gsm', 'gsn', 'gso', 'gsp', 'gss', 'gsw', 'gta', 'gti', 'gtu', 'gua', 'gub', 'guc', 'gud', 'gue', 'guf', 'gug', 'guh', 'gui', 'guk', 'gul', 'gum', 'gun', 'guo', 'gup', 'guq', 'gur', 'gus', 'gut', 'guu', 'guv', 'guw', 'gux', 'guz', 'gva', 'gvc', 'gve', 'gvf', 'gvj', 'gvl', 'gvm', 'gvn', 'gvo', 'gvp', 'gvr', 'gvs', 'gvy', 'gwa', 'gwb', 'gwc', 'gwd', 'gwe', 'gwf', 'gwg', 'gwi', 'gwj', 'gwm', 'gwn', 'gwr', 'gwt', 'gwu', 'gww', 'gwx', 'gxx', 'gya', 'gyb', 'gyd', 'gye', 'gyf', 'gyg', 'gyi', 'gyl', 'gym', 'gyn', 'gyr', 'gyy', 'gza', 'gzi', 'gzn', 'haa', 'hab', 'hac', 'had', 'hae', 'haf', 'hag', 'hah', 'hai', 'haj', 'hak', 'hal', 'ham', 'han', 'hao', 'hap', 'haq', 'har', 'has', 'hav', 'haw', 'hax', 'hay', 'haz', 'hba', 'hbb', 'hbn', 'hbo', 'hbu', 'hca', 'hch', 'hdn', 'hds', 'hdy', 'hea', 'hed', 'heg', 'heh', 'hei', 'hem', 'hgm', 'hgw', 'hhi', 'hhr', 'hhy', 'hia', 'hib', 'hid', 'hif', 'hig', 'hih', 'hii', 'hij', 'hik', 'hil', 'him', 'hio', 'hir', 'hit', 'hiw', 'hix', 'hji', 'hka', 'hke', 'hkk', 'hks', 'hla', 'hlb', 'hld', 'hle', 'hlt', 'hlu', 'hma', 'hmb', 'hmc', 'hmd', 'hme', 'hmf', 'hmg', 'hmh', 'hmi', 'hmj', 'hmk', 'hml', 'hmm', 'hmn', 'hmp', 'hmq', 'hmr', 'hms', 'hmt', 'hmu', 'hmv', 'hmw', 'hmx', 'hmy', 'hmz', 'hna', 'hnd', 'hne', 'hnh', 'hni', 'hnj', 'hnn', 'hno', 'hns', 'hnu', 'hoa', 'hob', 'hoc', 'hod', 'hoe', 'hoh', 'hoi', 'hoj', 'hok', 'hol', 'hom', 'hoo', 'hop', 'hor', 'hos', 'hot', 'hov', 'how', 'hoy', 'hoz', 'hpo', 'hps', 'hra', 'hrc', 'hre', 'hrk', 'hrm', 'hro', 'hrp', 'hrr', 'hrt', 'hru', 'hrw', 'hrx', 'hrz', 'hsb', 'hsh', 'hsl', 'hsn', 'hss', 'hti', 'hto', 'hts', 'htu', 'htx', 'hub', 'huc', 'hud', 'hue', 'huf', 'hug', 'huh', 'hui', 'huj', 'huk', 'hul', 'hum', 'huo', 'hup', 'huq', 'hur', 'hus', 'hut', 'huu', 'huv', 'huw', 'hux', 'huy', 'huz', 'hvc', 'hve', 'hvk', 'hvn', 'hvv', 'hwa', 'hwc', 'hwo', 'hya', 'hyx', 'iai', 'ian', 'iap', 'iar', 'iba', 'ibb', 'ibd', 'ibe', 'ibg', 'ibi', 'ibl', 'ibm', 'ibn', 'ibr', 'ibu', 'iby', 'ica', 'ich', 'icl', 'icr', 'ida', 'idb', 'idc', 'idd', 'ide', 'idi', 'idr', 'ids', 'idt', 'idu', 'ifa', 'ifb', 'ife', 'iff', 'ifk', 'ifm', 'ifu', 'ify', 'igb', 'ige', 'igg', 'igl', 'igm', 'ign', 'igo', 'igs', 'igw', 'ihb', 'ihi', 'ihp', 'ihw', 'iin', 'iir', 'ijc', 'ije', 'ijj', 'ijn', 'ijo', 'ijs', 'ike', 'iki', 'ikk', 'ikl', 'iko', 'ikp', 'ikr', 'iks', 'ikt', 'ikv', 'ikw', 'ikx', 'ikz', 'ila', 'ilb', 'ilg', 'ili', 'ilk', 'ill', 'ilm', 'ilo', 'ilp', 'ils', 'ilu', 'ilv', 'ilw', 'ima', 'ime', 'imi', 'iml', 'imn', 'imo', 'imr', 'ims', 'imy', 'inb', 'inc', 'ine', 'ing', 'inh', 'inj', 'inl', 'inm', 'inn', 'ino', 'inp', 'ins', 'int', 'inz', 'ior', 'iou', 'iow', 'ipi', 'ipo', 'iqu', 'iqw', 'ira', 'ire', 'irh', 'iri', 'irk', 'irn', 'iro', 'irr', 'iru', 'irx', 'iry', 'isa', 'isc', 'isd', 'ise', 'isg', 'ish', 'isi', 'isk', 'ism', 'isn', 'iso', 'isr', 'ist', 'isu', 'itb', 'itc', 'itd', 'ite', 'iti', 'itk', 'itl', 'itm', 'ito', 'itr', 'its', 'itt', 'itv', 'itw', 'itx', 'ity', 'itz', 'ium', 'ivb', 'ivv', 'iwk', 'iwm', 'iwo', 'iws', 'ixc', 'ixl', 'iya', 'iyo', 'iyx', 'izh', 'izi', 'izr', 'izz', 'jaa', 'jab', 'jac', 'jad', 'jae', 'jaf', 'jah', 'jaj', 'jak', 'jal', 'jam', 'jan', 'jao', 'jaq', 'jar', 'jas', 'jat', 'jau', 'jax', 'jay', 'jaz', 'jbe', 'jbi', 'jbj', 'jbk', 'jbn', 'jbo', 'jbr', 'jbt', 'jbu', 'jbw', 'jcs', 'jct', 'jda', 'jdg', 'jdt', 'jeb', 'jee', 'jeg', 'jeh', 'jei', 'jek', 'jel', 'jen', 'jer', 'jet', 'jeu', 'jgb', 'jge', 'jgk', 'jgo', 'jhi', 'jhs', 'jia', 'jib', 'jic', 'jid', 'jie', 'jig', 'jih', 'jii', 'jil', 'jim', 'jio', 'jiq', 'jit', 'jiu', 'jiv', 'jiy', 'jje', 'jjr', 'jka', 'jkm', 'jko', 'jkp', 'jkr', 'jku', 'jle', 'jls', 'jma', 'jmb', 'jmc', 'jmd', 'jmi', 'jml', 'jmn', 'jmr', 'jms', 'jmw', 'jmx', 'jna', 'jnd', 'jng', 'jni', 'jnj', 'jnl', 'jns', 'job', 'jod', 'jog', 'jor', 'jos', 'jow', 'jpa', 'jpr', 'jpx', 'jqr', 'jra', 'jrb', 'jrr', 'jrt', 'jru', 'jsl', 'jua', 'jub', 'juc', 'jud', 'juh', 'jui', 'juk', 'jul', 'jum', 'jun', 'juo', 'jup', 'jur', 'jus', 'jut', 'juu', 'juw', 'juy', 'jvd', 'jvn', 'jwi', 'jya', 'jye', 'jyy', 'kaa', 'kab', 'kac', 'kad', 'kae', 'kaf', 'kag', 'kah', 'kai', 'kaj', 'kak', 'kam', 'kao', 'kap', 'kaq', 'kar', 'kav', 'kaw', 'kax', 'kay', 'kba', 'kbb', 'kbc', 'kbd', 'kbe', 'kbf', 'kbg', 'kbh', 'kbi', 'kbj', 'kbk', 'kbl', 'kbm', 'kbn', 'kbo', 'kbp', 'kbq', 'kbr', 'kbs', 'kbt', 'kbu', 'kbv', 'kbw', 'kbx', 'kby', 'kbz', 'kca', 'kcb', 'kcc', 'kcd', 'kce', 'kcf', 'kcg', 'kch', 'kci', 'kcj', 'kck', 'kcl', 'kcm', 'kcn', 'kco', 'kcp', 'kcq', 'kcr', 'kcs', 'kct', 'kcu', 'kcv', 'kcw', 'kcx', 'kcy', 'kcz', 'kda', 'kdc', 'kdd', 'kde', 'kdf', 'kdg', 'kdh', 'kdi', 'kdj', 'kdk', 'kdl', 'kdm', 'kdn', 'kdo', 'kdp', 'kdq', 'kdr', 'kdt', 'kdu', 'kdv', 'kdw', 'kdx', 'kdy', 'kdz', 'kea', 'keb', 'kec', 'ked', 'kee', 'kef', 'keg', 'keh', 'kei', 'kej', 'kek', 'kel', 'kem', 'ken', 'keo', 'kep', 'keq', 'ker', 'kes', 'ket', 'keu', 'kev', 'kew', 'kex', 'key', 'kez', 'kfa', 'kfb', 'kfc', 'kfd', 'kfe', 'kff', 'kfg', 'kfh', 'kfi', 'kfj', 'kfk', 'kfl', 'kfm', 'kfn', 'kfo', 'kfp', 'kfq', 'kfr', 'kfs', 'kft', 'kfu', 'kfv', 'kfw', 'kfx', 'kfy', 'kfz', 'kga', 'kgb', 'kgc', 'kgd', 'kge', 'kgf', 'kgg', 'kgh', 'kgi', 'kgj', 'kgk', 'kgl', 'kgm', 'kgn', 'kgo', 'kgp', 'kgq', 'kgr', 'kgs', 'kgt', 'kgu', 'kgv', 'kgw', 'kgx', 'kgy', 'kha', 'khb', 'khc', 'khd', 'khe', 'khf', 'khg', 'khh', 'khi', 'khj', 'khk', 'khl', 'khn', 'kho', 'khp', 'khq', 'khr', 'khs', 'kht', 'khu', 'khv', 'khw', 'khx', 'khy', 'khz', 'kia', 'kib', 'kic', 'kid', 'kie', 'kif', 'kig', 'kih', 'kii', 'kij', 'kil', 'kim', 'kio', 'kip', 'kiq', 'kis', 'kit', 'kiu', 'kiv', 'kiw', 'kix', 'kiy', 'kiz', 'kja', 'kjb', 'kjc', 'kjd', 'kje', 'kjf', 'kjg', 'kjh', 'kji', 'kjj', 'kjk', 'kjl', 'kjm', 'kjn', 'kjo', 'kjp', 'kjq', 'kjr', 'kjs', 'kjt', 'kju', 'kjv', 'kjx', 'kjy', 'kjz', 'kka', 'kkb', 'kkc', 'kkd', 'kke', 'kkf', 'kkg', 'kkh', 'kki', 'kkj', 'kkk', 'kkl', 'kkm', 'kkn', 'kko', 'kkp', 'kkq', 'kkr', 'kks', 'kkt', 'kku', 'kkv', 'kkw', 'kkx', 'kky', 'kkz', 'kla', 'klb', 'klc', 'kld', 'kle', 'klf', 'klg', 'klh', 'kli', 'klj', 'klk', 'kll', 'klm', 'kln', 'klo', 'klp', 'klq', 'klr', 'kls', 'klt', 'klu', 'klv', 'klw', 'klx', 'kly', 'klz', 'kma', 'kmb', 'kmc', 'kmd', 'kme', 'kmf', 'kmg', 'kmh', 'kmi', 'kmj', 'kmk', 'kml', 'kmm', 'kmn', 'kmo', 'kmp', 'kmq', 'kmr', 'kms', 'kmt', 'kmu', 'kmv', 'kmw', 'kmx', 'kmy', 'kmz', 'kna', 'knb', 'knc', 'knd', 'kne', 'knf', 'kng', 'kni', 'knj', 'knk', 'knl', 'knm', 'knn', 'kno', 'knp', 'knq', 'knr', 'kns', 'knt', 'knu', 'knv', 'knw', 'knx', 'kny', 'knz', 'koa', 'koc', 'kod', 'koe', 'kof', 'kog', 'koh', 'koi', 'koj', 'kok', 'kol', 'koo', 'kop', 'koq', 'kos', 'kot', 'kou', 'kov', 'kow', 'kox', 'koy', 'koz', 'kpa', 'kpb', 'kpc', 'kpd', 'kpe', 'kpf', 'kpg', 'kph', 'kpi', 'kpj', 'kpk', 'kpl', 'kpm', 'kpn', 'kpo', 'kpp', 'kpq', 'kpr', 'kps', 'kpt', 'kpu', 'kpv', 'kpw', 'kpx', 'kpy', 'kpz', 'kqa', 'kqb', 'kqc', 'kqd', 'kqe', 'kqf', 'kqg', 'kqh', 'kqi', 'kqj', 'kqk', 'kql', 'kqm', 'kqn', 'kqo', 'kqp', 'kqq', 'kqr', 'kqs', 'kqt', 'kqu', 'kqv', 'kqw', 'kqx', 'kqy', 'kqz', 'kra', 'krb', 'krc', 'krd', 'kre', 'krf', 'krh', 'kri', 'krj', 'krk', 'krl', 'krm', 'krn', 'kro', 'krp', 'krr', 'krs', 'krt', 'kru', 'krv', 'krw', 'krx', 'kry', 'krz', 'ksa', 'ksb', 'ksc', 'ksd', 'kse', 'ksf', 'ksg', 'ksh', 'ksi', 'ksj', 'ksk', 'ksl', 'ksm', 'ksn', 'kso', 'ksp', 'ksq', 'ksr', 'kss', 'kst', 'ksu', 'ksv', 'ksw', 'ksx', 'ksy', 'ksz', 'kta', 'ktb', 'ktc', 'ktd', 'kte', 'ktf', 'ktg', 'kth', 'kti', 'ktj', 'ktk', 'ktl', 'ktm', 'ktn', 'kto', 'ktp', 'ktq', 'ktr', 'kts', 'ktt', 'ktu', 'ktv', 'ktw', 'ktx', 'kty', 'ktz', 'kub', 'kuc', 'kud', 'kue', 'kuf', 'kug', 'kuh', 'kui', 'kuj', 'kuk', 'kul', 'kum', 'kun', 'kuo', 'kup', 'kuq', 'kus', 'kut', 'kuu', 'kuv', 'kuw', 'kux', 'kuy', 'kuz', 'kva', 'kvb', 'kvc', 'kvd', 'kve', 'kvf', 'kvg', 'kvh', 'kvi', 'kvj', 'kvk', 'kvl', 'kvm', 'kvn', 'kvo', 'kvp', 'kvq', 'kvr', 'kvs', 'kvt', 'kvu', 'kvv', 'kvw', 'kvx', 'kvy', 'kvz', 'kwa', 'kwb', 'kwc', 'kwd', 'kwe', 'kwf', 'kwg', 'kwh', 'kwi', 'kwj', 'kwk', 'kwl', 'kwm', 'kwn', 'kwo', 'kwp', 'kwq', 'kwr', 'kws', 'kwt', 'kwu', 'kwv', 'kww', 'kwx', 'kwy', 'kwz', 'kxa', 'kxb', 'kxc', 'kxd', 'kxe', 'kxf', 'kxh', 'kxi', 'kxj', 'kxk', 'kxl', 'kxm', 'kxn', 'kxo', 'kxp', 'kxq', 'kxr', 'kxs', 'kxt', 'kxu', 'kxv', 'kxw', 'kxx', 'kxy', 'kxz', 'kya', 'kyb', 'kyc', 'kyd', 'kye', 'kyf', 'kyg', 'kyh', 'kyi', 'kyj', 'kyk', 'kyl', 'kym', 'kyn', 'kyo', 'kyp', 'kyq', 'kyr', 'kys', 'kyt', 'kyu', 'kyv', 'kyw', 'kyx', 'kyy', 'kyz', 'kza', 'kzb', 'kzc', 'kzd', 'kze', 'kzf', 'kzg', 'kzh', 'kzi', 'kzj', 'kzk', 'kzl', 'kzm', 'kzn', 'kzo', 'kzp', 'kzq', 'kzr', 'kzs', 'kzt', 'kzu', 'kzv', 'kzw', 'kzx', 'kzy', 'kzz', 'laa', 'lab', 'lac', 'lad', 'lae', 'laf', 'lag', 'lah', 'lai', 'laj', 'lak', 'lal', 'lam', 'lan', 'lap', 'laq', 'lar', 'las', 'lau', 'law', 'lax', 'lay', 'laz', 'lba', 'lbb', 'lbc', 'lbe', 'lbf', 'lbg', 'lbi', 'lbj', 'lbk', 'lbl', 'lbm', 'lbn', 'lbo', 'lbq', 'lbr', 'lbs', 'lbt', 'lbu', 'lbv', 'lbw', 'lbx', 'lby', 'lbz', 'lcc', 'lcd', 'lce', 'lcf', 'lch', 'lcl', 'lcm', 'lcp', 'lcq', 'lcs', 'lda', 'ldb', 'ldd', 'ldg', 'ldh', 'ldi', 'ldj', 'ldk', 'ldl', 'ldm', 'ldn', 'ldo', 'ldp', 'ldq', 'lea', 'leb', 'lec', 'led', 'lee', 'lef', 'leg', 'leh', 'lei', 'lej', 'lek', 'lel', 'lem', 'len', 'leo', 'lep', 'leq', 'ler', 'les', 'let', 'leu', 'lev', 'lew', 'lex', 'ley', 'lez', 'lfa', 'lfn', 'lga', 'lgb', 'lgg', 'lgh', 'lgi', 'lgk', 'lgl', 'lgm', 'lgn', 'lgq', 'lgr', 'lgt', 'lgu', 'lgz', 'lha', 'lhh', 'lhi', 'lhl', 'lhm', 'lhn', 'lhp', 'lhs', 'lht', 'lhu', 'lia', 'lib', 'lic', 'lid', 'lie', 'lif', 'lig', 'lih', 'lii', 'lij', 'lik', 'lil', 'lio', 'lip', 'liq', 'lir', 'lis', 'liu', 'liv', 'liw', 'lix', 'liy', 'liz', 'lja', 'lje', 'lji', 'ljl', 'ljp', 'ljw', 'ljx', 'lka', 'lkb', 'lkc', 'lkd', 'lke', 'lkh', 'lki', 'lkj', 'lkl', 'lkm', 'lkn', 'lko', 'lkr', 'lks', 'lkt', 'lku', 'lky', 'lla', 'llb', 'llc', 'lld', 'lle', 'llf', 'llg', 'llh', 'lli', 'llj', 'llk', 'lll', 'llm', 'lln', 'llo', 'llp', 'llq', 'lls', 'llu', 'llx', 'lma', 'lmb', 'lmc', 'lmd', 'lme', 'lmf', 'lmg', 'lmh', 'lmi', 'lmj', 'lmk', 'lml', 'lmm', 'lmn', 'lmo', 'lmp', 'lmq', 'lmr', 'lmu', 'lmv', 'lmw', 'lmx', 'lmy', 'lmz', 'lna', 'lnb', 'lnd', 'lng', 'lnh', 'lni', 'lnj', 'lnl', 'lnm', 'lnn', 'lno', 'lns', 'lnu', 'lnw', 'lnz', 'loa', 'lob', 'loc', 'loe', 'lof', 'log', 'loh', 'loi', 'loj', 'lok', 'lol', 'lom', 'lon', 'loo', 'lop', 'loq', 'lor', 'los', 'lot', 'lou', 'lov', 'low', 'lox', 'loy', 'loz', 'lpa', 'lpe', 'lpn', 'lpo', 'lpx', 'lra', 'lrc', 'lre', 'lrg', 'lri', 'lrk', 'lrl', 'lrm', 'lrn', 'lro', 'lrr', 'lrt', 'lrv', 'lrz', 'lsa', 'lsd', 'lse', 'lsg', 'lsh', 'lsi', 'lsl', 'lsm', 'lso', 'lsp', 'lsr', 'lss', 'lst', 'lsy', 'ltc', 'ltg', 'lti', 'ltn', 'lto', 'lts', 'ltu', 'lua', 'luc', 'lud', 'lue', 'luf', 'lui', 'luj', 'luk', 'lul', 'lum', 'lun', 'luo', 'lup', 'luq', 'lur', 'lus', 'lut', 'luu', 'luv', 'luw', 'luy', 'luz', 'lva', 'lvk', 'lvs', 'lvu', 'lwa', 'lwe', 'lwg', 'lwh', 'lwl', 'lwm', 'lwo', 'lwt', 'lwu', 'lww', 'lya', 'lyg', 'lyn', 'lzh', 'lzl', 'lzn', 'lzz', 'maa', 'mab', 'mad', 'mae', 'maf', 'mag', 'mai', 'maj', 'mak', 'mam', 'man', 'map', 'maq', 'mas', 'mat', 'mau', 'mav', 'maw', 'max', 'maz', 'mba', 'mbb', 'mbc', 'mbd', 'mbe', 'mbf', 'mbh', 'mbi', 'mbj', 'mbk', 'mbl', 'mbm', 'mbn', 'mbo', 'mbp', 'mbq', 'mbr', 'mbs', 'mbt', 'mbu', 'mbv', 'mbw', 'mbx', 'mby', 'mbz', 'mca', 'mcb', 'mcc', 'mcd', 'mce', 'mcf', 'mcg', 'mch', 'mci', 'mcj', 'mck', 'mcl', 'mcm', 'mcn', 'mco', 'mcp', 'mcq', 'mcr', 'mcs', 'mct', 'mcu', 'mcv', 'mcw', 'mcx', 'mcy', 'mcz', 'mda', 'mdb', 'mdc', 'mdd', 'mde', 'mdf', 'mdg', 'mdh', 'mdi', 'mdj', 'mdk', 'mdl', 'mdm', 'mdn', 'mdp', 'mdq', 'mdr', 'mds', 'mdt', 'mdu', 'mdv', 'mdw', 'mdx', 'mdy', 'mdz', 'mea', 'meb', 'mec', 'med', 'mee', 'mef', 'meg', 'meh', 'mei', 'mej', 'mek', 'mel', 'mem', 'men', 'meo', 'mep', 'meq', 'mer', 'mes', 'met', 'meu', 'mev', 'mew', 'mey', 'mez', 'mfa', 'mfb', 'mfc', 'mfd', 'mfe', 'mff', 'mfg', 'mfh', 'mfi', 'mfj', 'mfk', 'mfl', 'mfm', 'mfn', 'mfo', 'mfp', 'mfq', 'mfr', 'mfs', 'mft', 'mfu', 'mfv', 'mfw', 'mfx', 'mfy', 'mfz', 'mga', 'mgb', 'mgc', 'mgd', 'mge', 'mgf', 'mgg', 'mgh', 'mgi', 'mgj', 'mgk', 'mgl', 'mgm', 'mgn', 'mgo', 'mgp', 'mgq', 'mgr', 'mgs', 'mgt', 'mgu', 'mgv', 'mgw', 'mgx', 'mgy', 'mgz', 'mha', 'mhb', 'mhc', 'mhd', 'mhe', 'mhf', 'mhg', 'mhh', 'mhi', 'mhj', 'mhk', 'mhl', 'mhm', 'mhn', 'mho', 'mhp', 'mhq', 'mhr', 'mhs', 'mht', 'mhu', 'mhw', 'mhx', 'mhy', 'mhz', 'mia', 'mib', 'mic', 'mid', 'mie', 'mif', 'mig', 'mih', 'mii', 'mij', 'mik', 'mil', 'mim', 'min', 'mio', 'mip', 'miq', 'mir', 'mis', 'mit', 'miu', 'miw', 'mix', 'miy', 'miz', 'mja', 'mjb', 'mjc', 'mjd', 'mje', 'mjg', 'mjh', 'mji', 'mjj', 'mjk', 'mjl', 'mjm', 'mjn', 'mjo', 'mjp', 'mjq', 'mjr', 'mjs', 'mjt', 'mju', 'mjv', 'mjw', 'mjx', 'mjy', 'mjz', 'mka', 'mkb', 'mkc', 'mke', 'mkf', 'mkg', 'mkh', 'mki', 'mkj', 'mkk', 'mkl', 'mkm', 'mkn', 'mko', 'mkp', 'mkq', 'mkr', 'mks', 'mkt', 'mku', 'mkv', 'mkw', 'mkx', 'mky', 'mkz', 'mla', 'mlb', 'mlc', 'mld', 'mle', 'mlf', 'mlh', 'mli', 'mlj', 'mlk', 'mll', 'mlm', 'mln', 'mlo', 'mlp', 'mlq', 'mlr', 'mls', 'mlu', 'mlv', 'mlw', 'mlx', 'mlz', 'mma', 'mmb', 'mmc', 'mmd', 'mme', 'mmf', 'mmg', 'mmh', 'mmi', 'mmj', 'mmk', 'mml', 'mmm', 'mmn', 'mmo', 'mmp', 'mmq', 'mmr', 'mmt', 'mmu', 'mmv', 'mmw', 'mmx', 'mmy', 'mmz', 'mna', 'mnb', 'mnc', 'mnd', 'mne', 'mnf', 'mng', 'mnh', 'mni', 'mnj', 'mnk', 'mnl', 'mnm', 'mnn', 'mno', 'mnp', 'mnq', 'mnr', 'mns', 'mnt', 'mnu', 'mnv', 'mnw', 'mnx', 'mny', 'mnz', 'moa', 'moc', 'mod', 'moe', 'mof', 'mog', 'moh', 'moi', 'moj', 'mok', 'mom', 'moo', 'mop', 'moq', 'mor', 'mos', 'mot', 'mou', 'mov', 'mow', 'mox', 'moy', 'moz', 'mpa', 'mpb', 'mpc', 'mpd', 'mpe', 'mpg', 'mph', 'mpi', 'mpj', 'mpk', 'mpl', 'mpm', 'mpn', 'mpo', 'mpp', 'mpq', 'mpr', 'mps', 'mpt', 'mpu', 'mpv', 'mpw', 'mpx', 'mpy', 'mpz', 'mqa', 'mqb', 'mqc', 'mqe', 'mqf', 'mqg', 'mqh', 'mqi', 'mqj', 'mqk', 'mql', 'mqm', 'mqn', 'mqo', 'mqp', 'mqq', 'mqr', 'mqs', 'mqt', 'mqu', 'mqv', 'mqw', 'mqx', 'mqy', 'mqz', 'mra', 'mrb', 'mrc', 'mrd', 'mre', 'mrf', 'mrg', 'mrh', 'mrj', 'mrk', 'mrl', 'mrm', 'mrn', 'mro', 'mrp', 'mrq', 'mrr', 'mrs', 'mrt', 'mru', 'mrv', 'mrw', 'mrx', 'mry', 'mrz', 'msb', 'msc', 'msd', 'mse', 'msf', 'msg', 'msh', 'msi', 'msj', 'msk', 'msl', 'msm', 'msn', 'mso', 'msp', 'msq', 'msr', 'mss', 'mst', 'msu', 'msv', 'msw', 'msx', 'msy', 'msz', 'mta', 'mtb', 'mtc', 'mtd', 'mte', 'mtf', 'mtg', 'mth', 'mti', 'mtj', 'mtk', 'mtl', 'mtm', 'mtn', 'mto', 'mtp', 'mtq', 'mtr', 'mts', 'mtt', 'mtu', 'mtv', 'mtw', 'mtx', 'mty', 'mua', 'mub', 'muc', 'mud', 'mue', 'mug', 'muh', 'mui', 'muj', 'muk', 'mul', 'mum', 'mun', 'muo', 'mup', 'muq', 'mur', 'mus', 'mut', 'muu', 'muv', 'mux', 'muy', 'muz', 'mva', 'mvb', 'mvd', 'mve', 'mvf', 'mvg', 'mvh', 'mvi', 'mvk', 'mvl', 'mvm', 'mvn', 'mvo', 'mvp', 'mvq', 'mvr', 'mvs', 'mvt', 'mvu', 'mvv', 'mvw', 'mvx', 'mvy', 'mvz', 'mwa', 'mwb', 'mwc', 'mwd', 'mwe', 'mwf', 'mwg', 'mwh', 'mwi', 'mwj', 'mwk', 'mwl', 'mwm', 'mwn', 'mwo', 'mwp', 'mwq', 'mwr', 'mws', 'mwt', 'mwu', 'mwv', 'mww', 'mwx', 'mwy', 'mwz', 'mxa', 'mxb', 'mxc', 'mxd', 'mxe', 'mxf', 'mxg', 'mxh', 'mxi', 'mxj', 'mxk', 'mxl', 'mxm', 'mxn', 'mxo', 'mxp', 'mxq', 'mxr', 'mxs', 'mxt', 'mxu', 'mxv', 'mxw', 'mxx', 'mxy', 'mxz', 'myb', 'myc', 'myd', 'mye', 'myf', 'myg', 'myh', 'myi', 'myj', 'myk', 'myl', 'mym', 'myn', 'myo', 'myp', 'myq', 'myr', 'mys', 'myt', 'myu', 'myv', 'myw', 'myx', 'myy', 'myz', 'mza', 'mzb', 'mzc', 'mzd', 'mze', 'mzg', 'mzh', 'mzi', 'mzj', 'mzk', 'mzl', 'mzm', 'mzn', 'mzo', 'mzp', 'mzq', 'mzr', 'mzs', 'mzt', 'mzu', 'mzv', 'mzw', 'mzx', 'mzy', 'mzz', 'naa', 'nab', 'nac', 'nad', 'nae', 'naf', 'nag', 'nah', 'nai', 'naj', 'nak', 'nal', 'nam', 'nan', 'nao', 'nap', 'naq', 'nar', 'nas', 'nat', 'naw', 'nax', 'nay', 'naz', 'nba', 'nbb', 'nbc', 'nbd', 'nbe', 'nbf', 'nbg', 'nbh', 'nbi', 'nbj', 'nbk', 'nbm', 'nbn', 'nbo', 'nbp', 'nbq', 'nbr', 'nbs', 'nbt', 'nbu', 'nbv', 'nbw', 'nbx', 'nby', 'nca', 'ncb', 'ncc', 'ncd', 'nce', 'ncf', 'ncg', 'nch', 'nci', 'ncj', 'nck', 'ncl', 'ncm', 'ncn', 'nco', 'ncp', 'ncr', 'ncs', 'nct', 'ncu', 'ncx', 'ncz', 'nda', 'ndb', 'ndc', 'ndd', 'ndf', 'ndg', 'ndh', 'ndi', 'ndj', 'ndk', 'ndl', 'ndm', 'ndn', 'ndp', 'ndq', 'ndr', 'nds', 'ndt', 'ndu', 'ndv', 'ndw', 'ndx', 'ndy', 'ndz', 'nea', 'neb', 'nec', 'ned', 'nee', 'nef', 'neg', 'neh', 'nei', 'nej', 'nek', 'nem', 'nen', 'neo', 'neq', 'ner', 'nes', 'net', 'neu', 'nev', 'new', 'nex', 'ney', 'nez', 'nfa', 'nfd', 'nfl', 'nfr', 'nfu', 'nga', 'ngb', 'ngc', 'ngd', 'nge', 'ngf', 'ngg', 'ngh', 'ngi', 'ngj', 'ngk', 'ngl', 'ngm', 'ngn', 'ngo', 'ngp', 'ngq', 'ngr', 'ngs', 'ngt', 'ngu', 'ngv', 'ngw', 'ngx', 'ngy', 'ngz', 'nha', 'nhb', 'nhc', 'nhd', 'nhe', 'nhf', 'nhg', 'nhh', 'nhi', 'nhk', 'nhm', 'nhn', 'nho', 'nhp', 'nhq', 'nhr', 'nht', 'nhu', 'nhv', 'nhw', 'nhx', 'nhy', 'nhz', 'nia', 'nib', 'nic', 'nid', 'nie', 'nif', 'nig', 'nih', 'nii', 'nij', 'nik', 'nil', 'nim', 'nin', 'nio', 'niq', 'nir', 'nis', 'nit', 'niu', 'niv', 'niw', 'nix', 'niy', 'niz', 'nja', 'njb', 'njd', 'njh', 'nji', 'njj', 'njl', 'njm', 'njn', 'njo', 'njr', 'njs', 'njt', 'nju', 'njx', 'njy', 'njz', 'nka', 'nkb', 'nkc', 'nkd', 'nke', 'nkf', 'nkg', 'nkh', 'nki', 'nkj', 'nkk', 'nkm', 'nkn', 'nko', 'nkp', 'nkq', 'nkr', 'nks', 'nkt', 'nku', 'nkv', 'nkw', 'nkx', 'nkz', 'nla', 'nlc', 'nle', 'nlg', 'nli', 'nlj', 'nlk', 'nll', 'nln', 'nlo', 'nlq', 'nlr', 'nlu', 'nlv', 'nlw', 'nlx', 'nly', 'nlz', 'nma', 'nmb', 'nmc', 'nmd', 'nme', 'nmf', 'nmg', 'nmh', 'nmi', 'nmj', 'nmk', 'nml', 'nmm', 'nmn', 'nmo', 'nmp', 'nmq', 'nmr', 'nms', 'nmt', 'nmu', 'nmv', 'nmw', 'nmx', 'nmy', 'nmz', 'nna', 'nnb', 'nnc', 'nnd', 'nne', 'nnf', 'nng', 'nnh', 'nni', 'nnj', 'nnk', 'nnl', 'nnm', 'nnn', 'nnp', 'nnq', 'nnr', 'nns', 'nnt', 'nnu', 'nnv', 'nnw', 'nnx', 'nny', 'nnz', 'noa', 'noc', 'nod', 'noe', 'nof', 'nog', 'noh', 'noi', 'noj', 'nok', 'nol', 'nom', 'non', 'noo', 'nop', 'noq', 'nos', 'not', 'nou', 'nov', 'now', 'noy', 'noz', 'npa', 'npb', 'npg', 'nph', 'npi', 'npl', 'npn', 'npo', 'nps', 'npu', 'npy', 'nqg', 'nqk', 'nqm', 'nqn', 'nqo', 'nqq', 'nqy', 'nra', 'nrb', 'nrc', 'nre', 'nrf', 'nrg', 'nri', 'nrk', 'nrl', 'nrm', 'nrn', 'nrp', 'nrr', 'nrt', 'nru', 'nrx', 'nrz', 'nsa', 'nsc', 'nsd', 'nse', 'nsf', 'nsg', 'nsh', 'nsi', 'nsk', 'nsl', 'nsm', 'nsn', 'nso', 'nsp', 'nsq', 'nsr', 'nss', 'nst', 'nsu', 'nsv', 'nsw', 'nsx', 'nsy', 'nsz', 'ntd', 'nte', 'ntg', 'nti', 'ntj', 'ntk', 'ntm', 'nto', 'ntp', 'ntr', 'nts', 'ntu', 'ntw', 'ntx', 'nty', 'ntz', 'nua', 'nub', 'nuc', 'nud', 'nue', 'nuf', 'nug', 'nuh', 'nui', 'nuj', 'nuk', 'nul', 'num', 'nun', 'nuo', 'nup', 'nuq', 'nur', 'nus', 'nut', 'nuu', 'nuv', 'nuw', 'nux', 'nuy', 'nuz', 'nvh', 'nvm', 'nvo', 'nwa', 'nwb', 'nwc', 'nwe', 'nwg', 'nwi', 'nwm', 'nwo', 'nwr', 'nwx', 'nwy', 'nxa', 'nxd', 'nxe', 'nxg', 'nxi', 'nxk', 'nxl', 'nxm', 'nxn', 'nxo', 'nxq', 'nxr', 'nxu', 'nxx', 'nyb', 'nyc', 'nyd', 'nye', 'nyf', 'nyg', 'nyh', 'nyi', 'nyj', 'nyk', 'nyl', 'nym', 'nyn', 'nyo', 'nyp', 'nyq', 'nyr', 'nys', 'nyt', 'nyu', 'nyv', 'nyw', 'nyx', 'nyy', 'nza', 'nzb', 'nzi', 'nzk', 'nzm', 'nzs', 'nzu', 'nzy', 'nzz', 'oaa', 'oac', 'oar', 'oav', 'obi', 'obk', 'obl', 'obm', 'obo', 'obr', 'obt', 'obu', 'oca', 'och', 'oco', 'ocu', 'oda', 'odk', 'odt', 'odu', 'ofo', 'ofs', 'ofu', 'ogb', 'ogc', 'oge', 'ogg', 'ogo', 'ogu', 'oht', 'ohu', 'oia', 'oin', 'ojb', 'ojc', 'ojg', 'ojp', 'ojs', 'ojv', 'ojw', 'oka', 'okb', 'okd', 'oke', 'okg', 'okh', 'oki', 'okj', 'okk', 'okl', 'okm', 'okn', 'oko', 'okr', 'oks', 'oku', 'okv', 'okx', 'ola', 'old', 'ole', 'olk', 'olm', 'olo', 'olr', 'olt', 'olu', 'oma', 'omb', 'omc', 'ome', 'omg', 'omi', 'omk', 'oml', 'omn', 'omo', 'omp', 'omq', 'omr', 'omt', 'omu', 'omv', 'omw', 'omx', 'ona', 'onb', 'one', 'ong', 'oni', 'onj', 'onk', 'onn', 'ono', 'onp', 'onr', 'ons', 'ont', 'onu', 'onw', 'onx', 'ood', 'oog', 'oon', 'oor', 'oos', 'opa', 'opk', 'opm', 'opo', 'opt', 'opy', 'ora', 'orc', 'ore', 'org', 'orh', 'orn', 'oro', 'orr', 'ors', 'ort', 'oru', 'orv', 'orw', 'orx', 'ory', 'orz', 'osa', 'osc', 'osi', 'oso', 'osp', 'ost', 'osu', 'osx', 'ota', 'otb', 'otd', 'ote', 'oti', 'otk', 'otl', 'otm', 'otn', 'oto', 'otq', 'otr', 'ots', 'ott', 'otu', 'otw', 'otx', 'oty', 'otz', 'oua', 'oub', 'oue', 'oui', 'oum', 'oun', 'ovd', 'owi', 'owl', 'oyb', 'oyd', 'oym', 'oyy', 'ozm', 'paa', 'pab', 'pac', 'pad', 'pae', 'paf', 'pag', 'pah', 'pai', 'pak', 'pal', 'pam', 'pao', 'pap', 'paq', 'par', 'pas', 'pat', 'pau', 'pav', 'paw', 'pax', 'pay', 'paz', 'pbb', 'pbc', 'pbe', 'pbf', 'pbg', 'pbh', 'pbi', 'pbl', 'pbn', 'pbo', 'pbp', 'pbr', 'pbs', 'pbt', 'pbu', 'pbv', 'pby', 'pbz', 'pca', 'pcb', 'pcc', 'pcd', 'pce', 'pcf', 'pcg', 'pch', 'pci', 'pcj', 'pck', 'pcl', 'pcm', 'pcn', 'pcp', 'pcr', 'pcw', 'pda', 'pdc', 'pdi', 'pdn', 'pdo', 'pdt', 'pdu', 'pea', 'peb', 'ped', 'pee', 'pef', 'peg', 'peh', 'pei', 'pej', 'pek', 'pel', 'pem', 'peo', 'pep', 'peq', 'pes', 'pev', 'pex', 'pey', 'pez', 'pfa', 'pfe', 'pfl', 'pga', 'pgd', 'pgg', 'pgi', 'pgk', 'pgl', 'pgn', 'pgs', 'pgu', 'pgy', 'pgz', 'pha', 'phd', 'phg', 'phh', 'phi', 'phk', 'phl', 'phm', 'phn', 'pho', 'phq', 'phr', 'pht', 'phu', 'phv', 'phw', 'pia', 'pib', 'pic', 'pid', 'pie', 'pif', 'pig', 'pih', 'pii', 'pij', 'pil', 'pim', 'pin', 'pio', 'pip', 'pir', 'pis', 'pit', 'piu', 'piv', 'piw', 'pix', 'piy', 'piz', 'pjt', 'pka', 'pkb', 'pkc', 'pkg', 'pkh', 'pkn', 'pko', 'pkp', 'pkr', 'pks', 'pkt', 'pku', 'pla', 'plb', 'plc', 'pld', 'ple', 'plf', 'plg', 'plh', 'plj', 'plk', 'pll', 'pln', 'plo', 'plp', 'plq', 'plr', 'pls', 'plt', 'plu', 'plv', 'plw', 'ply', 'plz', 'pma', 'pmb', 'pmc', 'pmd', 'pme', 'pmf', 'pmh', 'pmi', 'pmj', 'pmk', 'pml', 'pmm', 'pmn', 'pmo', 'pmq', 'pmr', 'pms', 'pmt', 'pmu', 'pmw', 'pmx', 'pmy', 'pmz', 'pna', 'pnb', 'pnc', 'pne', 'png', 'pnh', 'pni', 'pnj', 'pnk', 'pnl', 'pnm', 'pnn', 'pno', 'pnp', 'pnq', 'pnr', 'pns', 'pnt', 'pnu', 'pnv', 'pnw', 'pnx', 'pny', 'pnz', 'poc', 'pod', 'poe', 'pof', 'pog', 'poh', 'poi', 'pok', 'pom', 'pon', 'poo', 'pop', 'poq', 'pos', 'pot', 'pov', 'pow', 'pox', 'poy', 'poz', 'ppa', 'ppe', 'ppi', 'ppk', 'ppl', 'ppm', 'ppn', 'ppo', 'ppp', 'ppq', 'ppr', 'pps', 'ppt', 'ppu', 'pqa', 'pqe', 'pqm', 'pqw', 'pra', 'prb', 'prc', 'prd', 'pre', 'prf', 'prg', 'prh', 'pri', 'prk', 'prl', 'prm', 'prn', 'pro', 'prp', 'prq', 'prr', 'prs', 'prt', 'pru', 'prw', 'prx', 'pry', 'prz', 'psa', 'psc', 'psd', 'pse', 'psg', 'psh', 'psi', 'psl', 'psm', 'psn', 'pso', 'psp', 'psq', 'psr', 'pss', 'pst', 'psu', 'psw', 'psy', 'pta', 'pth', 'pti', 'ptn', 'pto', 'ptp', 'ptq', 'ptr', 'ptt', 'ptu', 'ptv', 'ptw', 'pty', 'pua', 'pub', 'puc', 'pud', 'pue', 'puf', 'pug', 'pui', 'puj', 'puk', 'pum', 'puo', 'pup', 'puq', 'pur', 'put', 'puu', 'puw', 'pux', 'puy', 'puz', 'pwa', 'pwb', 'pwg', 'pwi', 'pwm', 'pwn', 'pwo', 'pwr', 'pww', 'pxm', 'pye', 'pym', 'pyn', 'pys', 'pyu', 'pyx', 'pyy', 'pzn', 'qaa..qtz', 'qua', 'qub', 'quc', 'qud', 'quf', 'qug', 'quh', 'qui', 'quk', 'qul', 'qum', 'qun', 'qup', 'quq', 'qur', 'qus', 'quv', 'quw', 'qux', 'quy', 'quz', 'qva', 'qvc', 'qve', 'qvh', 'qvi', 'qvj', 'qvl', 'qvm', 'qvn', 'qvo', 'qvp', 'qvs', 'qvw', 'qvy', 'qvz', 'qwa', 'qwc', 'qwe', 'qwh', 'qwm', 'qws', 'qwt', 'qxa', 'qxc', 'qxh', 'qxl', 'qxn', 'qxo', 'qxp', 'qxq', 'qxr', 'qxs', 'qxt', 'qxu', 'qxw', 'qya', 'qyp', 'raa', 'rab', 'rac', 'rad', 'raf', 'rag', 'rah', 'rai', 'raj', 'rak', 'ral', 'ram', 'ran', 'rao', 'rap', 'raq', 'rar', 'ras', 'rat', 'rau', 'rav', 'raw', 'rax', 'ray', 'raz', 'rbb', 'rbk', 'rbl', 'rbp', 'rcf', 'rdb', 'rea', 'reb', 'ree', 'reg', 'rei', 'rej', 'rel', 'rem', 'ren', 'rer', 'res', 'ret', 'rey', 'rga', 'rge', 'rgk', 'rgn', 'rgr', 'rgs', 'rgu', 'rhg', 'rhp', 'ria', 'rie', 'rif', 'ril', 'rim', 'rin', 'rir', 'rit', 'riu', 'rjg', 'rji', 'rjs', 'rka', 'rkb', 'rkh', 'rki', 'rkm', 'rkt', 'rkw', 'rma', 'rmb', 'rmc', 'rmd', 'rme', 'rmf', 'rmg', 'rmh', 'rmi', 'rmk', 'rml', 'rmm', 'rmn', 'rmo', 'rmp', 'rmq', 'rmr', 'rms', 'rmt', 'rmu', 'rmv', 'rmw', 'rmx', 'rmy', 'rmz', 'rna', 'rnd', 'rng', 'rnl', 'rnn', 'rnp', 'rnr', 'rnw', 'roa', 'rob', 'roc', 'rod', 'roe', 'rof', 'rog', 'rol', 'rom', 'roo', 'rop', 'ror', 'rou', 'row', 'rpn', 'rpt', 'rri', 'rro', 'rrt', 'rsb', 'rsi', 'rsl', 'rsm', 'rtc', 'rth', 'rtm', 'rts', 'rtw', 'rub', 'ruc', 'rue', 'ruf', 'rug', 'ruh', 'rui', 'ruk', 'ruo', 'rup', 'ruq', 'rut', 'ruu', 'ruy', 'ruz', 'rwa', 'rwk', 'rwm', 'rwo', 'rwr', 'rxd', 'rxw', 'ryn', 'rys', 'ryu', 'rzh', 'saa', 'sab', 'sac', 'sad', 'sae', 'saf', 'sah', 'sai', 'saj', 'sak', 'sal', 'sam', 'sao', 'sap', 'saq', 'sar', 'sas', 'sat', 'sau', 'sav', 'saw', 'sax', 'say', 'saz', 'sba', 'sbb', 'sbc', 'sbd', 'sbe', 'sbf', 'sbg', 'sbh', 'sbi', 'sbj', 'sbk', 'sbl', 'sbm', 'sbn', 'sbo', 'sbp', 'sbq', 'sbr', 'sbs', 'sbt', 'sbu', 'sbv', 'sbw', 'sbx', 'sby', 'sbz', 'sca', 'scb', 'sce', 'scf', 'scg', 'sch', 'sci', 'sck', 'scl', 'scn', 'sco', 'scp', 'scq', 'scs', 'scu', 'scv', 'scw', 'scx', 'sda', 'sdb', 'sdc', 'sde', 'sdf', 'sdg', 'sdh', 'sdj', 'sdk', 'sdl', 'sdm', 'sdn', 'sdo', 'sdp', 'sdr', 'sds', 'sdt', 'sdu', 'sdv', 'sdx', 'sdz', 'sea', 'seb', 'sec', 'sed', 'see', 'sef', 'seg', 'seh', 'sei', 'sej', 'sek', 'sel', 'sem', 'sen', 'seo', 'sep', 'seq', 'ser', 'ses', 'set', 'seu', 'sev', 'sew', 'sey', 'sez', 'sfb', 'sfe', 'sfm', 'sfs', 'sfw', 'sga', 'sgb', 'sgc', 'sgd', 'sge', 'sgg', 'sgh', 'sgi', 'sgj', 'sgk', 'sgl', 'sgm', 'sgn', 'sgo', 'sgp', 'sgr', 'sgs', 'sgt', 'sgu', 'sgw', 'sgx', 'sgy', 'sgz', 'sha', 'shb', 'shc', 'shd', 'she', 'shg', 'shh', 'shi', 'shj', 'shk', 'shl', 'shm', 'shn', 'sho', 'shp', 'shq', 'shr', 'shs', 'sht', 'shu', 'shv', 'shw', 'shx', 'shy', 'shz', 'sia', 'sib', 'sid', 'sie', 'sif', 'sig', 'sih', 'sii', 'sij', 'sik', 'sil', 'sim', 'sio', 'sip', 'siq', 'sir', 'sis', 'sit', 'siu', 'siv', 'siw', 'six', 'siy', 'siz', 'sja', 'sjb', 'sjd', 'sje', 'sjg', 'sjk', 'sjl', 'sjm', 'sjn', 'sjo', 'sjp', 'sjr', 'sjs', 'sjt', 'sju', 'sjw', 'ska', 'skb', 'skc', 'skd', 'ske', 'skf', 'skg', 'skh', 'ski', 'skj', 'skk', 'skm', 'skn', 'sko', 'skp', 'skq', 'skr', 'sks', 'skt', 'sku', 'skv', 'skw', 'skx', 'sky', 'skz', 'sla', 'slc', 'sld', 'sle', 'slf', 'slg', 'slh', 'sli', 'slj', 'sll', 'slm', 'sln', 'slp', 'slq', 'slr', 'sls', 'slt', 'slu', 'slw', 'slx', 'sly', 'slz', 'sma', 'smb', 'smc', 'smd', 'smf', 'smg', 'smh', 'smi', 'smj', 'smk', 'sml', 'smm', 'smn', 'smp', 'smq', 'smr', 'sms', 'smt', 'smu', 'smv', 'smw', 'smx', 'smy', 'smz', 'snb', 'snc', 'sne', 'snf', 'sng', 'snh', 'sni', 'snj', 'snk', 'snl', 'snm', 'snn', 'sno', 'snp', 'snq', 'snr', 'sns', 'snu', 'snv', 'snw', 'snx', 'sny', 'snz', 'soa', 'sob', 'soc', 'sod', 'soe', 'sog', 'soh', 'soi', 'soj', 'sok', 'sol', 'son', 'soo', 'sop', 'soq', 'sor', 'sos', 'sou', 'sov', 'sow', 'sox', 'soy', 'soz', 'spb', 'spc', 'spd', 'spe', 'spg', 'spi', 'spk', 'spl', 'spm', 'spn', 'spo', 'spp', 'spq', 'spr', 'sps', 'spt', 'spu', 'spv', 'spx', 'spy', 'sqa', 'sqh', 'sqj', 'sqk', 'sqm', 'sqn', 'sqo', 'sqq', 'sqr', 'sqs', 'sqt', 'squ', 'sra', 'srb', 'src', 'sre', 'srf', 'srg', 'srh', 'sri', 'srk', 'srl', 'srm', 'srn', 'sro', 'srq', 'srr', 'srs', 'srt', 'sru', 'srv', 'srw', 'srx', 'sry', 'srz', 'ssa', 'ssb', 'ssc', 'ssd', 'sse', 'ssf', 'ssg', 'ssh', 'ssi', 'ssj', 'ssk', 'ssl', 'ssm', 'ssn', 'sso', 'ssp', 'ssq', 'ssr', 'sss', 'sst', 'ssu', 'ssv', 'ssx', 'ssy', 'ssz', 'sta', 'stb', 'std', 'ste', 'stf', 'stg', 'sth', 'sti', 'stj', 'stk', 'stl', 'stm', 'stn', 'sto', 'stp', 'stq', 'str', 'sts', 'stt', 'stu', 'stv', 'stw', 'sty', 'sua', 'sub', 'suc', 'sue', 'sug', 'sui', 'suj', 'suk', 'sul', 'sum', 'suq', 'sur', 'sus', 'sut', 'suv', 'suw', 'sux', 'suy', 'suz', 'sva', 'svb', 'svc', 'sve', 'svk', 'svm', 'svr', 'svs', 'svx', 'swb', 'swc', 'swf', 'swg', 'swh', 'swi', 'swj', 'swk', 'swl', 'swm', 'swn', 'swo', 'swp', 'swq', 'swr', 'sws', 'swt', 'swu', 'swv', 'sww', 'swx', 'swy', 'sxb', 'sxc', 'sxe', 'sxg', 'sxk', 'sxl', 'sxm', 'sxn', 'sxo', 'sxr', 'sxs', 'sxu', 'sxw', 'sya', 'syb', 'syc', 'syd', 'syi', 'syk', 'syl', 'sym', 'syn', 'syo', 'syr', 'sys', 'syw', 'syx', 'syy', 'sza', 'szb', 'szc', 'szd', 'sze', 'szg', 'szl', 'szn', 'szp', 'szv', 'szw', 'taa', 'tab', 'tac', 'tad', 'tae', 'taf', 'tag', 'tai', 'taj', 'tak', 'tal', 'tan', 'tao', 'tap', 'taq', 'tar', 'tas', 'tau', 'tav', 'taw', 'tax', 'tay', 'taz', 'tba', 'tbb', 'tbc', 'tbd', 'tbe', 'tbf', 'tbg', 'tbh', 'tbi', 'tbj', 'tbk', 'tbl', 'tbm', 'tbn', 'tbo', 'tbp', 'tbq', 'tbr', 'tbs', 'tbt', 'tbu', 'tbv', 'tbw', 'tbx', 'tby', 'tbz', 'tca', 'tcb', 'tcc', 'tcd', 'tce', 'tcf', 'tcg', 'tch', 'tci', 'tck', 'tcl', 'tcm', 'tcn', 'tco', 'tcp', 'tcq', 'tcs', 'tct', 'tcu', 'tcw', 'tcx', 'tcy', 'tcz', 'tda', 'tdb', 'tdc', 'tdd', 'tde', 'tdf', 'tdg', 'tdh', 'tdi', 'tdj', 'tdk', 'tdl', 'tdm', 'tdn', 'tdo', 'tdq', 'tdr', 'tds', 'tdt', 'tdu', 'tdv', 'tdx', 'tdy', 'tea', 'teb', 'tec', 'ted', 'tee', 'tef', 'teg', 'teh', 'tei', 'tek', 'tem', 'ten', 'teo', 'tep', 'teq', 'ter', 'tes', 'tet', 'teu', 'tev', 'tew', 'tex', 'tey', 'tfi', 'tfn', 'tfo', 'tfr', 'tft', 'tga', 'tgb', 'tgc', 'tgd', 'tge', 'tgf', 'tgg', 'tgh', 'tgi', 'tgj', 'tgn', 'tgo', 'tgp', 'tgq', 'tgr', 'tgs', 'tgt', 'tgu', 'tgv', 'tgw', 'tgx', 'tgy', 'tgz', 'thc', 'thd', 'the', 'thf', 'thh', 'thi', 'thk', 'thl', 'thm', 'thn', 'thp', 'thq', 'thr', 'ths', 'tht', 'thu', 'thv', 'thw', 'thx', 'thy', 'thz', 'tia', 'tic', 'tid', 'tie', 'tif', 'tig', 'tih', 'tii', 'tij', 'tik', 'til', 'tim', 'tin', 'tio', 'tip', 'tiq', 'tis', 'tit', 'tiu', 'tiv', 'tiw', 'tix', 'tiy', 'tiz', 'tja', 'tjg', 'tji', 'tjl', 'tjm', 'tjn', 'tjo', 'tjs', 'tju', 'tjw', 'tka', 'tkb', 'tkd', 'tke', 'tkf', 'tkg', 'tkk', 'tkl', 'tkm', 'tkn', 'tkp', 'tkq', 'tkr', 'tks', 'tkt', 'tku', 'tkv', 'tkw', 'tkx', 'tkz', 'tla', 'tlb', 'tlc', 'tld', 'tlf', 'tlg', 'tlh', 'tli', 'tlj', 'tlk', 'tll', 'tlm', 'tln', 'tlo', 'tlp', 'tlq', 'tlr', 'tls', 'tlt', 'tlu', 'tlv', 'tlw', 'tlx', 'tly', 'tma', 'tmb', 'tmc', 'tmd', 'tme', 'tmf', 'tmg', 'tmh', 'tmi', 'tmj', 'tmk', 'tml', 'tmm', 'tmn', 'tmo', 'tmp', 'tmq', 'tmr', 'tms', 'tmt', 'tmu', 'tmv', 'tmw', 'tmy', 'tmz', 'tna', 'tnb', 'tnc', 'tnd', 'tne', 'tnf', 'tng', 'tnh', 'tni', 'tnk', 'tnl', 'tnm', 'tnn', 'tno', 'tnp', 'tnq', 'tnr', 'tns', 'tnt', 'tnu', 'tnv', 'tnw', 'tnx', 'tny', 'tnz', 'tob', 'toc', 'tod', 'toe', 'tof', 'tog', 'toh', 'toi', 'toj', 'tol', 'tom', 'too', 'top', 'toq', 'tor', 'tos', 'tou', 'tov', 'tow', 'tox', 'toy', 'toz', 'tpa', 'tpc', 'tpe', 'tpf', 'tpg', 'tpi', 'tpj', 'tpk', 'tpl', 'tpm', 'tpn', 'tpo', 'tpp', 'tpq', 'tpr', 'tpt', 'tpu', 'tpv', 'tpw', 'tpx', 'tpy', 'tpz', 'tqb', 'tql', 'tqm', 'tqn', 'tqo', 'tqp', 'tqq', 'tqr', 'tqt', 'tqu', 'tqw', 'tra', 'trb', 'trc', 'trd', 'tre', 'trf', 'trg', 'trh', 'tri', 'trj', 'trk', 'trl', 'trm', 'trn', 'tro', 'trp', 'trq', 'trr', 'trs', 'trt', 'tru', 'trv', 'trw', 'trx', 'try', 'trz', 'tsa', 'tsb', 'tsc', 'tsd', 'tse', 'tsf', 'tsg', 'tsh', 'tsi', 'tsj', 'tsk', 'tsl', 'tsm', 'tsp', 'tsq', 'tsr', 'tss', 'tst', 'tsu', 'tsv', 'tsw', 'tsx', 'tsy', 'tsz', 'tta', 'ttb', 'ttc', 'ttd', 'tte', 'ttf', 'ttg', 'tth', 'tti', 'ttj', 'ttk', 'ttl', 'ttm', 'ttn', 'tto', 'ttp', 'ttq', 'ttr', 'tts', 'ttt', 'ttu', 'ttv', 'ttw', 'tty', 'ttz', 'tua', 'tub', 'tuc', 'tud', 'tue', 'tuf', 'tug', 'tuh', 'tui', 'tuj', 'tul', 'tum', 'tun', 'tuo', 'tup', 'tuq', 'tus', 'tut', 'tuu', 'tuv', 'tuw', 'tux', 'tuy', 'tuz', 'tva', 'tvd', 'tve', 'tvk', 'tvl', 'tvm', 'tvn', 'tvo', 'tvs', 'tvt', 'tvu', 'tvw', 'tvy', 'twa', 'twb', 'twc', 'twd', 'twe', 'twf', 'twg', 'twh', 'twl', 'twm', 'twn', 'two', 'twp', 'twq', 'twr', 'twt', 'twu', 'tww', 'twx', 'twy', 'txa', 'txb', 'txc', 'txe', 'txg', 'txh', 'txi', 'txj', 'txm', 'txn', 'txo', 'txq', 'txr', 'txs', 'txt', 'txu', 'txx', 'txy', 'tya', 'tye', 'tyh', 'tyi', 'tyj', 'tyl', 'tyn', 'typ', 'tyr', 'tys', 'tyt', 'tyu', 'tyv', 'tyx', 'tyz', 'tza', 'tzh', 'tzj', 'tzl', 'tzm', 'tzn', 'tzo', 'tzx', 'uam', 'uan', 'uar', 'uba', 'ubi', 'ubl', 'ubr', 'ubu', 'uby', 'uda', 'ude', 'udg', 'udi', 'udj', 'udl', 'udm', 'udu', 'ues', 'ufi', 'uga', 'ugb', 'uge', 'ugn', 'ugo', 'ugy', 'uha', 'uhn', 'uis', 'uiv', 'uji', 'uka', 'ukg', 'ukh', 'ukl', 'ukp', 'ukq', 'uks', 'uku', 'ukw', 'uky', 'ula', 'ulb', 'ulc', 'ule', 'ulf', 'uli', 'ulk', 'ull', 'ulm', 'uln', 'ulu', 'ulw', 'uma', 'umb', 'umc', 'umd', 'umg', 'umi', 'umm', 'umn', 'umo', 'ump', 'umr', 'ums', 'umu', 'una', 'und', 'une', 'ung', 'unk', 'unm', 'unn', 'unp', 'unr', 'unu', 'unx', 'unz', 'uok', 'upi', 'upv', 'ura', 'urb', 'urc', 'ure', 'urf', 'urg', 'urh', 'uri', 'urj', 'urk', 'url', 'urm', 'urn', 'uro', 'urp', 'urr', 'urt', 'uru', 'urv', 'urw', 'urx', 'ury', 'urz', 'usa', 'ush', 'usi', 'usk', 'usp', 'usu', 'uta', 'ute', 'utp', 'utr', 'utu', 'uum', 'uun', 'uur', 'uuu', 'uve', 'uvh', 'uvl', 'uwa', 'uya', 'uzn', 'uzs', 'vaa', 'vae', 'vaf', 'vag', 'vah', 'vai', 'vaj', 'val', 'vam', 'van', 'vao', 'vap', 'var', 'vas', 'vau', 'vav', 'vay', 'vbb', 'vbk', 'vec', 'ved', 'vel', 'vem', 'veo', 'vep', 'ver', 'vgr', 'vgt', 'vic', 'vid', 'vif', 'vig', 'vil', 'vin', 'vis', 'vit', 'viv', 'vka', 'vki', 'vkj', 'vkk', 'vkl', 'vkm', 'vko', 'vkp', 'vkt', 'vku', 'vlp', 'vls', 'vma', 'vmb', 'vmc', 'vmd', 'vme', 'vmf', 'vmg', 'vmh', 'vmi', 'vmj', 'vmk', 'vml', 'vmm', 'vmp', 'vmq', 'vmr', 'vms', 'vmu', 'vmv', 'vmw', 'vmx', 'vmy', 'vmz', 'vnk', 'vnm', 'vnp', 'vor', 'vot', 'vra', 'vro', 'vrs', 'vrt', 'vsi', 'vsl', 'vsv', 'vto', 'vum', 'vun', 'vut', 'vwa', 'waa', 'wab', 'wac', 'wad', 'wae', 'waf', 'wag', 'wah', 'wai', 'waj', 'wak', 'wal', 'wam', 'wan', 'wao', 'wap', 'waq', 'war', 'was', 'wat', 'wau', 'wav', 'waw', 'wax', 'way', 'waz', 'wba', 'wbb', 'wbe', 'wbf', 'wbh', 'wbi', 'wbj', 'wbk', 'wbl', 'wbm', 'wbp', 'wbq', 'wbr', 'wbt', 'wbv', 'wbw', 'wca', 'wci', 'wdd', 'wdg', 'wdj', 'wdk', 'wdu', 'wdy', 'wea', 'wec', 'wed', 'weg', 'weh', 'wei', 'wem', 'wen', 'weo', 'wep', 'wer', 'wes', 'wet', 'weu', 'wew', 'wfg', 'wga', 'wgb', 'wgg', 'wgi', 'wgo', 'wgu', 'wgw', 'wgy', 'wha', 'whg', 'whk', 'whu', 'wib', 'wic', 'wie', 'wif', 'wig', 'wih', 'wii', 'wij', 'wik', 'wil', 'wim', 'win', 'wir', 'wit', 'wiu', 'wiv', 'wiw', 'wiy', 'wja', 'wji', 'wka', 'wkb', 'wkd', 'wkl', 'wku', 'wkw', 'wky', 'wla', 'wlc', 'wle', 'wlg', 'wli', 'wlk', 'wll', 'wlm', 'wlo', 'wlr', 'wls', 'wlu', 'wlv', 'wlw', 'wlx', 'wly', 'wma', 'wmb', 'wmc', 'wmd', 'wme', 'wmh', 'wmi', 'wmm', 'wmn', 'wmo', 'wms', 'wmt', 'wmw', 'wmx', 'wnb', 'wnc', 'wnd', 'wne', 'wng', 'wni', 'wnk', 'wnm', 'wnn', 'wno', 'wnp', 'wnu', 'wnw', 'wny', 'woa', 'wob', 'woc', 'wod', 'woe', 'wof', 'wog', 'woi', 'wok', 'wom', 'won', 'woo', 'wor', 'wos', 'wow', 'woy', 'wpc', 'wra', 'wrb', 'wrd', 'wrg', 'wrh', 'wri', 'wrk', 'wrl', 'wrm', 'wrn', 'wro', 'wrp', 'wrr', 'wrs', 'wru', 'wrv', 'wrw', 'wrx', 'wry', 'wrz', 'wsa', 'wsg', 'wsi', 'wsk', 'wsr', 'wss', 'wsu', 'wsv', 'wtf', 'wth', 'wti', 'wtk', 'wtm', 'wtw', 'wua', 'wub', 'wud', 'wuh', 'wul', 'wum', 'wun', 'wur', 'wut', 'wuu', 'wuv', 'wux', 'wuy', 'wwa', 'wwb', 'wwo', 'wwr', 'www', 'wxa', 'wxw', 'wya', 'wyb', 'wyi', 'wym', 'wyr', 'wyy', 'xaa', 'xab', 'xac', 'xad', 'xae', 'xag', 'xai', 'xaj', 'xak', 'xal', 'xam', 'xan', 'xao', 'xap', 'xaq', 'xar', 'xas', 'xat', 'xau', 'xav', 'xaw', 'xay', 'xba', 'xbb', 'xbc', 'xbd', 'xbe', 'xbg', 'xbi', 'xbj', 'xbm', 'xbn', 'xbo', 'xbp', 'xbr', 'xbw', 'xbx', 'xby', 'xcb', 'xcc', 'xce', 'xcg', 'xch', 'xcl', 'xcm', 'xcn', 'xco', 'xcr', 'xct', 'xcu', 'xcv', 'xcw', 'xcy', 'xda', 'xdc', 'xdk', 'xdm', 'xdy', 'xeb', 'xed', 'xeg', 'xel', 'xem', 'xep', 'xer', 'xes', 'xet', 'xeu', 'xfa', 'xga', 'xgb', 'xgd', 'xgf', 'xgg', 'xgi', 'xgl', 'xgm', 'xgn', 'xgr', 'xgu', 'xgw', 'xha', 'xhc', 'xhd', 'xhe', 'xhr', 'xht', 'xhu', 'xhv', 'xia', 'xib', 'xii', 'xil', 'xin', 'xip', 'xir', 'xis', 'xiv', 'xiy', 'xjb', 'xjt', 'xka', 'xkb', 'xkc', 'xkd', 'xke', 'xkf', 'xkg', 'xkh', 'xki', 'xkj', 'xkk', 'xkl', 'xkn', 'xko', 'xkp', 'xkq', 'xkr', 'xks', 'xkt', 'xku', 'xkv', 'xkw', 'xkx', 'xky', 'xkz', 'xla', 'xlb', 'xlc', 'xld', 'xle', 'xlg', 'xli', 'xln', 'xlo', 'xlp', 'xls', 'xlu', 'xly', 'xma', 'xmb', 'xmc', 'xmd', 'xme', 'xmf', 'xmg', 'xmh', 'xmj', 'xmk', 'xml', 'xmm', 'xmn', 'xmo', 'xmp', 'xmq', 'xmr', 'xms', 'xmt', 'xmu', 'xmv', 'xmw', 'xmx', 'xmy', 'xmz', 'xna', 'xnb', 'xnd', 'xng', 'xnh', 'xni', 'xnk', 'xnn', 'xno', 'xnr', 'xns', 'xnt', 'xnu', 'xny', 'xnz', 'xoc', 'xod', 'xog', 'xoi', 'xok', 'xom', 'xon', 'xoo', 'xop', 'xor', 'xow', 'xpa', 'xpc', 'xpe', 'xpg', 'xpi', 'xpj', 'xpk', 'xpm', 'xpn', 'xpo', 'xpp', 'xpq', 'xpr', 'xps', 'xpt', 'xpu', 'xpy', 'xqa', 'xqt', 'xra', 'xrb', 'xrd', 'xre', 'xrg', 'xri', 'xrm', 'xrn', 'xrq', 'xrr', 'xrt', 'xru', 'xrw', 'xsa', 'xsb', 'xsc', 'xsd', 'xse', 'xsh', 'xsi', 'xsj', 'xsl', 'xsm', 'xsn', 'xso', 'xsp', 'xsq', 'xsr', 'xss', 'xsu', 'xsv', 'xsy', 'xta', 'xtb', 'xtc', 'xtd', 'xte', 'xtg', 'xth', 'xti', 'xtj', 'xtl', 'xtm', 'xtn', 'xto', 'xtp', 'xtq', 'xtr', 'xts', 'xtt', 'xtu', 'xtv', 'xtw', 'xty', 'xtz', 'xua', 'xub', 'xud', 'xug', 'xuj', 'xul', 'xum', 'xun', 'xuo', 'xup', 'xur', 'xut', 'xuu', 'xve', 'xvi', 'xvn', 'xvo', 'xvs', 'xwa', 'xwc', 'xwd', 'xwe', 'xwg', 'xwj', 'xwk', 'xwl', 'xwo', 'xwr', 'xwt', 'xww', 'xxb', 'xxk', 'xxm', 'xxr', 'xxt', 'xya', 'xyb', 'xyj', 'xyk', 'xyl', 'xyt', 'xyy', 'xzh', 'xzm', 'xzp', 'yaa', 'yab', 'yac', 'yad', 'yae', 'yaf', 'yag', 'yah', 'yai', 'yaj', 'yak', 'yal', 'yam', 'yan', 'yao', 'yap', 'yaq', 'yar', 'yas', 'yat', 'yau', 'yav', 'yaw', 'yax', 'yay', 'yaz', 'yba', 'ybb', 'ybd', 'ybe', 'ybh', 'ybi', 'ybj', 'ybk', 'ybl', 'ybm', 'ybn', 'ybo', 'ybx', 'yby', 'ych', 'ycl', 'ycn', 'ycp', 'yda', 'ydd', 'yde', 'ydg', 'ydk', 'yds', 'yea', 'yec', 'yee', 'yei', 'yej', 'yel', 'yen', 'yer', 'yes', 'yet', 'yeu', 'yev', 'yey', 'yga', 'ygi', 'ygl', 'ygm', 'ygp', 'ygr', 'ygs', 'ygu', 'ygw', 'yha', 'yhd', 'yhl', 'yhs', 'yia', 'yif', 'yig', 'yih', 'yii', 'yij', 'yik', 'yil', 'yim', 'yin', 'yip', 'yiq', 'yir', 'yis', 'yit', 'yiu', 'yiv', 'yix', 'yiy', 'yiz', 'yka', 'ykg', 'yki', 'ykk', 'ykl', 'ykm', 'ykn', 'yko', 'ykr', 'ykt', 'yku', 'yky', 'yla', 'ylb', 'yle', 'ylg', 'yli', 'yll', 'ylm', 'yln', 'ylo', 'ylr', 'ylu', 'yly', 'yma', 'ymb', 'ymc', 'ymd', 'yme', 'ymg', 'ymh', 'ymi', 'ymk', 'yml', 'ymm', 'ymn', 'ymo', 'ymp', 'ymq', 'ymr', 'yms', 'ymt', 'ymx', 'ymz', 'yna', 'ynd', 'yne', 'yng', 'ynh', 'ynk', 'ynl', 'ynn', 'yno', 'ynq', 'yns', 'ynu', 'yob', 'yog', 'yoi', 'yok', 'yol', 'yom', 'yon', 'yos', 'yot', 'yox', 'yoy', 'ypa', 'ypb', 'ypg', 'yph', 'ypk', 'ypm', 'ypn', 'ypo', 'ypp', 'ypz', 'yra', 'yrb', 'yre', 'yri', 'yrk', 'yrl', 'yrm', 'yrn', 'yro', 'yrs', 'yrw', 'yry', 'ysc', 'ysd', 'ysg', 'ysl', 'ysn', 'yso', 'ysp', 'ysr', 'yss', 'ysy', 'yta', 'ytl', 'ytp', 'ytw', 'yty', 'yua', 'yub', 'yuc', 'yud', 'yue', 'yuf', 'yug', 'yui', 'yuj', 'yuk', 'yul', 'yum', 'yun', 'yup', 'yuq', 'yur', 'yut', 'yuu', 'yuw', 'yux', 'yuy', 'yuz', 'yva', 'yvt', 'ywa', 'ywg', 'ywl', 'ywn', 'ywq', 'ywr', 'ywt', 'ywu', 'yww', 'yxa', 'yxg', 'yxl', 'yxm', 'yxu', 'yxy', 'yyr', 'yyu', 'yyz', 'yzg', 'yzk', 'zaa', 'zab', 'zac', 'zad', 'zae', 'zaf', 'zag', 'zah', 'zai', 'zaj', 'zak', 'zal', 'zam', 'zao', 'zap', 'zaq', 'zar', 'zas', 'zat', 'zau', 'zav', 'zaw', 'zax', 'zay', 'zaz', 'zbc', 'zbe', 'zbl', 'zbt', 'zbw', 'zca', 'zch', 'zdj', 'zea', 'zeg', 'zeh', 'zen', 'zga', 'zgb', 'zgh', 'zgm', 'zgn', 'zgr', 'zhb', 'zhd', 'zhi', 'zhn', 'zhw', 'zhx', 'zia', 'zib', 'zik', 'zil', 'zim', 'zin', 'zir', 'ziw', 'ziz', 'zka', 'zkb', 'zkd', 'zkg', 'zkh', 'zkk', 'zkn', 'zko', 'zkp', 'zkr', 'zkt', 'zku', 'zkv', 'zkz', 'zle', 'zlj', 'zlm', 'zln', 'zlq', 'zls', 'zlw', 'zma', 'zmb', 'zmc', 'zmd', 'zme', 'zmf', 'zmg', 'zmh', 'zmi', 'zmj', 'zmk', 'zml', 'zmm', 'zmn', 'zmo', 'zmp', 'zmq', 'zmr', 'zms', 'zmt', 'zmu', 'zmv', 'zmw', 'zmx', 'zmy', 'zmz', 'zna', 'znd', 'zne', 'zng', 'znk', 'zns', 'zoc', 'zoh', 'zom', 'zoo', 'zoq', 'zor', 'zos', 'zpa', 'zpb', 'zpc', 'zpd', 'zpe', 'zpf', 'zpg', 'zph', 'zpi', 'zpj', 'zpk', 'zpl', 'zpm', 'zpn', 'zpo', 'zpp', 'zpq', 'zpr', 'zps', 'zpt', 'zpu', 'zpv', 'zpw', 'zpx', 'zpy', 'zpz', 'zqe', 'zra', 'zrg', 'zrn', 'zro', 'zrp', 'zrs', 'zsa', 'zsk', 'zsl', 'zsm', 'zsr', 'zsu', 'zte', 'ztg', 'ztl', 'ztm', 'ztn', 'ztp', 'ztq', 'zts', 'ztt', 'ztu', 'ztx', 'zty', 'zua', 'zuh', 'zum', 'zun', 'zuy', 'zwa', 'zxx', 'zyb', 'zyg', 'zyj', 'zyn', 'zyp', 'zza', 'zzj' ],\n        id: 'valid-lang'\n      } ]\n    }, {\n      id: 'video-caption',\n      selector: 'video',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2a', 'wcag122', 'wcag123', 'section508', 'section508.22.a' ],\n      all: [],\n      any: [],\n      none: [ 'caption' ]\n    }, {\n      id: 'video-description',\n      selector: 'video',\n      excludeHidden: false,\n      tags: [ 'cat.text-alternatives', 'wcag2aa', 'wcag125', 'section508', 'section508.22.b' ],\n      all: [],\n      any: [],\n      none: [ 'description' ]\n    } ],\n    checks: [ {\n      id: 'abstractrole',\n      evaluate: function evaluate(node, options) {\n        return axe.commons.aria.getRoleType(node.getAttribute('role')) === 'abstract';\n      }\n    }, {\n      id: 'aria-allowed-attr',\n      evaluate: function evaluate(node, options) {\n        var invalid = [];\n        var attr, attrName, allowed, role = node.getAttribute('role'), attrs = node.attributes;\n        if (!role) {\n          role = axe.commons.aria.implicitRole(node);\n        }\n        allowed = axe.commons.aria.allowedAttr(role);\n        if (role && allowed) {\n          for (var i = 0, l = attrs.length; i < l; i++) {\n            attr = attrs[i];\n            attrName = attr.name;\n            if (axe.commons.aria.validateAttr(attrName) && allowed.indexOf(attrName) === -1) {\n              invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n            }\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'invalidrole',\n      evaluate: function evaluate(node, options) {\n        return !axe.commons.aria.isValidRole(node.getAttribute('role'));\n      }\n    }, {\n      id: 'aria-required-attr',\n      evaluate: function evaluate(node, options) {\n        var missing = [];\n        if (node.hasAttributes()) {\n          var attr, role = node.getAttribute('role'), required = axe.commons.aria.requiredAttr(role);\n          if (role && required) {\n            for (var i = 0, l = required.length; i < l; i++) {\n              attr = required[i];\n              if (!node.getAttribute(attr)) {\n                missing.push(attr);\n              }\n            }\n          }\n        }\n        if (missing.length) {\n          this.data(missing);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'aria-required-children',\n      evaluate: function evaluate(node, options) {\n        var requiredOwned = axe.commons.aria.requiredOwned, implicitNodes = axe.commons.aria.implicitNodes, matchesSelector = axe.commons.utils.matchesSelector, idrefs = axe.commons.dom.idrefs;\n        function owns(node, role, ariaOwned) {\n          if (node === null) {\n            return false;\n          }\n          var implicit = implicitNodes(role), selector = [ '[role=\"' + role + '\"]' ];\n          if (implicit) {\n            selector = selector.concat(implicit);\n          }\n          selector = selector.join(',');\n          return ariaOwned ? matchesSelector(node, selector) || !!node.querySelector(selector) : !!node.querySelector(selector);\n        }\n        function ariaOwns(nodes, role) {\n          var index, length;\n          for (index = 0, length = nodes.length; index < length; index++) {\n            if (nodes[index] === null) {\n              continue;\n            }\n            if (owns(nodes[index], role, true)) {\n              return true;\n            }\n          }\n          return false;\n        }\n        function missingRequiredChildren(node, childRoles, all) {\n          var i, l = childRoles.length, missing = [], ownedElements = idrefs(node, 'aria-owns');\n          for (i = 0; i < l; i++) {\n            var r = childRoles[i];\n            if (owns(node, r) || ariaOwns(ownedElements, r)) {\n              if (!all) {\n                return null;\n              }\n            } else {\n              if (all) {\n                missing.push(r);\n              }\n            }\n          }\n          if (missing.length) {\n            return missing;\n          }\n          if (!all && childRoles.length) {\n            return childRoles;\n          }\n          return null;\n        }\n        var role = node.getAttribute('role');\n        var required = requiredOwned(role);\n        if (!required) {\n          return true;\n        }\n        var all = false;\n        var childRoles = required.one;\n        if (!childRoles) {\n          var all = true;\n          childRoles = required.all;\n        }\n        var missing = missingRequiredChildren(node, childRoles, all);\n        if (!missing) {\n          return true;\n        }\n        this.data(missing);\n        return false;\n      }\n    }, {\n      id: 'aria-required-parent',\n      evaluate: function evaluate(node, options) {\n        function getSelector(role) {\n          var impliedNative = axe.commons.aria.implicitNodes(role) || [];\n          return impliedNative.concat('[role=\"' + role + '\"]').join(',');\n        }\n        function getMissingContext(element, requiredContext, includeElement) {\n          var index, length, role = element.getAttribute('role'), missing = [];\n          if (!requiredContext) {\n            requiredContext = axe.commons.aria.requiredContext(role);\n          }\n          if (!requiredContext) {\n            return null;\n          }\n          for (index = 0, length = requiredContext.length; index < length; index++) {\n            if (includeElement && axe.utils.matchesSelector(element, getSelector(requiredContext[index]))) {\n              return null;\n            }\n            if (axe.commons.dom.findUp(element, getSelector(requiredContext[index]))) {\n              return null;\n            } else {\n              missing.push(requiredContext[index]);\n            }\n          }\n          return missing;\n        }\n        function getAriaOwners(element) {\n          var owners = [], o = null;\n          while (element) {\n            if (element.id) {\n              o = document.querySelector('[aria-owns~=' + axe.commons.utils.escapeSelector(element.id) + ']');\n              if (o) {\n                owners.push(o);\n              }\n            }\n            element = element.parentNode;\n          }\n          return owners.length ? owners : null;\n        }\n        var missingParents = getMissingContext(node);\n        if (!missingParents) {\n          return true;\n        }\n        var owners = getAriaOwners(node);\n        if (owners) {\n          for (var i = 0, l = owners.length; i < l; i++) {\n            missingParents = getMissingContext(owners[i], missingParents, true);\n            if (!missingParents) {\n              return true;\n            }\n          }\n        }\n        this.data(missingParents);\n        return false;\n      }\n    }, {\n      id: 'aria-valid-attr-value',\n      evaluate: function evaluate(node, options) {\n        options = Array.isArray(options) ? options : [];\n        var invalid = [], aria = /^aria-/;\n        var attr, attrName, attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          attr = attrs[i];\n          attrName = attr.name;\n          if (options.indexOf(attrName) === -1 && aria.test(attrName) && !axe.commons.aria.validateAttrValue(node, attrName)) {\n            invalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      },\n      options: []\n    }, {\n      id: 'aria-valid-attr',\n      evaluate: function evaluate(node, options) {\n        options = Array.isArray(options) ? options : [];\n        var invalid = [], aria = /^aria-/;\n        var attr, attrs = node.attributes;\n        for (var i = 0, l = attrs.length; i < l; i++) {\n          attr = attrs[i].name;\n          if (options.indexOf(attr) === -1 && aria.test(attr) && !axe.commons.aria.validateAttr(attr)) {\n            invalid.push(attr);\n          }\n        }\n        if (invalid.length) {\n          this.data(invalid);\n          return false;\n        }\n        return true;\n      },\n      options: []\n    }, {\n      id: 'color-contrast',\n      evaluate: function evaluate(node, options) {\n        if (!axe.commons.dom.isVisible(node, false)) {\n          return true;\n        }\n        var noScroll = !!(options || {}).noScroll;\n        var bgNodes = [], bgColor = axe.commons.color.getBackgroundColor(node, bgNodes, noScroll), fgColor = axe.commons.color.getForegroundColor(node, noScroll);\n        var nodeStyle = window.getComputedStyle(node);\n        var fontSize = parseFloat(nodeStyle.getPropertyValue('font-size'));\n        var fontWeight = nodeStyle.getPropertyValue('font-weight');\n        var bold = [ 'bold', 'bolder', '600', '700', '800', '900' ].indexOf(fontWeight) !== -1;\n        var cr = axe.commons.color.hasValidContrastRatio(bgColor, fgColor, fontSize, bold);\n        var truncatedResult = Math.floor(cr.contrastRatio * 100) / 100;\n        var missing = [];\n        if (fgColor === null) {\n          missing.push(axe.commons.color.incompleteData.get('fgColor'));\n        }\n        if (bgColor === null) {\n          missing.push(axe.commons.color.incompleteData.get('bgColor'));\n        }\n        var data = {\n          fgColor: fgColor ? fgColor.toHexString() : undefined,\n          bgColor: bgColor ? bgColor.toHexString() : undefined,\n          contrastRatio: cr ? truncatedResult : undefined,\n          fontSize: (fontSize * 72 / 96).toFixed(1) + 'pt',\n          fontWeight: bold ? 'bold' : 'normal',\n          missingData: missing\n        };\n        this.data(data);\n        if (!cr.isValid) {\n          this.relatedNodes(bgNodes);\n        }\n        if (fgColor === null || bgColor === null) {\n          missing = [];\n          axe.commons.color.incompleteData.clear();\n          return undefined;\n        }\n        return cr.isValid;\n      }\n    }, {\n      id: 'link-in-text-block',\n      evaluate: function evaluate(node, options) {\n        var color = axe.commons.color;\n        function getContrast(color1, color2) {\n          var c1lum = color1.getRelativeLuminance();\n          var c2lum = color2.getRelativeLuminance();\n          return (Math.max(c1lum, c2lum) + .05) / (Math.min(c1lum, c2lum) + .05);\n        }\n        var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n        function isBlock(elm) {\n          var display = window.getComputedStyle(elm).getPropertyValue('display');\n          return blockLike.indexOf(display) !== -1 || display.substr(0, 6) === 'table-';\n        }\n        if (isBlock(node)) {\n          return false;\n        }\n        var parentBlock = node.parentNode;\n        while (parentBlock.nodeType === 1 && !isBlock(parentBlock)) {\n          parentBlock = parentBlock.parentNode;\n        }\n        if (color.elementIsDistinct(node, parentBlock)) {\n          return true;\n        } else {\n          var nodeColor, parentColor;\n          nodeColor = color.getForegroundColor(node);\n          parentColor = color.getForegroundColor(parentBlock);\n          if (!nodeColor || !parentColor) {\n            return undefined;\n          }\n          var contrast = getContrast(nodeColor, parentColor);\n          if (contrast === 1) {\n            return true;\n          } else if (contrast >= 3) {\n            axe.commons.color.incompleteData.set('fgColor', {\n              node: nodeColor ? parentBlock : node,\n              reason: 'bgContrast'\n            });\n            this.data({\n              missingData: [ axe.commons.color.incompleteData.get('fgColor') ]\n            });\n            axe.commons.color.incompleteData.clear();\n            return undefined;\n          }\n          nodeColor = color.getBackgroundColor(node);\n          parentColor = color.getBackgroundColor(parentBlock);\n          if (!nodeColor || !parentColor || getContrast(nodeColor, parentColor) >= 3) {\n            var reason = void 0;\n            if (!nodeColor || !parentColor) {\n              reason = axe.commons.color.incompleteData.get('bgColor').reason;\n            } else {\n              reason = 'bgContrast';\n            }\n            axe.commons.color.incompleteData.set('fgColor', {\n              node: nodeColor ? parentBlock : node,\n              reason: reason\n            });\n            this.data({\n              missingData: [ axe.commons.color.incompleteData.get('fgColor') ]\n            });\n            axe.commons.color.incompleteData.clear();\n            return undefined;\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'fieldset',\n      evaluate: function evaluate(node, options) {\n        var failureCode, self = this;\n        function getUnrelatedElements(parent, name) {\n          return axe.commons.utils.toArray(parent.querySelectorAll('select,textarea,button,input:not([name=\"' + name + '\"]):not([type=\"hidden\"])'));\n        }\n        function checkFieldset(group, name) {\n          var firstNode = group.firstElementChild;\n          if (!firstNode || firstNode.nodeName.toUpperCase() !== 'LEGEND') {\n            self.relatedNodes([ group ]);\n            failureCode = 'no-legend';\n            return false;\n          }\n          if (!axe.commons.text.accessibleText(firstNode)) {\n            self.relatedNodes([ firstNode ]);\n            failureCode = 'empty-legend';\n            return false;\n          }\n          var otherElements = getUnrelatedElements(group, name);\n          if (otherElements.length) {\n            self.relatedNodes(otherElements);\n            failureCode = 'mixed-inputs';\n            return false;\n          }\n          return true;\n        }\n        function checkARIAGroup(group, name) {\n          var hasLabelledByText = axe.commons.dom.idrefs(group, 'aria-labelledby').some(function(element) {\n            return element && axe.commons.text.accessibleText(element);\n          });\n          var ariaLabel = group.getAttribute('aria-label');\n          if (!hasLabelledByText && !(ariaLabel && axe.commons.text.sanitize(ariaLabel))) {\n            self.relatedNodes(group);\n            failureCode = 'no-group-label';\n            return false;\n          }\n          var otherElements = getUnrelatedElements(group, name);\n          if (otherElements.length) {\n            self.relatedNodes(otherElements);\n            failureCode = 'group-mixed-inputs';\n            return false;\n          }\n          return true;\n        }\n        function spliceCurrentNode(nodes, current) {\n          return axe.commons.utils.toArray(nodes).filter(function(candidate) {\n            return candidate !== current;\n          });\n        }\n        function runCheck(element) {\n          var name = axe.commons.utils.escapeSelector(node.name);\n          var matchingNodes = document.querySelectorAll('input[type=\"' + axe.commons.utils.escapeSelector(node.type) + '\"][name=\"' + name + '\"]');\n          if (matchingNodes.length < 2) {\n            return true;\n          }\n          var fieldset = axe.commons.dom.findUp(element, 'fieldset');\n          var group = axe.commons.dom.findUp(element, '[role=\"group\"]' + (node.type === 'radio' ? ',[role=\"radiogroup\"]' : ''));\n          if (!group && !fieldset) {\n            failureCode = 'no-group';\n            self.relatedNodes(spliceCurrentNode(matchingNodes, element));\n            return false;\n          }\n          return fieldset ? checkFieldset(fieldset, name) : checkARIAGroup(group, name);\n        }\n        var data = {\n          name: node.getAttribute('name'),\n          type: node.getAttribute('type')\n        };\n        var result = runCheck(node);\n        if (!result) {\n          data.failureCode = failureCode;\n        }\n        this.data(data);\n        return result;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(result) {\n          if (result.result) {\n            return true;\n          }\n          var data = result.data;\n          if (data) {\n            seen[data.type] = seen[data.type] || {};\n            if (!seen[data.type][data.name]) {\n              seen[data.type][data.name] = [ data ];\n              return true;\n            }\n            var hasBeenSeen = seen[data.type][data.name].some(function(candidate) {\n              return candidate.failureCode === data.failureCode;\n            });\n            if (!hasBeenSeen) {\n              seen[data.type][data.name].push(data);\n            }\n            return !hasBeenSeen;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'group-labelledby',\n      evaluate: function evaluate(node, options) {\n        this.data({\n          name: node.getAttribute('name'),\n          type: node.getAttribute('type')\n        });\n        var matchingNodes = document.querySelectorAll('input[type=\"' + axe.commons.utils.escapeSelector(node.type) + '\"][name=\"' + axe.commons.utils.escapeSelector(node.name) + '\"]');\n        if (matchingNodes.length <= 1) {\n          return true;\n        }\n        return [].map.call(matchingNodes, function(m) {\n          var l = m.getAttribute('aria-labelledby');\n          return l ? l.split(/\\s+/) : [];\n        }).reduce(function(prev, curr) {\n          return prev.filter(function(n) {\n            return curr.indexOf(n) !== -1;\n          });\n        }).filter(function(n) {\n          var labelNode = document.getElementById(n);\n          return labelNode && axe.commons.text.accessibleText(labelNode);\n        }).length !== 0;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(result) {\n          var data = result.data;\n          if (data) {\n            seen[data.type] = seen[data.type] || {};\n            if (!seen[data.type][data.name]) {\n              seen[data.type][data.name] = true;\n              return true;\n            }\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'accesskeys',\n      evaluate: function evaluate(node, options) {\n        if (axe.commons.dom.isVisible(node, false)) {\n          this.data(node.getAttribute('accesskey'));\n          this.relatedNodes([ node ]);\n        }\n        return true;\n      },\n      after: function after(results, options) {\n        var seen = {};\n        return results.filter(function(r) {\n          if (!r.data) {\n            return false;\n          }\n          var key = r.data.toUpperCase();\n          if (!seen[key]) {\n            seen[key] = r;\n            r.relatedNodes = [];\n            return true;\n          }\n          seen[key].relatedNodes.push(r.relatedNodes[0]);\n          return false;\n        }).map(function(r) {\n          r.result = !!r.relatedNodes.length;\n          return r;\n        });\n      }\n    }, {\n      id: 'focusable-no-name',\n      evaluate: function evaluate(node, options) {\n        var tabIndex = node.getAttribute('tabindex'), isFocusable = axe.commons.dom.isFocusable(node) && tabIndex > -1;\n        if (!isFocusable) {\n          return false;\n        }\n        return !axe.commons.text.accessibleText(node);\n      }\n    }, {\n      id: 'tabindex',\n      evaluate: function evaluate(node, options) {\n        return node.tabIndex <= 0;\n      }\n    }, {\n      id: 'duplicate-img-label',\n      evaluate: function evaluate(node, options) {\n        var imgs = node.querySelectorAll('img');\n        var text = axe.commons.text.visible(node, true).toLowerCase();\n        if (text === '') {\n          return false;\n        }\n        for (var i = 0, len = imgs.length; i < len; i++) {\n          var img = imgs[i];\n          var imgAlt = axe.commons.text.accessibleText(img).toLowerCase();\n          if (imgAlt === text && img.getAttribute('role') !== 'presentation' && axe.commons.dom.isVisible(img)) {\n            return true;\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'explicit-label',\n      evaluate: function evaluate(node, options) {\n        if (node.id) {\n          var label = document.querySelector('label[for=\"' + axe.commons.utils.escapeSelector(node.id) + '\"]');\n          if (label) {\n            return !!axe.commons.text.accessibleText(label);\n          }\n        }\n        return false;\n      }\n    }, {\n      id: 'help-same-as-label',\n      evaluate: function evaluate(node, options) {\n        var labelText = axe.commons.text.label(node), check = node.getAttribute('title');\n        if (!labelText) {\n          return false;\n        }\n        if (!check) {\n          check = '';\n          if (node.getAttribute('aria-describedby')) {\n            var ref = axe.commons.dom.idrefs(node, 'aria-describedby');\n            check = ref.map(function(thing) {\n              return thing ? axe.commons.text.accessibleText(thing) : '';\n            }).join('');\n          }\n        }\n        return axe.commons.text.sanitize(check) === axe.commons.text.sanitize(labelText);\n      },\n      enabled: false\n    }, {\n      id: 'implicit-label',\n      evaluate: function evaluate(node, options) {\n        var label = axe.commons.dom.findUp(node, 'label');\n        if (label) {\n          return !!axe.commons.text.accessibleText(label);\n        }\n        return false;\n      }\n    }, {\n      id: 'multiple-label',\n      evaluate: function evaluate(node, options) {\n        var labels = [].slice.call(document.querySelectorAll('label[for=\"' + axe.commons.utils.escapeSelector(node.id) + '\"]')), parent = node.parentNode;\n        if (labels.length) {\n          labels = labels.filter(function(label, index) {\n            if (index === 0 && !axe.commons.dom.isVisible(label, true) || axe.commons.dom.isVisible(label, true)) {\n              return label;\n            }\n          });\n        }\n        while (parent) {\n          if (parent.tagName === 'LABEL' && labels.indexOf(parent) === -1) {\n            labels.push(parent);\n          }\n          parent = parent.parentNode;\n        }\n        this.relatedNodes(labels);\n        return labels.length > 1;\n      }\n    }, {\n      id: 'title-only',\n      evaluate: function evaluate(node, options) {\n        var labelText = axe.commons.text.label(node);\n        return !labelText && !!(node.getAttribute('title') || node.getAttribute('aria-describedby'));\n      }\n    }, {\n      id: 'has-lang',\n      evaluate: function evaluate(node, options) {\n        return !!(node.getAttribute('lang') || node.getAttribute('xml:lang') || '').trim();\n      }\n    }, {\n      id: 'valid-lang',\n      options: [ 'aa', 'ab', 'ae', 'af', 'ak', 'am', 'an', 'ar', 'as', 'av', 'ay', 'az', 'ba', 'be', 'bg', 'bh', 'bi', 'bm', 'bn', 'bo', 'br', 'bs', 'ca', 'ce', 'ch', 'co', 'cr', 'cs', 'cu', 'cv', 'cy', 'da', 'de', 'dv', 'dz', 'ee', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fa', 'ff', 'fi', 'fj', 'fo', 'fr', 'fy', 'ga', 'gd', 'gl', 'gn', 'gu', 'gv', 'ha', 'he', 'hi', 'ho', 'hr', 'ht', 'hu', 'hy', 'hz', 'ia', 'id', 'ie', 'ig', 'ii', 'ik', 'in', 'io', 'is', 'it', 'iu', 'iw', 'ja', 'ji', 'jv', 'jw', 'ka', 'kg', 'ki', 'kj', 'kk', 'kl', 'km', 'kn', 'ko', 'kr', 'ks', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lg', 'li', 'ln', 'lo', 'lt', 'lu', 'lv', 'mg', 'mh', 'mi', 'mk', 'ml', 'mn', 'mo', 'mr', 'ms', 'mt', 'my', 'na', 'nb', 'nd', 'ne', 'ng', 'nl', 'nn', 'no', 'nr', 'nv', 'ny', 'oc', 'oj', 'om', 'or', 'os', 'pa', 'pi', 'pl', 'ps', 'pt', 'qu', 'rm', 'rn', 'ro', 'ru', 'rw', 'sa', 'sc', 'sd', 'se', 'sg', 'sh', 'si', 'sk', 'sl', 'sm', 'sn', 'so', 'sq', 'sr', 'ss', 'st', 'su', 'sv', 'sw', 'ta', 'te', 'tg', 'th', 'ti', 'tk', 'tl', 'tn', 'to', 'tr', 'ts', 'tt', 'tw', 'ty', 'ug', 'uk', 'ur', 'uz', 've', 'vi', 'vo', 'wa', 'wo', 'xh', 'yi', 'yo', 'za', 'zh', 'zu', 'aaa', 'aab', 'aac', 'aad', 'aae', 'aaf', 'aag', 'aah', 'aai', 'aak', 'aal', 'aam', 'aan', 'aao', 'aap', 'aaq', 'aas', 'aat', 'aau', 'aav', 'aaw', 'aax', 'aaz', 'aba', 'abb', 'abc', 'abd', 'abe', 'abf', 'abg', 'abh', 'abi', 'abj', 'abl', 'abm', 'abn', 'abo', 'abp', 'abq', 'abr', 'abs', 'abt', 'abu', 'abv', 'abw', 'abx', 'aby', 'abz', 'aca', 'acb', 'acd', 'ace', 'acf', 'ach', 'aci', 'ack', 'acl', 'acm', 'acn', 'acp', 'acq', 'acr', 'acs', 'act', 'acu', 'acv', 'acw', 'acx', 'acy', 'acz', 'ada', 'adb', 'add', 'ade', 'adf', 'adg', 'adh', 'adi', 'adj', 'adl', 'adn', 'ado', 'adp', 'adq', 'adr', 'ads', 'adt', 'adu', 'adw', 'adx', 'ady', 'adz', 'aea', 'aeb', 'aec', 'aed', 'aee', 'aek', 'ael', 'aem', 'aen', 'aeq', 'aer', 'aes', 'aeu', 'aew', 'aey', 'aez', 'afa', 'afb', 'afd', 'afe', 'afg', 'afh', 'afi', 'afk', 'afn', 'afo', 'afp', 'afs', 'aft', 'afu', 'afz', 'aga', 'agb', 'agc', 'agd', 'age', 'agf', 'agg', 'agh', 'agi', 'agj', 'agk', 'agl', 'agm', 'agn', 'ago', 'agp', 'agq', 'agr', 'ags', 'agt', 'agu', 'agv', 'agw', 'agx', 'agy', 'agz', 'aha', 'ahb', 'ahg', 'ahh', 'ahi', 'ahk', 'ahl', 'ahm', 'ahn', 'aho', 'ahp', 'ahr', 'ahs', 'aht', 'aia', 'aib', 'aic', 'aid', 'aie', 'aif', 'aig', 'aih', 'aii', 'aij', 'aik', 'ail', 'aim', 'ain', 'aio', 'aip', 'aiq', 'air', 'ais', 'ait', 'aiw', 'aix', 'aiy', 'aja', 'ajg', 'aji', 'ajn', 'ajp', 'ajt', 'aju', 'ajw', 'ajz', 'akb', 'akc', 'akd', 'ake', 'akf', 'akg', 'akh', 'aki', 'akj', 'akk', 'akl', 'akm', 'ako', 'akp', 'akq', 'akr', 'aks', 'akt', 'aku', 'akv', 'akw', 'akx', 'aky', 'akz', 'ala', 'alc', 'ald', 'ale', 'alf', 'alg', 'alh', 'ali', 'alj', 'alk', 'all', 'alm', 'aln', 'alo', 'alp', 'alq', 'alr', 'als', 'alt', 'alu', 'alv', 'alw', 'alx', 'aly', 'alz', 'ama', 'amb', 'amc', 'ame', 'amf', 'amg', 'ami', 'amj', 'amk', 'aml', 'amm', 'amn', 'amo', 'amp', 'amq', 'amr', 'ams', 'amt', 'amu', 'amv', 'amw', 'amx', 'amy', 'amz', 'ana', 'anb', 'anc', 'and', 'ane', 'anf', 'ang', 'anh', 'ani', 'anj', 'ank', 'anl', 'anm', 'ann', 'ano', 'anp', 'anq', 'anr', 'ans', 'ant', 'anu', 'anv', 'anw', 'anx', 'any', 'anz', 'aoa', 'aob', 'aoc', 'aod', 'aoe', 'aof', 'aog', 'aoh', 'aoi', 'aoj', 'aok', 'aol', 'aom', 'aon', 'aor', 'aos', 'aot', 'aou', 'aox', 'aoz', 'apa', 'apb', 'apc', 'apd', 'ape', 'apf', 'apg', 'aph', 'api', 'apj', 'apk', 'apl', 'apm', 'apn', 'apo', 'app', 'apq', 'apr', 'aps', 'apt', 'apu', 'apv', 'apw', 'apx', 'apy', 'apz', 'aqa', 'aqc', 'aqd', 'aqg', 'aql', 'aqm', 'aqn', 'aqp', 'aqr', 'aqt', 'aqz', 'arb', 'arc', 'ard', 'are', 'arh', 'ari', 'arj', 'ark', 'arl', 'arn', 'aro', 'arp', 'arq', 'arr', 'ars', 'art', 'aru', 'arv', 'arw', 'arx', 'ary', 'arz', 'asa', 'asb', 'asc', 'asd', 'ase', 'asf', 'asg', 'ash', 'asi', 'asj', 'ask', 'asl', 'asn', 'aso', 'asp', 'asq', 'asr', 'ass', 'ast', 'asu', 'asv', 'asw', 'asx', 'asy', 'asz', 'ata', 'atb', 'atc', 'atd', 'ate', 'atg', 'ath', 'ati', 'atj', 'atk', 'atl', 'atm', 'atn', 'ato', 'atp', 'atq', 'atr', 'ats', 'att', 'atu', 'atv', 'atw', 'atx', 'aty', 'atz', 'aua', 'aub', 'auc', 'aud', 'aue', 'auf', 'aug', 'auh', 'aui', 'auj', 'auk', 'aul', 'aum', 'aun', 'auo', 'aup', 'auq', 'aur', 'aus', 'aut', 'auu', 'auw', 'aux', 'auy', 'auz', 'avb', 'avd', 'avi', 'avk', 'avl', 'avm', 'avn', 'avo', 'avs', 'avt', 'avu', 'avv', 'awa', 'awb', 'awc', 'awd', 'awe', 'awg', 'awh', 'awi', 'awk', 'awm', 'awn', 'awo', 'awr', 'aws', 'awt', 'awu', 'awv', 'aww', 'awx', 'awy', 'axb', 'axe', 'axg', 'axk', 'axl', 'axm', 'axx', 'aya', 'ayb', 'ayc', 'ayd', 'aye', 'ayg', 'ayh', 'ayi', 'ayk', 'ayl', 'ayn', 'ayo', 'ayp', 'ayq', 'ayr', 'ays', 'ayt', 'ayu', 'ayx', 'ayy', 'ayz', 'aza', 'azb', 'azc', 'azd', 'azg', 'azj', 'azm', 'azn', 'azo', 'azt', 'azz', 'baa', 'bab', 'bac', 'bad', 'bae', 'baf', 'bag', 'bah', 'bai', 'baj', 'bal', 'ban', 'bao', 'bap', 'bar', 'bas', 'bat', 'bau', 'bav', 'baw', 'bax', 'bay', 'baz', 'bba', 'bbb', 'bbc', 'bbd', 'bbe', 'bbf', 'bbg', 'bbh', 'bbi', 'bbj', 'bbk', 'bbl', 'bbm', 'bbn', 'bbo', 'bbp', 'bbq', 'bbr', 'bbs', 'bbt', 'bbu', 'bbv', 'bbw', 'bbx', 'bby', 'bbz', 'bca', 'bcb', 'bcc', 'bcd', 'bce', 'bcf', 'bcg', 'bch', 'bci', 'bcj', 'bck', 'bcl', 'bcm', 'bcn', 'bco', 'bcp', 'bcq', 'bcr', 'bcs', 'bct', 'bcu', 'bcv', 'bcw', 'bcy', 'bcz', 'bda', 'bdb', 'bdc', 'bdd', 'bde', 'bdf', 'bdg', 'bdh', 'bdi', 'bdj', 'bdk', 'bdl', 'bdm', 'bdn', 'bdo', 'bdp', 'bdq', 'bdr', 'bds', 'bdt', 'bdu', 'bdv', 'bdw', 'bdx', 'bdy', 'bdz', 'bea', 'beb', 'bec', 'bed', 'bee', 'bef', 'beg', 'beh', 'bei', 'bej', 'bek', 'bem', 'beo', 'bep', 'beq', 'ber', 'bes', 'bet', 'beu', 'bev', 'bew', 'bex', 'bey', 'bez', 'bfa', 'bfb', 'bfc', 'bfd', 'bfe', 'bff', 'bfg', 'bfh', 'bfi', 'bfj', 'bfk', 'bfl', 'bfm', 'bfn', 'bfo', 'bfp', 'bfq', 'bfr', 'bfs', 'bft', 'bfu', 'bfw', 'bfx', 'bfy', 'bfz', 'bga', 'bgb', 'bgc', 'bgd', 'bge', 'bgf', 'bgg', 'bgi', 'bgj', 'bgk', 'bgl', 'bgm', 'bgn', 'bgo', 'bgp', 'bgq', 'bgr', 'bgs', 'bgt', 'bgu', 'bgv', 'bgw', 'bgx', 'bgy', 'bgz', 'bha', 'bhb', 'bhc', 'bhd', 'bhe', 'bhf', 'bhg', 'bhh', 'bhi', 'bhj', 'bhk', 'bhl', 'bhm', 'bhn', 'bho', 'bhp', 'bhq', 'bhr', 'bhs', 'bht', 'bhu', 'bhv', 'bhw', 'bhx', 'bhy', 'bhz', 'bia', 'bib', 'bic', 'bid', 'bie', 'bif', 'big', 'bij', 'bik', 'bil', 'bim', 'bin', 'bio', 'bip', 'biq', 'bir', 'bit', 'biu', 'biv', 'biw', 'bix', 'biy', 'biz', 'bja', 'bjb', 'bjc', 'bjd', 'bje', 'bjf', 'bjg', 'bjh', 'bji', 'bjj', 'bjk', 'bjl', 'bjm', 'bjn', 'bjo', 'bjp', 'bjq', 'bjr', 'bjs', 'bjt', 'bju', 'bjv', 'bjw', 'bjx', 'bjy', 'bjz', 'bka', 'bkb', 'bkc', 'bkd', 'bkf', 'bkg', 'bkh', 'bki', 'bkj', 'bkk', 'bkl', 'bkm', 'bkn', 'bko', 'bkp', 'bkq', 'bkr', 'bks', 'bkt', 'bku', 'bkv', 'bkw', 'bkx', 'bky', 'bkz', 'bla', 'blb', 'blc', 'bld', 'ble', 'blf', 'blg', 'blh', 'bli', 'blj', 'blk', 'bll', 'blm', 'bln', 'blo', 'blp', 'blq', 'blr', 'bls', 'blt', 'blv', 'blw', 'blx', 'bly', 'blz', 'bma', 'bmb', 'bmc', 'bmd', 'bme', 'bmf', 'bmg', 'bmh', 'bmi', 'bmj', 'bmk', 'bml', 'bmm', 'bmn', 'bmo', 'bmp', 'bmq', 'bmr', 'bms', 'bmt', 'bmu', 'bmv', 'bmw', 'bmx', 'bmy', 'bmz', 'bna', 'bnb', 'bnc', 'bnd', 'bne', 'bnf', 'bng', 'bni', 'bnj', 'bnk', 'bnl', 'bnm', 'bnn', 'bno', 'bnp', 'bnq', 'bnr', 'bns', 'bnt', 'bnu', 'bnv', 'bnw', 'bnx', 'bny', 'bnz', 'boa', 'bob', 'boe', 'bof', 'bog', 'boh', 'boi', 'boj', 'bok', 'bol', 'bom', 'bon', 'boo', 'bop', 'boq', 'bor', 'bot', 'bou', 'bov', 'bow', 'box', 'boy', 'boz', 'bpa', 'bpb', 'bpd', 'bpg', 'bph', 'bpi', 'bpj', 'bpk', 'bpl', 'bpm', 'bpn', 'bpo', 'bpp', 'bpq', 'bpr', 'bps', 'bpt', 'bpu', 'bpv', 'bpw', 'bpx', 'bpy', 'bpz', 'bqa', 'bqb', 'bqc', 'bqd', 'bqf', 'bqg', 'bqh', 'bqi', 'bqj', 'bqk', 'bql', 'bqm', 'bqn', 'bqo', 'bqp', 'bqq', 'bqr', 'bqs', 'bqt', 'bqu', 'bqv', 'bqw', 'bqx', 'bqy', 'bqz', 'bra', 'brb', 'brc', 'brd', 'brf', 'brg', 'brh', 'bri', 'brj', 'brk', 'brl', 'brm', 'brn', 'bro', 'brp', 'brq', 'brr', 'brs', 'brt', 'bru', 'brv', 'brw', 'brx', 'bry', 'brz', 'bsa', 'bsb', 'bsc', 'bse', 'bsf', 'bsg', 'bsh', 'bsi', 'bsj', 'bsk', 'bsl', 'bsm', 'bsn', 'bso', 'bsp', 'bsq', 'bsr', 'bss', 'bst', 'bsu', 'bsv', 'bsw', 'bsx', 'bsy', 'bta', 'btb', 'btc', 'btd', 'bte', 'btf', 'btg', 'bth', 'bti', 'btj', 'btk', 'btl', 'btm', 'btn', 'bto', 'btp', 'btq', 'btr', 'bts', 'btt', 'btu', 'btv', 'btw', 'btx', 'bty', 'btz', 'bua', 'bub', 'buc', 'bud', 'bue', 'buf', 'bug', 'buh', 'bui', 'buj', 'buk', 'bum', 'bun', 'buo', 'bup', 'buq', 'bus', 'but', 'buu', 'buv', 'buw', 'bux', 'buy', 'buz', 'bva', 'bvb', 'bvc', 'bvd', 'bve', 'bvf', 'bvg', 'bvh', 'bvi', 'bvj', 'bvk', 'bvl', 'bvm', 'bvn', 'bvo', 'bvp', 'bvq', 'bvr', 'bvt', 'bvu', 'bvv', 'bvw', 'bvx', 'bvy', 'bvz', 'bwa', 'bwb', 'bwc', 'bwd', 'bwe', 'bwf', 'bwg', 'bwh', 'bwi', 'bwj', 'bwk', 'bwl', 'bwm', 'bwn', 'bwo', 'bwp', 'bwq', 'bwr', 'bws', 'bwt', 'bwu', 'bww', 'bwx', 'bwy', 'bwz', 'bxa', 'bxb', 'bxc', 'bxd', 'bxe', 'bxf', 'bxg', 'bxh', 'bxi', 'bxj', 'bxk', 'bxl', 'bxm', 'bxn', 'bxo', 'bxp', 'bxq', 'bxr', 'bxs', 'bxu', 'bxv', 'bxw', 'bxx', 'bxz', 'bya', 'byb', 'byc', 'byd', 'bye', 'byf', 'byg', 'byh', 'byi', 'byj', 'byk', 'byl', 'bym', 'byn', 'byo', 'byp', 'byq', 'byr', 'bys', 'byt', 'byv', 'byw', 'byx', 'byy', 'byz', 'bza', 'bzb', 'bzc', 'bzd', 'bze', 'bzf', 'bzg', 'bzh', 'bzi', 'bzj', 'bzk', 'bzl', 'bzm', 'bzn', 'bzo', 'bzp', 'bzq', 'bzr', 'bzs', 'bzt', 'bzu', 'bzv', 'bzw', 'bzx', 'bzy', 'bzz', 'caa', 'cab', 'cac', 'cad', 'cae', 'caf', 'cag', 'cah', 'cai', 'caj', 'cak', 'cal', 'cam', 'can', 'cao', 'cap', 'caq', 'car', 'cas', 'cau', 'cav', 'caw', 'cax', 'cay', 'caz', 'cba', 'cbb', 'cbc', 'cbd', 'cbe', 'cbg', 'cbh', 'cbi', 'cbj', 'cbk', 'cbl', 'cbn', 'cbo', 'cbq', 'cbr', 'cbs', 'cbt', 'cbu', 'cbv', 'cbw', 'cby', 'cca', 'ccc', 'ccd', 'cce', 'ccg', 'cch', 'ccj', 'ccl', 'ccm', 'ccn', 'cco', 'ccp', 'ccq', 'ccr', 'ccs', 'cda', 'cdc', 'cdd', 'cde', 'cdf', 'cdg', 'cdh', 'cdi', 'cdj', 'cdm', 'cdn', 'cdo', 'cdr', 'cds', 'cdy', 'cdz', 'cea', 'ceb', 'ceg', 'cek', 'cel', 'cen', 'cet', 'cfa', 'cfd', 'cfg', 'cfm', 'cga', 'cgc', 'cgg', 'cgk', 'chb', 'chc', 'chd', 'chf', 'chg', 'chh', 'chj', 'chk', 'chl', 'chm', 'chn', 'cho', 'chp', 'chq', 'chr', 'cht', 'chw', 'chx', 'chy', 'chz', 'cia', 'cib', 'cic', 'cid', 'cie', 'cih', 'cik', 'cim', 'cin', 'cip', 'cir', 'ciw', 'ciy', 'cja', 'cje', 'cjh', 'cji', 'cjk', 'cjm', 'cjn', 'cjo', 'cjp', 'cjr', 'cjs', 'cjv', 'cjy', 'cka', 'ckb', 'ckh', 'ckl', 'ckn', 'cko', 'ckq', 'ckr', 'cks', 'ckt', 'cku', 'ckv', 'ckx', 'cky', 'ckz', 'cla', 'clc', 'cld', 'cle', 'clh', 'cli', 'clj', 'clk', 'cll', 'clm', 'clo', 'clt', 'clu', 'clw', 'cly', 'cma', 'cmc', 'cme', 'cmg', 'cmi', 'cmk', 'cml', 'cmm', 'cmn', 'cmo', 'cmr', 'cms', 'cmt', 'cna', 'cnb', 'cnc', 'cng', 'cnh', 'cni', 'cnk', 'cnl', 'cno', 'cns', 'cnt', 'cnu', 'cnw', 'cnx', 'coa', 'cob', 'coc', 'cod', 'coe', 'cof', 'cog', 'coh', 'coj', 'cok', 'col', 'com', 'con', 'coo', 'cop', 'coq', 'cot', 'cou', 'cov', 'cow', 'cox', 'coy', 'coz', 'cpa', 'cpb', 'cpc', 'cpe', 'cpf', 'cpg', 'cpi', 'cpn', 'cpo', 'cpp', 'cps', 'cpu', 'cpx', 'cpy', 'cqd', 'cqu', 'cra', 'crb', 'crc', 'crd', 'crf', 'crg', 'crh', 'cri', 'crj', 'crk', 'crl', 'crm', 'crn', 'cro', 'crp', 'crq', 'crr', 'crs', 'crt', 'crv', 'crw', 'crx', 'cry', 'crz', 'csa', 'csb', 'csc', 'csd', 'cse', 'csf', 'csg', 'csh', 'csi', 'csj', 'csk', 'csl', 'csm', 'csn', 'cso', 'csq', 'csr', 'css', 'cst', 'csu', 'csv', 'csw', 'csy', 'csz', 'cta', 'ctc', 'ctd', 'cte', 'ctg', 'cth', 'ctl', 'ctm', 'ctn', 'cto', 'ctp', 'cts', 'ctt', 'ctu', 'ctz', 'cua', 'cub', 'cuc', 'cug', 'cuh', 'cui', 'cuj', 'cuk', 'cul', 'cum', 'cuo', 'cup', 'cuq', 'cur', 'cus', 'cut', 'cuu', 'cuv', 'cuw', 'cux', 'cvg', 'cvn', 'cwa', 'cwb', 'cwd', 'cwe', 'cwg', 'cwt', 'cya', 'cyb', 'cyo', 'czh', 'czk', 'czn', 'czo', 'czt', 'daa', 'dac', 'dad', 'dae', 'daf', 'dag', 'dah', 'dai', 'daj', 'dak', 'dal', 'dam', 'dao', 'dap', 'daq', 'dar', 'das', 'dau', 'dav', 'daw', 'dax', 'day', 'daz', 'dba', 'dbb', 'dbd', 'dbe', 'dbf', 'dbg', 'dbi', 'dbj', 'dbl', 'dbm', 'dbn', 'dbo', 'dbp', 'dbq', 'dbr', 'dbt', 'dbu', 'dbv', 'dbw', 'dby', 'dcc', 'dcr', 'dda', 'ddd', 'dde', 'ddg', 'ddi', 'ddj', 'ddn', 'ddo', 'ddr', 'dds', 'ddw', 'dec', 'ded', 'dee', 'def', 'deg', 'deh', 'dei', 'dek', 'del', 'dem', 'den', 'dep', 'deq', 'der', 'des', 'dev', 'dez', 'dga', 'dgb', 'dgc', 'dgd', 'dge', 'dgg', 'dgh', 'dgi', 'dgk', 'dgl', 'dgn', 'dgo', 'dgr', 'dgs', 'dgt', 'dgu', 'dgw', 'dgx', 'dgz', 'dha', 'dhd', 'dhg', 'dhi', 'dhl', 'dhm', 'dhn', 'dho', 'dhr', 'dhs', 'dhu', 'dhv', 'dhw', 'dhx', 'dia', 'dib', 'dic', 'did', 'dif', 'dig', 'dih', 'dii', 'dij', 'dik', 'dil', 'dim', 'din', 'dio', 'dip', 'diq', 'dir', 'dis', 'dit', 'diu', 'diw', 'dix', 'diy', 'diz', 'dja', 'djb', 'djc', 'djd', 'dje', 'djf', 'dji', 'djj', 'djk', 'djl', 'djm', 'djn', 'djo', 'djr', 'dju', 'djw', 'dka', 'dkk', 'dkl', 'dkr', 'dks', 'dkx', 'dlg', 'dlk', 'dlm', 'dln', 'dma', 'dmb', 'dmc', 'dmd', 'dme', 'dmg', 'dmk', 'dml', 'dmm', 'dmn', 'dmo', 'dmr', 'dms', 'dmu', 'dmv', 'dmw', 'dmx', 'dmy', 'dna', 'dnd', 'dne', 'dng', 'dni', 'dnj', 'dnk', 'dnn', 'dnr', 'dnt', 'dnu', 'dnv', 'dnw', 'dny', 'doa', 'dob', 'doc', 'doe', 'dof', 'doh', 'doi', 'dok', 'dol', 'don', 'doo', 'dop', 'doq', 'dor', 'dos', 'dot', 'dov', 'dow', 'dox', 'doy', 'doz', 'dpp', 'dra', 'drb', 'drc', 'drd', 'dre', 'drg', 'drh', 'dri', 'drl', 'drn', 'dro', 'drq', 'drr', 'drs', 'drt', 'dru', 'drw', 'dry', 'dsb', 'dse', 'dsh', 'dsi', 'dsl', 'dsn', 'dso', 'dsq', 'dta', 'dtb', 'dtd', 'dth', 'dti', 'dtk', 'dtm', 'dtn', 'dto', 'dtp', 'dtr', 'dts', 'dtt', 'dtu', 'dty', 'dua', 'dub', 'duc', 'dud', 'due', 'duf', 'dug', 'duh', 'dui', 'duj', 'duk', 'dul', 'dum', 'dun', 'duo', 'dup', 'duq', 'dur', 'dus', 'duu', 'duv', 'duw', 'dux', 'duy', 'duz', 'dva', 'dwa', 'dwl', 'dwr', 'dws', 'dwu', 'dww', 'dwy', 'dya', 'dyb', 'dyd', 'dyg', 'dyi', 'dym', 'dyn', 'dyo', 'dyu', 'dyy', 'dza', 'dzd', 'dze', 'dzg', 'dzl', 'dzn', 'eaa', 'ebg', 'ebk', 'ebo', 'ebr', 'ebu', 'ecr', 'ecs', 'ecy', 'eee', 'efa', 'efe', 'efi', 'ega', 'egl', 'ego', 'egx', 'egy', 'ehu', 'eip', 'eit', 'eiv', 'eja', 'eka', 'ekc', 'eke', 'ekg', 'eki', 'ekk', 'ekl', 'ekm', 'eko', 'ekp', 'ekr', 'eky', 'ele', 'elh', 'eli', 'elk', 'elm', 'elo', 'elp', 'elu', 'elx', 'ema', 'emb', 'eme', 'emg', 'emi', 'emk', 'emm', 'emn', 'emo', 'emp', 'ems', 'emu', 'emw', 'emx', 'emy', 'ena', 'enb', 'enc', 'end', 'enf', 'enh', 'enl', 'enm', 'enn', 'eno', 'enq', 'enr', 'enu', 'env', 'enw', 'enx', 'eot', 'epi', 'era', 'erg', 'erh', 'eri', 'erk', 'ero', 'err', 'ers', 'ert', 'erw', 'ese', 'esg', 'esh', 'esi', 'esk', 'esl', 'esm', 'esn', 'eso', 'esq', 'ess', 'esu', 'esx', 'esy', 'etb', 'etc', 'eth', 'etn', 'eto', 'etr', 'ets', 'ett', 'etu', 'etx', 'etz', 'euq', 'eve', 'evh', 'evn', 'ewo', 'ext', 'eya', 'eyo', 'eza', 'eze', 'faa', 'fab', 'fad', 'faf', 'fag', 'fah', 'fai', 'faj', 'fak', 'fal', 'fam', 'fan', 'fap', 'far', 'fat', 'fau', 'fax', 'fay', 'faz', 'fbl', 'fcs', 'fer', 'ffi', 'ffm', 'fgr', 'fia', 'fie', 'fil', 'fip', 'fir', 'fit', 'fiu', 'fiw', 'fkk', 'fkv', 'fla', 'flh', 'fli', 'fll', 'fln', 'flr', 'fly', 'fmp', 'fmu', 'fnb', 'fng', 'fni', 'fod', 'foi', 'fom', 'fon', 'for', 'fos', 'fox', 'fpe', 'fqs', 'frc', 'frd', 'frk', 'frm', 'fro', 'frp', 'frq', 'frr', 'frs', 'frt', 'fse', 'fsl', 'fss', 'fub', 'fuc', 'fud', 'fue', 'fuf', 'fuh', 'fui', 'fuj', 'fum', 'fun', 'fuq', 'fur', 'fut', 'fuu', 'fuv', 'fuy', 'fvr', 'fwa', 'fwe', 'gaa', 'gab', 'gac', 'gad', 'gae', 'gaf', 'gag', 'gah', 'gai', 'gaj', 'gak', 'gal', 'gam', 'gan', 'gao', 'gap', 'gaq', 'gar', 'gas', 'gat', 'gau', 'gav', 'gaw', 'gax', 'gay', 'gaz', 'gba', 'gbb', 'gbc', 'gbd', 'gbe', 'gbf', 'gbg', 'gbh', 'gbi', 'gbj', 'gbk', 'gbl', 'gbm', 'gbn', 'gbo', 'gbp', 'gbq', 'gbr', 'gbs', 'gbu', 'gbv', 'gbw', 'gbx', 'gby', 'gbz', 'gcc', 'gcd', 'gce', 'gcf', 'gcl', 'gcn', 'gcr', 'gct', 'gda', 'gdb', 'gdc', 'gdd', 'gde', 'gdf', 'gdg', 'gdh', 'gdi', 'gdj', 'gdk', 'gdl', 'gdm', 'gdn', 'gdo', 'gdq', 'gdr', 'gds', 'gdt', 'gdu', 'gdx', 'gea', 'geb', 'gec', 'ged', 'geg', 'geh', 'gei', 'gej', 'gek', 'gel', 'gem', 'geq', 'ges', 'gev', 'gew', 'gex', 'gey', 'gez', 'gfk', 'gft', 'gfx', 'gga', 'ggb', 'ggd', 'gge', 'ggg', 'ggk', 'ggl', 'ggn', 'ggo', 'ggr', 'ggt', 'ggu', 'ggw', 'gha', 'ghc', 'ghe', 'ghh', 'ghk', 'ghl', 'ghn', 'gho', 'ghr', 'ghs', 'ght', 'gia', 'gib', 'gic', 'gid', 'gig', 'gih', 'gil', 'gim', 'gin', 'gio', 'gip', 'giq', 'gir', 'gis', 'git', 'giu', 'giw', 'gix', 'giy', 'giz', 'gji', 'gjk', 'gjm', 'gjn', 'gjr', 'gju', 'gka', 'gke', 'gkn', 'gko', 'gkp', 'gku', 'glc', 'gld', 'glh', 'gli', 'glj', 'glk', 'gll', 'glo', 'glr', 'glu', 'glw', 'gly', 'gma', 'gmb', 'gmd', 'gme', 'gmg', 'gmh', 'gml', 'gmm', 'gmn', 'gmq', 'gmu', 'gmv', 'gmw', 'gmx', 'gmy', 'gmz', 'gna', 'gnb', 'gnc', 'gnd', 'gne', 'gng', 'gnh', 'gni', 'gnk', 'gnl', 'gnm', 'gnn', 'gno', 'gnq', 'gnr', 'gnt', 'gnu', 'gnw', 'gnz', 'goa', 'gob', 'goc', 'god', 'goe', 'gof', 'gog', 'goh', 'goi', 'goj', 'gok', 'gol', 'gom', 'gon', 'goo', 'gop', 'goq', 'gor', 'gos', 'got', 'gou', 'gow', 'gox', 'goy', 'goz', 'gpa', 'gpe', 'gpn', 'gqa', 'gqi', 'gqn', 'gqr', 'gqu', 'gra', 'grb', 'grc', 'grd', 'grg', 'grh', 'gri', 'grj', 'grk', 'grm', 'gro', 'grq', 'grr', 'grs', 'grt', 'gru', 'grv', 'grw', 'grx', 'gry', 'grz', 'gse', 'gsg', 'gsl', 'gsm', 'gsn', 'gso', 'gsp', 'gss', 'gsw', 'gta', 'gti', 'gtu', 'gua', 'gub', 'guc', 'gud', 'gue', 'guf', 'gug', 'guh', 'gui', 'guk', 'gul', 'gum', 'gun', 'guo', 'gup', 'guq', 'gur', 'gus', 'gut', 'guu', 'guv', 'guw', 'gux', 'guz', 'gva', 'gvc', 'gve', 'gvf', 'gvj', 'gvl', 'gvm', 'gvn', 'gvo', 'gvp', 'gvr', 'gvs', 'gvy', 'gwa', 'gwb', 'gwc', 'gwd', 'gwe', 'gwf', 'gwg', 'gwi', 'gwj', 'gwm', 'gwn', 'gwr', 'gwt', 'gwu', 'gww', 'gwx', 'gxx', 'gya', 'gyb', 'gyd', 'gye', 'gyf', 'gyg', 'gyi', 'gyl', 'gym', 'gyn', 'gyr', 'gyy', 'gza', 'gzi', 'gzn', 'haa', 'hab', 'hac', 'had', 'hae', 'haf', 'hag', 'hah', 'hai', 'haj', 'hak', 'hal', 'ham', 'han', 'hao', 'hap', 'haq', 'har', 'has', 'hav', 'haw', 'hax', 'hay', 'haz', 'hba', 'hbb', 'hbn', 'hbo', 'hbu', 'hca', 'hch', 'hdn', 'hds', 'hdy', 'hea', 'hed', 'heg', 'heh', 'hei', 'hem', 'hgm', 'hgw', 'hhi', 'hhr', 'hhy', 'hia', 'hib', 'hid', 'hif', 'hig', 'hih', 'hii', 'hij', 'hik', 'hil', 'him', 'hio', 'hir', 'hit', 'hiw', 'hix', 'hji', 'hka', 'hke', 'hkk', 'hks', 'hla', 'hlb', 'hld', 'hle', 'hlt', 'hlu', 'hma', 'hmb', 'hmc', 'hmd', 'hme', 'hmf', 'hmg', 'hmh', 'hmi', 'hmj', 'hmk', 'hml', 'hmm', 'hmn', 'hmp', 'hmq', 'hmr', 'hms', 'hmt', 'hmu', 'hmv', 'hmw', 'hmx', 'hmy', 'hmz', 'hna', 'hnd', 'hne', 'hnh', 'hni', 'hnj', 'hnn', 'hno', 'hns', 'hnu', 'hoa', 'hob', 'hoc', 'hod', 'hoe', 'hoh', 'hoi', 'hoj', 'hok', 'hol', 'hom', 'hoo', 'hop', 'hor', 'hos', 'hot', 'hov', 'how', 'hoy', 'hoz', 'hpo', 'hps', 'hra', 'hrc', 'hre', 'hrk', 'hrm', 'hro', 'hrp', 'hrr', 'hrt', 'hru', 'hrw', 'hrx', 'hrz', 'hsb', 'hsh', 'hsl', 'hsn', 'hss', 'hti', 'hto', 'hts', 'htu', 'htx', 'hub', 'huc', 'hud', 'hue', 'huf', 'hug', 'huh', 'hui', 'huj', 'huk', 'hul', 'hum', 'huo', 'hup', 'huq', 'hur', 'hus', 'hut', 'huu', 'huv', 'huw', 'hux', 'huy', 'huz', 'hvc', 'hve', 'hvk', 'hvn', 'hvv', 'hwa', 'hwc', 'hwo', 'hya', 'hyx', 'iai', 'ian', 'iap', 'iar', 'iba', 'ibb', 'ibd', 'ibe', 'ibg', 'ibi', 'ibl', 'ibm', 'ibn', 'ibr', 'ibu', 'iby', 'ica', 'ich', 'icl', 'icr', 'ida', 'idb', 'idc', 'idd', 'ide', 'idi', 'idr', 'ids', 'idt', 'idu', 'ifa', 'ifb', 'ife', 'iff', 'ifk', 'ifm', 'ifu', 'ify', 'igb', 'ige', 'igg', 'igl', 'igm', 'ign', 'igo', 'igs', 'igw', 'ihb', 'ihi', 'ihp', 'ihw', 'iin', 'iir', 'ijc', 'ije', 'ijj', 'ijn', 'ijo', 'ijs', 'ike', 'iki', 'ikk', 'ikl', 'iko', 'ikp', 'ikr', 'iks', 'ikt', 'ikv', 'ikw', 'ikx', 'ikz', 'ila', 'ilb', 'ilg', 'ili', 'ilk', 'ill', 'ilm', 'ilo', 'ilp', 'ils', 'ilu', 'ilv', 'ilw', 'ima', 'ime', 'imi', 'iml', 'imn', 'imo', 'imr', 'ims', 'imy', 'inb', 'inc', 'ine', 'ing', 'inh', 'inj', 'inl', 'inm', 'inn', 'ino', 'inp', 'ins', 'int', 'inz', 'ior', 'iou', 'iow', 'ipi', 'ipo', 'iqu', 'iqw', 'ira', 'ire', 'irh', 'iri', 'irk', 'irn', 'iro', 'irr', 'iru', 'irx', 'iry', 'isa', 'isc', 'isd', 'ise', 'isg', 'ish', 'isi', 'isk', 'ism', 'isn', 'iso', 'isr', 'ist', 'isu', 'itb', 'itc', 'itd', 'ite', 'iti', 'itk', 'itl', 'itm', 'ito', 'itr', 'its', 'itt', 'itv', 'itw', 'itx', 'ity', 'itz', 'ium', 'ivb', 'ivv', 'iwk', 'iwm', 'iwo', 'iws', 'ixc', 'ixl', 'iya', 'iyo', 'iyx', 'izh', 'izi', 'izr', 'izz', 'jaa', 'jab', 'jac', 'jad', 'jae', 'jaf', 'jah', 'jaj', 'jak', 'jal', 'jam', 'jan', 'jao', 'jaq', 'jar', 'jas', 'jat', 'jau', 'jax', 'jay', 'jaz', 'jbe', 'jbi', 'jbj', 'jbk', 'jbn', 'jbo', 'jbr', 'jbt', 'jbu', 'jbw', 'jcs', 'jct', 'jda', 'jdg', 'jdt', 'jeb', 'jee', 'jeg', 'jeh', 'jei', 'jek', 'jel', 'jen', 'jer', 'jet', 'jeu', 'jgb', 'jge', 'jgk', 'jgo', 'jhi', 'jhs', 'jia', 'jib', 'jic', 'jid', 'jie', 'jig', 'jih', 'jii', 'jil', 'jim', 'jio', 'jiq', 'jit', 'jiu', 'jiv', 'jiy', 'jje', 'jjr', 'jka', 'jkm', 'jko', 'jkp', 'jkr', 'jku', 'jle', 'jls', 'jma', 'jmb', 'jmc', 'jmd', 'jmi', 'jml', 'jmn', 'jmr', 'jms', 'jmw', 'jmx', 'jna', 'jnd', 'jng', 'jni', 'jnj', 'jnl', 'jns', 'job', 'jod', 'jog', 'jor', 'jos', 'jow', 'jpa', 'jpr', 'jpx', 'jqr', 'jra', 'jrb', 'jrr', 'jrt', 'jru', 'jsl', 'jua', 'jub', 'juc', 'jud', 'juh', 'jui', 'juk', 'jul', 'jum', 'jun', 'juo', 'jup', 'jur', 'jus', 'jut', 'juu', 'juw', 'juy', 'jvd', 'jvn', 'jwi', 'jya', 'jye', 'jyy', 'kaa', 'kab', 'kac', 'kad', 'kae', 'kaf', 'kag', 'kah', 'kai', 'kaj', 'kak', 'kam', 'kao', 'kap', 'kaq', 'kar', 'kav', 'kaw', 'kax', 'kay', 'kba', 'kbb', 'kbc', 'kbd', 'kbe', 'kbf', 'kbg', 'kbh', 'kbi', 'kbj', 'kbk', 'kbl', 'kbm', 'kbn', 'kbo', 'kbp', 'kbq', 'kbr', 'kbs', 'kbt', 'kbu', 'kbv', 'kbw', 'kbx', 'kby', 'kbz', 'kca', 'kcb', 'kcc', 'kcd', 'kce', 'kcf', 'kcg', 'kch', 'kci', 'kcj', 'kck', 'kcl', 'kcm', 'kcn', 'kco', 'kcp', 'kcq', 'kcr', 'kcs', 'kct', 'kcu', 'kcv', 'kcw', 'kcx', 'kcy', 'kcz', 'kda', 'kdc', 'kdd', 'kde', 'kdf', 'kdg', 'kdh', 'kdi', 'kdj', 'kdk', 'kdl', 'kdm', 'kdn', 'kdo', 'kdp', 'kdq', 'kdr', 'kdt', 'kdu', 'kdv', 'kdw', 'kdx', 'kdy', 'kdz', 'kea', 'keb', 'kec', 'ked', 'kee', 'kef', 'keg', 'keh', 'kei', 'kej', 'kek', 'kel', 'kem', 'ken', 'keo', 'kep', 'keq', 'ker', 'kes', 'ket', 'keu', 'kev', 'kew', 'kex', 'key', 'kez', 'kfa', 'kfb', 'kfc', 'kfd', 'kfe', 'kff', 'kfg', 'kfh', 'kfi', 'kfj', 'kfk', 'kfl', 'kfm', 'kfn', 'kfo', 'kfp', 'kfq', 'kfr', 'kfs', 'kft', 'kfu', 'kfv', 'kfw', 'kfx', 'kfy', 'kfz', 'kga', 'kgb', 'kgc', 'kgd', 'kge', 'kgf', 'kgg', 'kgh', 'kgi', 'kgj', 'kgk', 'kgl', 'kgm', 'kgn', 'kgo', 'kgp', 'kgq', 'kgr', 'kgs', 'kgt', 'kgu', 'kgv', 'kgw', 'kgx', 'kgy', 'kha', 'khb', 'khc', 'khd', 'khe', 'khf', 'khg', 'khh', 'khi', 'khj', 'khk', 'khl', 'khn', 'kho', 'khp', 'khq', 'khr', 'khs', 'kht', 'khu', 'khv', 'khw', 'khx', 'khy', 'khz', 'kia', 'kib', 'kic', 'kid', 'kie', 'kif', 'kig', 'kih', 'kii', 'kij', 'kil', 'kim', 'kio', 'kip', 'kiq', 'kis', 'kit', 'kiu', 'kiv', 'kiw', 'kix', 'kiy', 'kiz', 'kja', 'kjb', 'kjc', 'kjd', 'kje', 'kjf', 'kjg', 'kjh', 'kji', 'kjj', 'kjk', 'kjl', 'kjm', 'kjn', 'kjo', 'kjp', 'kjq', 'kjr', 'kjs', 'kjt', 'kju', 'kjv', 'kjx', 'kjy', 'kjz', 'kka', 'kkb', 'kkc', 'kkd', 'kke', 'kkf', 'kkg', 'kkh', 'kki', 'kkj', 'kkk', 'kkl', 'kkm', 'kkn', 'kko', 'kkp', 'kkq', 'kkr', 'kks', 'kkt', 'kku', 'kkv', 'kkw', 'kkx', 'kky', 'kkz', 'kla', 'klb', 'klc', 'kld', 'kle', 'klf', 'klg', 'klh', 'kli', 'klj', 'klk', 'kll', 'klm', 'kln', 'klo', 'klp', 'klq', 'klr', 'kls', 'klt', 'klu', 'klv', 'klw', 'klx', 'kly', 'klz', 'kma', 'kmb', 'kmc', 'kmd', 'kme', 'kmf', 'kmg', 'kmh', 'kmi', 'kmj', 'kmk', 'kml', 'kmm', 'kmn', 'kmo', 'kmp', 'kmq', 'kmr', 'kms', 'kmt', 'kmu', 'kmv', 'kmw', 'kmx', 'kmy', 'kmz', 'kna', 'knb', 'knc', 'knd', 'kne', 'knf', 'kng', 'kni', 'knj', 'knk', 'knl', 'knm', 'knn', 'kno', 'knp', 'knq', 'knr', 'kns', 'knt', 'knu', 'knv', 'knw', 'knx', 'kny', 'knz', 'koa', 'koc', 'kod', 'koe', 'kof', 'kog', 'koh', 'koi', 'koj', 'kok', 'kol', 'koo', 'kop', 'koq', 'kos', 'kot', 'kou', 'kov', 'kow', 'kox', 'koy', 'koz', 'kpa', 'kpb', 'kpc', 'kpd', 'kpe', 'kpf', 'kpg', 'kph', 'kpi', 'kpj', 'kpk', 'kpl', 'kpm', 'kpn', 'kpo', 'kpp', 'kpq', 'kpr', 'kps', 'kpt', 'kpu', 'kpv', 'kpw', 'kpx', 'kpy', 'kpz', 'kqa', 'kqb', 'kqc', 'kqd', 'kqe', 'kqf', 'kqg', 'kqh', 'kqi', 'kqj', 'kqk', 'kql', 'kqm', 'kqn', 'kqo', 'kqp', 'kqq', 'kqr', 'kqs', 'kqt', 'kqu', 'kqv', 'kqw', 'kqx', 'kqy', 'kqz', 'kra', 'krb', 'krc', 'krd', 'kre', 'krf', 'krh', 'kri', 'krj', 'krk', 'krl', 'krm', 'krn', 'kro', 'krp', 'krr', 'krs', 'krt', 'kru', 'krv', 'krw', 'krx', 'kry', 'krz', 'ksa', 'ksb', 'ksc', 'ksd', 'kse', 'ksf', 'ksg', 'ksh', 'ksi', 'ksj', 'ksk', 'ksl', 'ksm', 'ksn', 'kso', 'ksp', 'ksq', 'ksr', 'kss', 'kst', 'ksu', 'ksv', 'ksw', 'ksx', 'ksy', 'ksz', 'kta', 'ktb', 'ktc', 'ktd', 'kte', 'ktf', 'ktg', 'kth', 'kti', 'ktj', 'ktk', 'ktl', 'ktm', 'ktn', 'kto', 'ktp', 'ktq', 'ktr', 'kts', 'ktt', 'ktu', 'ktv', 'ktw', 'ktx', 'kty', 'ktz', 'kub', 'kuc', 'kud', 'kue', 'kuf', 'kug', 'kuh', 'kui', 'kuj', 'kuk', 'kul', 'kum', 'kun', 'kuo', 'kup', 'kuq', 'kus', 'kut', 'kuu', 'kuv', 'kuw', 'kux', 'kuy', 'kuz', 'kva', 'kvb', 'kvc', 'kvd', 'kve', 'kvf', 'kvg', 'kvh', 'kvi', 'kvj', 'kvk', 'kvl', 'kvm', 'kvn', 'kvo', 'kvp', 'kvq', 'kvr', 'kvs', 'kvt', 'kvu', 'kvv', 'kvw', 'kvx', 'kvy', 'kvz', 'kwa', 'kwb', 'kwc', 'kwd', 'kwe', 'kwf', 'kwg', 'kwh', 'kwi', 'kwj', 'kwk', 'kwl', 'kwm', 'kwn', 'kwo', 'kwp', 'kwq', 'kwr', 'kws', 'kwt', 'kwu', 'kwv', 'kww', 'kwx', 'kwy', 'kwz', 'kxa', 'kxb', 'kxc', 'kxd', 'kxe', 'kxf', 'kxh', 'kxi', 'kxj', 'kxk', 'kxl', 'kxm', 'kxn', 'kxo', 'kxp', 'kxq', 'kxr', 'kxs', 'kxt', 'kxu', 'kxv', 'kxw', 'kxx', 'kxy', 'kxz', 'kya', 'kyb', 'kyc', 'kyd', 'kye', 'kyf', 'kyg', 'kyh', 'kyi', 'kyj', 'kyk', 'kyl', 'kym', 'kyn', 'kyo', 'kyp', 'kyq', 'kyr', 'kys', 'kyt', 'kyu', 'kyv', 'kyw', 'kyx', 'kyy', 'kyz', 'kza', 'kzb', 'kzc', 'kzd', 'kze', 'kzf', 'kzg', 'kzh', 'kzi', 'kzj', 'kzk', 'kzl', 'kzm', 'kzn', 'kzo', 'kzp', 'kzq', 'kzr', 'kzs', 'kzt', 'kzu', 'kzv', 'kzw', 'kzx', 'kzy', 'kzz', 'laa', 'lab', 'lac', 'lad', 'lae', 'laf', 'lag', 'lah', 'lai', 'laj', 'lak', 'lal', 'lam', 'lan', 'lap', 'laq', 'lar', 'las', 'lau', 'law', 'lax', 'lay', 'laz', 'lba', 'lbb', 'lbc', 'lbe', 'lbf', 'lbg', 'lbi', 'lbj', 'lbk', 'lbl', 'lbm', 'lbn', 'lbo', 'lbq', 'lbr', 'lbs', 'lbt', 'lbu', 'lbv', 'lbw', 'lbx', 'lby', 'lbz', 'lcc', 'lcd', 'lce', 'lcf', 'lch', 'lcl', 'lcm', 'lcp', 'lcq', 'lcs', 'lda', 'ldb', 'ldd', 'ldg', 'ldh', 'ldi', 'ldj', 'ldk', 'ldl', 'ldm', 'ldn', 'ldo', 'ldp', 'ldq', 'lea', 'leb', 'lec', 'led', 'lee', 'lef', 'leg', 'leh', 'lei', 'lej', 'lek', 'lel', 'lem', 'len', 'leo', 'lep', 'leq', 'ler', 'les', 'let', 'leu', 'lev', 'lew', 'lex', 'ley', 'lez', 'lfa', 'lfn', 'lga', 'lgb', 'lgg', 'lgh', 'lgi', 'lgk', 'lgl', 'lgm', 'lgn', 'lgq', 'lgr', 'lgt', 'lgu', 'lgz', 'lha', 'lhh', 'lhi', 'lhl', 'lhm', 'lhn', 'lhp', 'lhs', 'lht', 'lhu', 'lia', 'lib', 'lic', 'lid', 'lie', 'lif', 'lig', 'lih', 'lii', 'lij', 'lik', 'lil', 'lio', 'lip', 'liq', 'lir', 'lis', 'liu', 'liv', 'liw', 'lix', 'liy', 'liz', 'lja', 'lje', 'lji', 'ljl', 'ljp', 'ljw', 'ljx', 'lka', 'lkb', 'lkc', 'lkd', 'lke', 'lkh', 'lki', 'lkj', 'lkl', 'lkm', 'lkn', 'lko', 'lkr', 'lks', 'lkt', 'lku', 'lky', 'lla', 'llb', 'llc', 'lld', 'lle', 'llf', 'llg', 'llh', 'lli', 'llj', 'llk', 'lll', 'llm', 'lln', 'llo', 'llp', 'llq', 'lls', 'llu', 'llx', 'lma', 'lmb', 'lmc', 'lmd', 'lme', 'lmf', 'lmg', 'lmh', 'lmi', 'lmj', 'lmk', 'lml', 'lmm', 'lmn', 'lmo', 'lmp', 'lmq', 'lmr', 'lmu', 'lmv', 'lmw', 'lmx', 'lmy', 'lmz', 'lna', 'lnb', 'lnd', 'lng', 'lnh', 'lni', 'lnj', 'lnl', 'lnm', 'lnn', 'lno', 'lns', 'lnu', 'lnw', 'lnz', 'loa', 'lob', 'loc', 'loe', 'lof', 'log', 'loh', 'loi', 'loj', 'lok', 'lol', 'lom', 'lon', 'loo', 'lop', 'loq', 'lor', 'los', 'lot', 'lou', 'lov', 'low', 'lox', 'loy', 'loz', 'lpa', 'lpe', 'lpn', 'lpo', 'lpx', 'lra', 'lrc', 'lre', 'lrg', 'lri', 'lrk', 'lrl', 'lrm', 'lrn', 'lro', 'lrr', 'lrt', 'lrv', 'lrz', 'lsa', 'lsd', 'lse', 'lsg', 'lsh', 'lsi', 'lsl', 'lsm', 'lso', 'lsp', 'lsr', 'lss', 'lst', 'lsy', 'ltc', 'ltg', 'lti', 'ltn', 'lto', 'lts', 'ltu', 'lua', 'luc', 'lud', 'lue', 'luf', 'lui', 'luj', 'luk', 'lul', 'lum', 'lun', 'luo', 'lup', 'luq', 'lur', 'lus', 'lut', 'luu', 'luv', 'luw', 'luy', 'luz', 'lva', 'lvk', 'lvs', 'lvu', 'lwa', 'lwe', 'lwg', 'lwh', 'lwl', 'lwm', 'lwo', 'lwt', 'lwu', 'lww', 'lya', 'lyg', 'lyn', 'lzh', 'lzl', 'lzn', 'lzz', 'maa', 'mab', 'mad', 'mae', 'maf', 'mag', 'mai', 'maj', 'mak', 'mam', 'man', 'map', 'maq', 'mas', 'mat', 'mau', 'mav', 'maw', 'max', 'maz', 'mba', 'mbb', 'mbc', 'mbd', 'mbe', 'mbf', 'mbh', 'mbi', 'mbj', 'mbk', 'mbl', 'mbm', 'mbn', 'mbo', 'mbp', 'mbq', 'mbr', 'mbs', 'mbt', 'mbu', 'mbv', 'mbw', 'mbx', 'mby', 'mbz', 'mca', 'mcb', 'mcc', 'mcd', 'mce', 'mcf', 'mcg', 'mch', 'mci', 'mcj', 'mck', 'mcl', 'mcm', 'mcn', 'mco', 'mcp', 'mcq', 'mcr', 'mcs', 'mct', 'mcu', 'mcv', 'mcw', 'mcx', 'mcy', 'mcz', 'mda', 'mdb', 'mdc', 'mdd', 'mde', 'mdf', 'mdg', 'mdh', 'mdi', 'mdj', 'mdk', 'mdl', 'mdm', 'mdn', 'mdp', 'mdq', 'mdr', 'mds', 'mdt', 'mdu', 'mdv', 'mdw', 'mdx', 'mdy', 'mdz', 'mea', 'meb', 'mec', 'med', 'mee', 'mef', 'meg', 'meh', 'mei', 'mej', 'mek', 'mel', 'mem', 'men', 'meo', 'mep', 'meq', 'mer', 'mes', 'met', 'meu', 'mev', 'mew', 'mey', 'mez', 'mfa', 'mfb', 'mfc', 'mfd', 'mfe', 'mff', 'mfg', 'mfh', 'mfi', 'mfj', 'mfk', 'mfl', 'mfm', 'mfn', 'mfo', 'mfp', 'mfq', 'mfr', 'mfs', 'mft', 'mfu', 'mfv', 'mfw', 'mfx', 'mfy', 'mfz', 'mga', 'mgb', 'mgc', 'mgd', 'mge', 'mgf', 'mgg', 'mgh', 'mgi', 'mgj', 'mgk', 'mgl', 'mgm', 'mgn', 'mgo', 'mgp', 'mgq', 'mgr', 'mgs', 'mgt', 'mgu', 'mgv', 'mgw', 'mgx', 'mgy', 'mgz', 'mha', 'mhb', 'mhc', 'mhd', 'mhe', 'mhf', 'mhg', 'mhh', 'mhi', 'mhj', 'mhk', 'mhl', 'mhm', 'mhn', 'mho', 'mhp', 'mhq', 'mhr', 'mhs', 'mht', 'mhu', 'mhw', 'mhx', 'mhy', 'mhz', 'mia', 'mib', 'mic', 'mid', 'mie', 'mif', 'mig', 'mih', 'mii', 'mij', 'mik', 'mil', 'mim', 'min', 'mio', 'mip', 'miq', 'mir', 'mis', 'mit', 'miu', 'miw', 'mix', 'miy', 'miz', 'mja', 'mjb', 'mjc', 'mjd', 'mje', 'mjg', 'mjh', 'mji', 'mjj', 'mjk', 'mjl', 'mjm', 'mjn', 'mjo', 'mjp', 'mjq', 'mjr', 'mjs', 'mjt', 'mju', 'mjv', 'mjw', 'mjx', 'mjy', 'mjz', 'mka', 'mkb', 'mkc', 'mke', 'mkf', 'mkg', 'mkh', 'mki', 'mkj', 'mkk', 'mkl', 'mkm', 'mkn', 'mko', 'mkp', 'mkq', 'mkr', 'mks', 'mkt', 'mku', 'mkv', 'mkw', 'mkx', 'mky', 'mkz', 'mla', 'mlb', 'mlc', 'mld', 'mle', 'mlf', 'mlh', 'mli', 'mlj', 'mlk', 'mll', 'mlm', 'mln', 'mlo', 'mlp', 'mlq', 'mlr', 'mls', 'mlu', 'mlv', 'mlw', 'mlx', 'mlz', 'mma', 'mmb', 'mmc', 'mmd', 'mme', 'mmf', 'mmg', 'mmh', 'mmi', 'mmj', 'mmk', 'mml', 'mmm', 'mmn', 'mmo', 'mmp', 'mmq', 'mmr', 'mmt', 'mmu', 'mmv', 'mmw', 'mmx', 'mmy', 'mmz', 'mna', 'mnb', 'mnc', 'mnd', 'mne', 'mnf', 'mng', 'mnh', 'mni', 'mnj', 'mnk', 'mnl', 'mnm', 'mnn', 'mno', 'mnp', 'mnq', 'mnr', 'mns', 'mnt', 'mnu', 'mnv', 'mnw', 'mnx', 'mny', 'mnz', 'moa', 'moc', 'mod', 'moe', 'mof', 'mog', 'moh', 'moi', 'moj', 'mok', 'mom', 'moo', 'mop', 'moq', 'mor', 'mos', 'mot', 'mou', 'mov', 'mow', 'mox', 'moy', 'moz', 'mpa', 'mpb', 'mpc', 'mpd', 'mpe', 'mpg', 'mph', 'mpi', 'mpj', 'mpk', 'mpl', 'mpm', 'mpn', 'mpo', 'mpp', 'mpq', 'mpr', 'mps', 'mpt', 'mpu', 'mpv', 'mpw', 'mpx', 'mpy', 'mpz', 'mqa', 'mqb', 'mqc', 'mqe', 'mqf', 'mqg', 'mqh', 'mqi', 'mqj', 'mqk', 'mql', 'mqm', 'mqn', 'mqo', 'mqp', 'mqq', 'mqr', 'mqs', 'mqt', 'mqu', 'mqv', 'mqw', 'mqx', 'mqy', 'mqz', 'mra', 'mrb', 'mrc', 'mrd', 'mre', 'mrf', 'mrg', 'mrh', 'mrj', 'mrk', 'mrl', 'mrm', 'mrn', 'mro', 'mrp', 'mrq', 'mrr', 'mrs', 'mrt', 'mru', 'mrv', 'mrw', 'mrx', 'mry', 'mrz', 'msb', 'msc', 'msd', 'mse', 'msf', 'msg', 'msh', 'msi', 'msj', 'msk', 'msl', 'msm', 'msn', 'mso', 'msp', 'msq', 'msr', 'mss', 'mst', 'msu', 'msv', 'msw', 'msx', 'msy', 'msz', 'mta', 'mtb', 'mtc', 'mtd', 'mte', 'mtf', 'mtg', 'mth', 'mti', 'mtj', 'mtk', 'mtl', 'mtm', 'mtn', 'mto', 'mtp', 'mtq', 'mtr', 'mts', 'mtt', 'mtu', 'mtv', 'mtw', 'mtx', 'mty', 'mua', 'mub', 'muc', 'mud', 'mue', 'mug', 'muh', 'mui', 'muj', 'muk', 'mul', 'mum', 'mun', 'muo', 'mup', 'muq', 'mur', 'mus', 'mut', 'muu', 'muv', 'mux', 'muy', 'muz', 'mva', 'mvb', 'mvd', 'mve', 'mvf', 'mvg', 'mvh', 'mvi', 'mvk', 'mvl', 'mvm', 'mvn', 'mvo', 'mvp', 'mvq', 'mvr', 'mvs', 'mvt', 'mvu', 'mvv', 'mvw', 'mvx', 'mvy', 'mvz', 'mwa', 'mwb', 'mwc', 'mwd', 'mwe', 'mwf', 'mwg', 'mwh', 'mwi', 'mwj', 'mwk', 'mwl', 'mwm', 'mwn', 'mwo', 'mwp', 'mwq', 'mwr', 'mws', 'mwt', 'mwu', 'mwv', 'mww', 'mwx', 'mwy', 'mwz', 'mxa', 'mxb', 'mxc', 'mxd', 'mxe', 'mxf', 'mxg', 'mxh', 'mxi', 'mxj', 'mxk', 'mxl', 'mxm', 'mxn', 'mxo', 'mxp', 'mxq', 'mxr', 'mxs', 'mxt', 'mxu', 'mxv', 'mxw', 'mxx', 'mxy', 'mxz', 'myb', 'myc', 'myd', 'mye', 'myf', 'myg', 'myh', 'myi', 'myj', 'myk', 'myl', 'mym', 'myn', 'myo', 'myp', 'myq', 'myr', 'mys', 'myt', 'myu', 'myv', 'myw', 'myx', 'myy', 'myz', 'mza', 'mzb', 'mzc', 'mzd', 'mze', 'mzg', 'mzh', 'mzi', 'mzj', 'mzk', 'mzl', 'mzm', 'mzn', 'mzo', 'mzp', 'mzq', 'mzr', 'mzs', 'mzt', 'mzu', 'mzv', 'mzw', 'mzx', 'mzy', 'mzz', 'naa', 'nab', 'nac', 'nad', 'nae', 'naf', 'nag', 'nah', 'nai', 'naj', 'nak', 'nal', 'nam', 'nan', 'nao', 'nap', 'naq', 'nar', 'nas', 'nat', 'naw', 'nax', 'nay', 'naz', 'nba', 'nbb', 'nbc', 'nbd', 'nbe', 'nbf', 'nbg', 'nbh', 'nbi', 'nbj', 'nbk', 'nbm', 'nbn', 'nbo', 'nbp', 'nbq', 'nbr', 'nbs', 'nbt', 'nbu', 'nbv', 'nbw', 'nbx', 'nby', 'nca', 'ncb', 'ncc', 'ncd', 'nce', 'ncf', 'ncg', 'nch', 'nci', 'ncj', 'nck', 'ncl', 'ncm', 'ncn', 'nco', 'ncp', 'ncr', 'ncs', 'nct', 'ncu', 'ncx', 'ncz', 'nda', 'ndb', 'ndc', 'ndd', 'ndf', 'ndg', 'ndh', 'ndi', 'ndj', 'ndk', 'ndl', 'ndm', 'ndn', 'ndp', 'ndq', 'ndr', 'nds', 'ndt', 'ndu', 'ndv', 'ndw', 'ndx', 'ndy', 'ndz', 'nea', 'neb', 'nec', 'ned', 'nee', 'nef', 'neg', 'neh', 'nei', 'nej', 'nek', 'nem', 'nen', 'neo', 'neq', 'ner', 'nes', 'net', 'neu', 'nev', 'new', 'nex', 'ney', 'nez', 'nfa', 'nfd', 'nfl', 'nfr', 'nfu', 'nga', 'ngb', 'ngc', 'ngd', 'nge', 'ngf', 'ngg', 'ngh', 'ngi', 'ngj', 'ngk', 'ngl', 'ngm', 'ngn', 'ngo', 'ngp', 'ngq', 'ngr', 'ngs', 'ngt', 'ngu', 'ngv', 'ngw', 'ngx', 'ngy', 'ngz', 'nha', 'nhb', 'nhc', 'nhd', 'nhe', 'nhf', 'nhg', 'nhh', 'nhi', 'nhk', 'nhm', 'nhn', 'nho', 'nhp', 'nhq', 'nhr', 'nht', 'nhu', 'nhv', 'nhw', 'nhx', 'nhy', 'nhz', 'nia', 'nib', 'nic', 'nid', 'nie', 'nif', 'nig', 'nih', 'nii', 'nij', 'nik', 'nil', 'nim', 'nin', 'nio', 'niq', 'nir', 'nis', 'nit', 'niu', 'niv', 'niw', 'nix', 'niy', 'niz', 'nja', 'njb', 'njd', 'njh', 'nji', 'njj', 'njl', 'njm', 'njn', 'njo', 'njr', 'njs', 'njt', 'nju', 'njx', 'njy', 'njz', 'nka', 'nkb', 'nkc', 'nkd', 'nke', 'nkf', 'nkg', 'nkh', 'nki', 'nkj', 'nkk', 'nkm', 'nkn', 'nko', 'nkp', 'nkq', 'nkr', 'nks', 'nkt', 'nku', 'nkv', 'nkw', 'nkx', 'nkz', 'nla', 'nlc', 'nle', 'nlg', 'nli', 'nlj', 'nlk', 'nll', 'nln', 'nlo', 'nlq', 'nlr', 'nlu', 'nlv', 'nlw', 'nlx', 'nly', 'nlz', 'nma', 'nmb', 'nmc', 'nmd', 'nme', 'nmf', 'nmg', 'nmh', 'nmi', 'nmj', 'nmk', 'nml', 'nmm', 'nmn', 'nmo', 'nmp', 'nmq', 'nmr', 'nms', 'nmt', 'nmu', 'nmv', 'nmw', 'nmx', 'nmy', 'nmz', 'nna', 'nnb', 'nnc', 'nnd', 'nne', 'nnf', 'nng', 'nnh', 'nni', 'nnj', 'nnk', 'nnl', 'nnm', 'nnn', 'nnp', 'nnq', 'nnr', 'nns', 'nnt', 'nnu', 'nnv', 'nnw', 'nnx', 'nny', 'nnz', 'noa', 'noc', 'nod', 'noe', 'nof', 'nog', 'noh', 'noi', 'noj', 'nok', 'nol', 'nom', 'non', 'noo', 'nop', 'noq', 'nos', 'not', 'nou', 'nov', 'now', 'noy', 'noz', 'npa', 'npb', 'npg', 'nph', 'npi', 'npl', 'npn', 'npo', 'nps', 'npu', 'npy', 'nqg', 'nqk', 'nqm', 'nqn', 'nqo', 'nqq', 'nqy', 'nra', 'nrb', 'nrc', 'nre', 'nrf', 'nrg', 'nri', 'nrk', 'nrl', 'nrm', 'nrn', 'nrp', 'nrr', 'nrt', 'nru', 'nrx', 'nrz', 'nsa', 'nsc', 'nsd', 'nse', 'nsf', 'nsg', 'nsh', 'nsi', 'nsk', 'nsl', 'nsm', 'nsn', 'nso', 'nsp', 'nsq', 'nsr', 'nss', 'nst', 'nsu', 'nsv', 'nsw', 'nsx', 'nsy', 'nsz', 'ntd', 'nte', 'ntg', 'nti', 'ntj', 'ntk', 'ntm', 'nto', 'ntp', 'ntr', 'nts', 'ntu', 'ntw', 'ntx', 'nty', 'ntz', 'nua', 'nub', 'nuc', 'nud', 'nue', 'nuf', 'nug', 'nuh', 'nui', 'nuj', 'nuk', 'nul', 'num', 'nun', 'nuo', 'nup', 'nuq', 'nur', 'nus', 'nut', 'nuu', 'nuv', 'nuw', 'nux', 'nuy', 'nuz', 'nvh', 'nvm', 'nvo', 'nwa', 'nwb', 'nwc', 'nwe', 'nwg', 'nwi', 'nwm', 'nwo', 'nwr', 'nwx', 'nwy', 'nxa', 'nxd', 'nxe', 'nxg', 'nxi', 'nxk', 'nxl', 'nxm', 'nxn', 'nxo', 'nxq', 'nxr', 'nxu', 'nxx', 'nyb', 'nyc', 'nyd', 'nye', 'nyf', 'nyg', 'nyh', 'nyi', 'nyj', 'nyk', 'nyl', 'nym', 'nyn', 'nyo', 'nyp', 'nyq', 'nyr', 'nys', 'nyt', 'nyu', 'nyv', 'nyw', 'nyx', 'nyy', 'nza', 'nzb', 'nzi', 'nzk', 'nzm', 'nzs', 'nzu', 'nzy', 'nzz', 'oaa', 'oac', 'oar', 'oav', 'obi', 'obk', 'obl', 'obm', 'obo', 'obr', 'obt', 'obu', 'oca', 'och', 'oco', 'ocu', 'oda', 'odk', 'odt', 'odu', 'ofo', 'ofs', 'ofu', 'ogb', 'ogc', 'oge', 'ogg', 'ogo', 'ogu', 'oht', 'ohu', 'oia', 'oin', 'ojb', 'ojc', 'ojg', 'ojp', 'ojs', 'ojv', 'ojw', 'oka', 'okb', 'okd', 'oke', 'okg', 'okh', 'oki', 'okj', 'okk', 'okl', 'okm', 'okn', 'oko', 'okr', 'oks', 'oku', 'okv', 'okx', 'ola', 'old', 'ole', 'olk', 'olm', 'olo', 'olr', 'olt', 'olu', 'oma', 'omb', 'omc', 'ome', 'omg', 'omi', 'omk', 'oml', 'omn', 'omo', 'omp', 'omq', 'omr', 'omt', 'omu', 'omv', 'omw', 'omx', 'ona', 'onb', 'one', 'ong', 'oni', 'onj', 'onk', 'onn', 'ono', 'onp', 'onr', 'ons', 'ont', 'onu', 'onw', 'onx', 'ood', 'oog', 'oon', 'oor', 'oos', 'opa', 'opk', 'opm', 'opo', 'opt', 'opy', 'ora', 'orc', 'ore', 'org', 'orh', 'orn', 'oro', 'orr', 'ors', 'ort', 'oru', 'orv', 'orw', 'orx', 'ory', 'orz', 'osa', 'osc', 'osi', 'oso', 'osp', 'ost', 'osu', 'osx', 'ota', 'otb', 'otd', 'ote', 'oti', 'otk', 'otl', 'otm', 'otn', 'oto', 'otq', 'otr', 'ots', 'ott', 'otu', 'otw', 'otx', 'oty', 'otz', 'oua', 'oub', 'oue', 'oui', 'oum', 'oun', 'ovd', 'owi', 'owl', 'oyb', 'oyd', 'oym', 'oyy', 'ozm', 'paa', 'pab', 'pac', 'pad', 'pae', 'paf', 'pag', 'pah', 'pai', 'pak', 'pal', 'pam', 'pao', 'pap', 'paq', 'par', 'pas', 'pat', 'pau', 'pav', 'paw', 'pax', 'pay', 'paz', 'pbb', 'pbc', 'pbe', 'pbf', 'pbg', 'pbh', 'pbi', 'pbl', 'pbn', 'pbo', 'pbp', 'pbr', 'pbs', 'pbt', 'pbu', 'pbv', 'pby', 'pbz', 'pca', 'pcb', 'pcc', 'pcd', 'pce', 'pcf', 'pcg', 'pch', 'pci', 'pcj', 'pck', 'pcl', 'pcm', 'pcn', 'pcp', 'pcr', 'pcw', 'pda', 'pdc', 'pdi', 'pdn', 'pdo', 'pdt', 'pdu', 'pea', 'peb', 'ped', 'pee', 'pef', 'peg', 'peh', 'pei', 'pej', 'pek', 'pel', 'pem', 'peo', 'pep', 'peq', 'pes', 'pev', 'pex', 'pey', 'pez', 'pfa', 'pfe', 'pfl', 'pga', 'pgd', 'pgg', 'pgi', 'pgk', 'pgl', 'pgn', 'pgs', 'pgu', 'pgy', 'pgz', 'pha', 'phd', 'phg', 'phh', 'phi', 'phk', 'phl', 'phm', 'phn', 'pho', 'phq', 'phr', 'pht', 'phu', 'phv', 'phw', 'pia', 'pib', 'pic', 'pid', 'pie', 'pif', 'pig', 'pih', 'pii', 'pij', 'pil', 'pim', 'pin', 'pio', 'pip', 'pir', 'pis', 'pit', 'piu', 'piv', 'piw', 'pix', 'piy', 'piz', 'pjt', 'pka', 'pkb', 'pkc', 'pkg', 'pkh', 'pkn', 'pko', 'pkp', 'pkr', 'pks', 'pkt', 'pku', 'pla', 'plb', 'plc', 'pld', 'ple', 'plf', 'plg', 'plh', 'plj', 'plk', 'pll', 'pln', 'plo', 'plp', 'plq', 'plr', 'pls', 'plt', 'plu', 'plv', 'plw', 'ply', 'plz', 'pma', 'pmb', 'pmc', 'pmd', 'pme', 'pmf', 'pmh', 'pmi', 'pmj', 'pmk', 'pml', 'pmm', 'pmn', 'pmo', 'pmq', 'pmr', 'pms', 'pmt', 'pmu', 'pmw', 'pmx', 'pmy', 'pmz', 'pna', 'pnb', 'pnc', 'pne', 'png', 'pnh', 'pni', 'pnj', 'pnk', 'pnl', 'pnm', 'pnn', 'pno', 'pnp', 'pnq', 'pnr', 'pns', 'pnt', 'pnu', 'pnv', 'pnw', 'pnx', 'pny', 'pnz', 'poc', 'pod', 'poe', 'pof', 'pog', 'poh', 'poi', 'pok', 'pom', 'pon', 'poo', 'pop', 'poq', 'pos', 'pot', 'pov', 'pow', 'pox', 'poy', 'poz', 'ppa', 'ppe', 'ppi', 'ppk', 'ppl', 'ppm', 'ppn', 'ppo', 'ppp', 'ppq', 'ppr', 'pps', 'ppt', 'ppu', 'pqa', 'pqe', 'pqm', 'pqw', 'pra', 'prb', 'prc', 'prd', 'pre', 'prf', 'prg', 'prh', 'pri', 'prk', 'prl', 'prm', 'prn', 'pro', 'prp', 'prq', 'prr', 'prs', 'prt', 'pru', 'prw', 'prx', 'pry', 'prz', 'psa', 'psc', 'psd', 'pse', 'psg', 'psh', 'psi', 'psl', 'psm', 'psn', 'pso', 'psp', 'psq', 'psr', 'pss', 'pst', 'psu', 'psw', 'psy', 'pta', 'pth', 'pti', 'ptn', 'pto', 'ptp', 'ptq', 'ptr', 'ptt', 'ptu', 'ptv', 'ptw', 'pty', 'pua', 'pub', 'puc', 'pud', 'pue', 'puf', 'pug', 'pui', 'puj', 'puk', 'pum', 'puo', 'pup', 'puq', 'pur', 'put', 'puu', 'puw', 'pux', 'puy', 'puz', 'pwa', 'pwb', 'pwg', 'pwi', 'pwm', 'pwn', 'pwo', 'pwr', 'pww', 'pxm', 'pye', 'pym', 'pyn', 'pys', 'pyu', 'pyx', 'pyy', 'pzn', 'qaa..qtz', 'qua', 'qub', 'quc', 'qud', 'quf', 'qug', 'quh', 'qui', 'quk', 'qul', 'qum', 'qun', 'qup', 'quq', 'qur', 'qus', 'quv', 'quw', 'qux', 'quy', 'quz', 'qva', 'qvc', 'qve', 'qvh', 'qvi', 'qvj', 'qvl', 'qvm', 'qvn', 'qvo', 'qvp', 'qvs', 'qvw', 'qvy', 'qvz', 'qwa', 'qwc', 'qwe', 'qwh', 'qwm', 'qws', 'qwt', 'qxa', 'qxc', 'qxh', 'qxl', 'qxn', 'qxo', 'qxp', 'qxq', 'qxr', 'qxs', 'qxt', 'qxu', 'qxw', 'qya', 'qyp', 'raa', 'rab', 'rac', 'rad', 'raf', 'rag', 'rah', 'rai', 'raj', 'rak', 'ral', 'ram', 'ran', 'rao', 'rap', 'raq', 'rar', 'ras', 'rat', 'rau', 'rav', 'raw', 'rax', 'ray', 'raz', 'rbb', 'rbk', 'rbl', 'rbp', 'rcf', 'rdb', 'rea', 'reb', 'ree', 'reg', 'rei', 'rej', 'rel', 'rem', 'ren', 'rer', 'res', 'ret', 'rey', 'rga', 'rge', 'rgk', 'rgn', 'rgr', 'rgs', 'rgu', 'rhg', 'rhp', 'ria', 'rie', 'rif', 'ril', 'rim', 'rin', 'rir', 'rit', 'riu', 'rjg', 'rji', 'rjs', 'rka', 'rkb', 'rkh', 'rki', 'rkm', 'rkt', 'rkw', 'rma', 'rmb', 'rmc', 'rmd', 'rme', 'rmf', 'rmg', 'rmh', 'rmi', 'rmk', 'rml', 'rmm', 'rmn', 'rmo', 'rmp', 'rmq', 'rmr', 'rms', 'rmt', 'rmu', 'rmv', 'rmw', 'rmx', 'rmy', 'rmz', 'rna', 'rnd', 'rng', 'rnl', 'rnn', 'rnp', 'rnr', 'rnw', 'roa', 'rob', 'roc', 'rod', 'roe', 'rof', 'rog', 'rol', 'rom', 'roo', 'rop', 'ror', 'rou', 'row', 'rpn', 'rpt', 'rri', 'rro', 'rrt', 'rsb', 'rsi', 'rsl', 'rsm', 'rtc', 'rth', 'rtm', 'rts', 'rtw', 'rub', 'ruc', 'rue', 'ruf', 'rug', 'ruh', 'rui', 'ruk', 'ruo', 'rup', 'ruq', 'rut', 'ruu', 'ruy', 'ruz', 'rwa', 'rwk', 'rwm', 'rwo', 'rwr', 'rxd', 'rxw', 'ryn', 'rys', 'ryu', 'rzh', 'saa', 'sab', 'sac', 'sad', 'sae', 'saf', 'sah', 'sai', 'saj', 'sak', 'sal', 'sam', 'sao', 'sap', 'saq', 'sar', 'sas', 'sat', 'sau', 'sav', 'saw', 'sax', 'say', 'saz', 'sba', 'sbb', 'sbc', 'sbd', 'sbe', 'sbf', 'sbg', 'sbh', 'sbi', 'sbj', 'sbk', 'sbl', 'sbm', 'sbn', 'sbo', 'sbp', 'sbq', 'sbr', 'sbs', 'sbt', 'sbu', 'sbv', 'sbw', 'sbx', 'sby', 'sbz', 'sca', 'scb', 'sce', 'scf', 'scg', 'sch', 'sci', 'sck', 'scl', 'scn', 'sco', 'scp', 'scq', 'scs', 'scu', 'scv', 'scw', 'scx', 'sda', 'sdb', 'sdc', 'sde', 'sdf', 'sdg', 'sdh', 'sdj', 'sdk', 'sdl', 'sdm', 'sdn', 'sdo', 'sdp', 'sdr', 'sds', 'sdt', 'sdu', 'sdv', 'sdx', 'sdz', 'sea', 'seb', 'sec', 'sed', 'see', 'sef', 'seg', 'seh', 'sei', 'sej', 'sek', 'sel', 'sem', 'sen', 'seo', 'sep', 'seq', 'ser', 'ses', 'set', 'seu', 'sev', 'sew', 'sey', 'sez', 'sfb', 'sfe', 'sfm', 'sfs', 'sfw', 'sga', 'sgb', 'sgc', 'sgd', 'sge', 'sgg', 'sgh', 'sgi', 'sgj', 'sgk', 'sgl', 'sgm', 'sgn', 'sgo', 'sgp', 'sgr', 'sgs', 'sgt', 'sgu', 'sgw', 'sgx', 'sgy', 'sgz', 'sha', 'shb', 'shc', 'shd', 'she', 'shg', 'shh', 'shi', 'shj', 'shk', 'shl', 'shm', 'shn', 'sho', 'shp', 'shq', 'shr', 'shs', 'sht', 'shu', 'shv', 'shw', 'shx', 'shy', 'shz', 'sia', 'sib', 'sid', 'sie', 'sif', 'sig', 'sih', 'sii', 'sij', 'sik', 'sil', 'sim', 'sio', 'sip', 'siq', 'sir', 'sis', 'sit', 'siu', 'siv', 'siw', 'six', 'siy', 'siz', 'sja', 'sjb', 'sjd', 'sje', 'sjg', 'sjk', 'sjl', 'sjm', 'sjn', 'sjo', 'sjp', 'sjr', 'sjs', 'sjt', 'sju', 'sjw', 'ska', 'skb', 'skc', 'skd', 'ske', 'skf', 'skg', 'skh', 'ski', 'skj', 'skk', 'skm', 'skn', 'sko', 'skp', 'skq', 'skr', 'sks', 'skt', 'sku', 'skv', 'skw', 'skx', 'sky', 'skz', 'sla', 'slc', 'sld', 'sle', 'slf', 'slg', 'slh', 'sli', 'slj', 'sll', 'slm', 'sln', 'slp', 'slq', 'slr', 'sls', 'slt', 'slu', 'slw', 'slx', 'sly', 'slz', 'sma', 'smb', 'smc', 'smd', 'smf', 'smg', 'smh', 'smi', 'smj', 'smk', 'sml', 'smm', 'smn', 'smp', 'smq', 'smr', 'sms', 'smt', 'smu', 'smv', 'smw', 'smx', 'smy', 'smz', 'snb', 'snc', 'sne', 'snf', 'sng', 'snh', 'sni', 'snj', 'snk', 'snl', 'snm', 'snn', 'sno', 'snp', 'snq', 'snr', 'sns', 'snu', 'snv', 'snw', 'snx', 'sny', 'snz', 'soa', 'sob', 'soc', 'sod', 'soe', 'sog', 'soh', 'soi', 'soj', 'sok', 'sol', 'son', 'soo', 'sop', 'soq', 'sor', 'sos', 'sou', 'sov', 'sow', 'sox', 'soy', 'soz', 'spb', 'spc', 'spd', 'spe', 'spg', 'spi', 'spk', 'spl', 'spm', 'spn', 'spo', 'spp', 'spq', 'spr', 'sps', 'spt', 'spu', 'spv', 'spx', 'spy', 'sqa', 'sqh', 'sqj', 'sqk', 'sqm', 'sqn', 'sqo', 'sqq', 'sqr', 'sqs', 'sqt', 'squ', 'sra', 'srb', 'src', 'sre', 'srf', 'srg', 'srh', 'sri', 'srk', 'srl', 'srm', 'srn', 'sro', 'srq', 'srr', 'srs', 'srt', 'sru', 'srv', 'srw', 'srx', 'sry', 'srz', 'ssa', 'ssb', 'ssc', 'ssd', 'sse', 'ssf', 'ssg', 'ssh', 'ssi', 'ssj', 'ssk', 'ssl', 'ssm', 'ssn', 'sso', 'ssp', 'ssq', 'ssr', 'sss', 'sst', 'ssu', 'ssv', 'ssx', 'ssy', 'ssz', 'sta', 'stb', 'std', 'ste', 'stf', 'stg', 'sth', 'sti', 'stj', 'stk', 'stl', 'stm', 'stn', 'sto', 'stp', 'stq', 'str', 'sts', 'stt', 'stu', 'stv', 'stw', 'sty', 'sua', 'sub', 'suc', 'sue', 'sug', 'sui', 'suj', 'suk', 'sul', 'sum', 'suq', 'sur', 'sus', 'sut', 'suv', 'suw', 'sux', 'suy', 'suz', 'sva', 'svb', 'svc', 'sve', 'svk', 'svm', 'svr', 'svs', 'svx', 'swb', 'swc', 'swf', 'swg', 'swh', 'swi', 'swj', 'swk', 'swl', 'swm', 'swn', 'swo', 'swp', 'swq', 'swr', 'sws', 'swt', 'swu', 'swv', 'sww', 'swx', 'swy', 'sxb', 'sxc', 'sxe', 'sxg', 'sxk', 'sxl', 'sxm', 'sxn', 'sxo', 'sxr', 'sxs', 'sxu', 'sxw', 'sya', 'syb', 'syc', 'syd', 'syi', 'syk', 'syl', 'sym', 'syn', 'syo', 'syr', 'sys', 'syw', 'syx', 'syy', 'sza', 'szb', 'szc', 'szd', 'sze', 'szg', 'szl', 'szn', 'szp', 'szv', 'szw', 'taa', 'tab', 'tac', 'tad', 'tae', 'taf', 'tag', 'tai', 'taj', 'tak', 'tal', 'tan', 'tao', 'tap', 'taq', 'tar', 'tas', 'tau', 'tav', 'taw', 'tax', 'tay', 'taz', 'tba', 'tbb', 'tbc', 'tbd', 'tbe', 'tbf', 'tbg', 'tbh', 'tbi', 'tbj', 'tbk', 'tbl', 'tbm', 'tbn', 'tbo', 'tbp', 'tbq', 'tbr', 'tbs', 'tbt', 'tbu', 'tbv', 'tbw', 'tbx', 'tby', 'tbz', 'tca', 'tcb', 'tcc', 'tcd', 'tce', 'tcf', 'tcg', 'tch', 'tci', 'tck', 'tcl', 'tcm', 'tcn', 'tco', 'tcp', 'tcq', 'tcs', 'tct', 'tcu', 'tcw', 'tcx', 'tcy', 'tcz', 'tda', 'tdb', 'tdc', 'tdd', 'tde', 'tdf', 'tdg', 'tdh', 'tdi', 'tdj', 'tdk', 'tdl', 'tdm', 'tdn', 'tdo', 'tdq', 'tdr', 'tds', 'tdt', 'tdu', 'tdv', 'tdx', 'tdy', 'tea', 'teb', 'tec', 'ted', 'tee', 'tef', 'teg', 'teh', 'tei', 'tek', 'tem', 'ten', 'teo', 'tep', 'teq', 'ter', 'tes', 'tet', 'teu', 'tev', 'tew', 'tex', 'tey', 'tfi', 'tfn', 'tfo', 'tfr', 'tft', 'tga', 'tgb', 'tgc', 'tgd', 'tge', 'tgf', 'tgg', 'tgh', 'tgi', 'tgj', 'tgn', 'tgo', 'tgp', 'tgq', 'tgr', 'tgs', 'tgt', 'tgu', 'tgv', 'tgw', 'tgx', 'tgy', 'tgz', 'thc', 'thd', 'the', 'thf', 'thh', 'thi', 'thk', 'thl', 'thm', 'thn', 'thp', 'thq', 'thr', 'ths', 'tht', 'thu', 'thv', 'thw', 'thx', 'thy', 'thz', 'tia', 'tic', 'tid', 'tie', 'tif', 'tig', 'tih', 'tii', 'tij', 'tik', 'til', 'tim', 'tin', 'tio', 'tip', 'tiq', 'tis', 'tit', 'tiu', 'tiv', 'tiw', 'tix', 'tiy', 'tiz', 'tja', 'tjg', 'tji', 'tjl', 'tjm', 'tjn', 'tjo', 'tjs', 'tju', 'tjw', 'tka', 'tkb', 'tkd', 'tke', 'tkf', 'tkg', 'tkk', 'tkl', 'tkm', 'tkn', 'tkp', 'tkq', 'tkr', 'tks', 'tkt', 'tku', 'tkv', 'tkw', 'tkx', 'tkz', 'tla', 'tlb', 'tlc', 'tld', 'tlf', 'tlg', 'tlh', 'tli', 'tlj', 'tlk', 'tll', 'tlm', 'tln', 'tlo', 'tlp', 'tlq', 'tlr', 'tls', 'tlt', 'tlu', 'tlv', 'tlw', 'tlx', 'tly', 'tma', 'tmb', 'tmc', 'tmd', 'tme', 'tmf', 'tmg', 'tmh', 'tmi', 'tmj', 'tmk', 'tml', 'tmm', 'tmn', 'tmo', 'tmp', 'tmq', 'tmr', 'tms', 'tmt', 'tmu', 'tmv', 'tmw', 'tmy', 'tmz', 'tna', 'tnb', 'tnc', 'tnd', 'tne', 'tnf', 'tng', 'tnh', 'tni', 'tnk', 'tnl', 'tnm', 'tnn', 'tno', 'tnp', 'tnq', 'tnr', 'tns', 'tnt', 'tnu', 'tnv', 'tnw', 'tnx', 'tny', 'tnz', 'tob', 'toc', 'tod', 'toe', 'tof', 'tog', 'toh', 'toi', 'toj', 'tol', 'tom', 'too', 'top', 'toq', 'tor', 'tos', 'tou', 'tov', 'tow', 'tox', 'toy', 'toz', 'tpa', 'tpc', 'tpe', 'tpf', 'tpg', 'tpi', 'tpj', 'tpk', 'tpl', 'tpm', 'tpn', 'tpo', 'tpp', 'tpq', 'tpr', 'tpt', 'tpu', 'tpv', 'tpw', 'tpx', 'tpy', 'tpz', 'tqb', 'tql', 'tqm', 'tqn', 'tqo', 'tqp', 'tqq', 'tqr', 'tqt', 'tqu', 'tqw', 'tra', 'trb', 'trc', 'trd', 'tre', 'trf', 'trg', 'trh', 'tri', 'trj', 'trk', 'trl', 'trm', 'trn', 'tro', 'trp', 'trq', 'trr', 'trs', 'trt', 'tru', 'trv', 'trw', 'trx', 'try', 'trz', 'tsa', 'tsb', 'tsc', 'tsd', 'tse', 'tsf', 'tsg', 'tsh', 'tsi', 'tsj', 'tsk', 'tsl', 'tsm', 'tsp', 'tsq', 'tsr', 'tss', 'tst', 'tsu', 'tsv', 'tsw', 'tsx', 'tsy', 'tsz', 'tta', 'ttb', 'ttc', 'ttd', 'tte', 'ttf', 'ttg', 'tth', 'tti', 'ttj', 'ttk', 'ttl', 'ttm', 'ttn', 'tto', 'ttp', 'ttq', 'ttr', 'tts', 'ttt', 'ttu', 'ttv', 'ttw', 'tty', 'ttz', 'tua', 'tub', 'tuc', 'tud', 'tue', 'tuf', 'tug', 'tuh', 'tui', 'tuj', 'tul', 'tum', 'tun', 'tuo', 'tup', 'tuq', 'tus', 'tut', 'tuu', 'tuv', 'tuw', 'tux', 'tuy', 'tuz', 'tva', 'tvd', 'tve', 'tvk', 'tvl', 'tvm', 'tvn', 'tvo', 'tvs', 'tvt', 'tvu', 'tvw', 'tvy', 'twa', 'twb', 'twc', 'twd', 'twe', 'twf', 'twg', 'twh', 'twl', 'twm', 'twn', 'two', 'twp', 'twq', 'twr', 'twt', 'twu', 'tww', 'twx', 'twy', 'txa', 'txb', 'txc', 'txe', 'txg', 'txh', 'txi', 'txj', 'txm', 'txn', 'txo', 'txq', 'txr', 'txs', 'txt', 'txu', 'txx', 'txy', 'tya', 'tye', 'tyh', 'tyi', 'tyj', 'tyl', 'tyn', 'typ', 'tyr', 'tys', 'tyt', 'tyu', 'tyv', 'tyx', 'tyz', 'tza', 'tzh', 'tzj', 'tzl', 'tzm', 'tzn', 'tzo', 'tzx', 'uam', 'uan', 'uar', 'uba', 'ubi', 'ubl', 'ubr', 'ubu', 'uby', 'uda', 'ude', 'udg', 'udi', 'udj', 'udl', 'udm', 'udu', 'ues', 'ufi', 'uga', 'ugb', 'uge', 'ugn', 'ugo', 'ugy', 'uha', 'uhn', 'uis', 'uiv', 'uji', 'uka', 'ukg', 'ukh', 'ukl', 'ukp', 'ukq', 'uks', 'uku', 'ukw', 'uky', 'ula', 'ulb', 'ulc', 'ule', 'ulf', 'uli', 'ulk', 'ull', 'ulm', 'uln', 'ulu', 'ulw', 'uma', 'umb', 'umc', 'umd', 'umg', 'umi', 'umm', 'umn', 'umo', 'ump', 'umr', 'ums', 'umu', 'una', 'und', 'une', 'ung', 'unk', 'unm', 'unn', 'unp', 'unr', 'unu', 'unx', 'unz', 'uok', 'upi', 'upv', 'ura', 'urb', 'urc', 'ure', 'urf', 'urg', 'urh', 'uri', 'urj', 'urk', 'url', 'urm', 'urn', 'uro', 'urp', 'urr', 'urt', 'uru', 'urv', 'urw', 'urx', 'ury', 'urz', 'usa', 'ush', 'usi', 'usk', 'usp', 'usu', 'uta', 'ute', 'utp', 'utr', 'utu', 'uum', 'uun', 'uur', 'uuu', 'uve', 'uvh', 'uvl', 'uwa', 'uya', 'uzn', 'uzs', 'vaa', 'vae', 'vaf', 'vag', 'vah', 'vai', 'vaj', 'val', 'vam', 'van', 'vao', 'vap', 'var', 'vas', 'vau', 'vav', 'vay', 'vbb', 'vbk', 'vec', 'ved', 'vel', 'vem', 'veo', 'vep', 'ver', 'vgr', 'vgt', 'vic', 'vid', 'vif', 'vig', 'vil', 'vin', 'vis', 'vit', 'viv', 'vka', 'vki', 'vkj', 'vkk', 'vkl', 'vkm', 'vko', 'vkp', 'vkt', 'vku', 'vlp', 'vls', 'vma', 'vmb', 'vmc', 'vmd', 'vme', 'vmf', 'vmg', 'vmh', 'vmi', 'vmj', 'vmk', 'vml', 'vmm', 'vmp', 'vmq', 'vmr', 'vms', 'vmu', 'vmv', 'vmw', 'vmx', 'vmy', 'vmz', 'vnk', 'vnm', 'vnp', 'vor', 'vot', 'vra', 'vro', 'vrs', 'vrt', 'vsi', 'vsl', 'vsv', 'vto', 'vum', 'vun', 'vut', 'vwa', 'waa', 'wab', 'wac', 'wad', 'wae', 'waf', 'wag', 'wah', 'wai', 'waj', 'wak', 'wal', 'wam', 'wan', 'wao', 'wap', 'waq', 'war', 'was', 'wat', 'wau', 'wav', 'waw', 'wax', 'way', 'waz', 'wba', 'wbb', 'wbe', 'wbf', 'wbh', 'wbi', 'wbj', 'wbk', 'wbl', 'wbm', 'wbp', 'wbq', 'wbr', 'wbt', 'wbv', 'wbw', 'wca', 'wci', 'wdd', 'wdg', 'wdj', 'wdk', 'wdu', 'wdy', 'wea', 'wec', 'wed', 'weg', 'weh', 'wei', 'wem', 'wen', 'weo', 'wep', 'wer', 'wes', 'wet', 'weu', 'wew', 'wfg', 'wga', 'wgb', 'wgg', 'wgi', 'wgo', 'wgu', 'wgw', 'wgy', 'wha', 'whg', 'whk', 'whu', 'wib', 'wic', 'wie', 'wif', 'wig', 'wih', 'wii', 'wij', 'wik', 'wil', 'wim', 'win', 'wir', 'wit', 'wiu', 'wiv', 'wiw', 'wiy', 'wja', 'wji', 'wka', 'wkb', 'wkd', 'wkl', 'wku', 'wkw', 'wky', 'wla', 'wlc', 'wle', 'wlg', 'wli', 'wlk', 'wll', 'wlm', 'wlo', 'wlr', 'wls', 'wlu', 'wlv', 'wlw', 'wlx', 'wly', 'wma', 'wmb', 'wmc', 'wmd', 'wme', 'wmh', 'wmi', 'wmm', 'wmn', 'wmo', 'wms', 'wmt', 'wmw', 'wmx', 'wnb', 'wnc', 'wnd', 'wne', 'wng', 'wni', 'wnk', 'wnm', 'wnn', 'wno', 'wnp', 'wnu', 'wnw', 'wny', 'woa', 'wob', 'woc', 'wod', 'woe', 'wof', 'wog', 'woi', 'wok', 'wom', 'won', 'woo', 'wor', 'wos', 'wow', 'woy', 'wpc', 'wra', 'wrb', 'wrd', 'wrg', 'wrh', 'wri', 'wrk', 'wrl', 'wrm', 'wrn', 'wro', 'wrp', 'wrr', 'wrs', 'wru', 'wrv', 'wrw', 'wrx', 'wry', 'wrz', 'wsa', 'wsg', 'wsi', 'wsk', 'wsr', 'wss', 'wsu', 'wsv', 'wtf', 'wth', 'wti', 'wtk', 'wtm', 'wtw', 'wua', 'wub', 'wud', 'wuh', 'wul', 'wum', 'wun', 'wur', 'wut', 'wuu', 'wuv', 'wux', 'wuy', 'wwa', 'wwb', 'wwo', 'wwr', 'www', 'wxa', 'wxw', 'wya', 'wyb', 'wyi', 'wym', 'wyr', 'wyy', 'xaa', 'xab', 'xac', 'xad', 'xae', 'xag', 'xai', 'xaj', 'xak', 'xal', 'xam', 'xan', 'xao', 'xap', 'xaq', 'xar', 'xas', 'xat', 'xau', 'xav', 'xaw', 'xay', 'xba', 'xbb', 'xbc', 'xbd', 'xbe', 'xbg', 'xbi', 'xbj', 'xbm', 'xbn', 'xbo', 'xbp', 'xbr', 'xbw', 'xbx', 'xby', 'xcb', 'xcc', 'xce', 'xcg', 'xch', 'xcl', 'xcm', 'xcn', 'xco', 'xcr', 'xct', 'xcu', 'xcv', 'xcw', 'xcy', 'xda', 'xdc', 'xdk', 'xdm', 'xdy', 'xeb', 'xed', 'xeg', 'xel', 'xem', 'xep', 'xer', 'xes', 'xet', 'xeu', 'xfa', 'xga', 'xgb', 'xgd', 'xgf', 'xgg', 'xgi', 'xgl', 'xgm', 'xgn', 'xgr', 'xgu', 'xgw', 'xha', 'xhc', 'xhd', 'xhe', 'xhr', 'xht', 'xhu', 'xhv', 'xia', 'xib', 'xii', 'xil', 'xin', 'xip', 'xir', 'xis', 'xiv', 'xiy', 'xjb', 'xjt', 'xka', 'xkb', 'xkc', 'xkd', 'xke', 'xkf', 'xkg', 'xkh', 'xki', 'xkj', 'xkk', 'xkl', 'xkn', 'xko', 'xkp', 'xkq', 'xkr', 'xks', 'xkt', 'xku', 'xkv', 'xkw', 'xkx', 'xky', 'xkz', 'xla', 'xlb', 'xlc', 'xld', 'xle', 'xlg', 'xli', 'xln', 'xlo', 'xlp', 'xls', 'xlu', 'xly', 'xma', 'xmb', 'xmc', 'xmd', 'xme', 'xmf', 'xmg', 'xmh', 'xmj', 'xmk', 'xml', 'xmm', 'xmn', 'xmo', 'xmp', 'xmq', 'xmr', 'xms', 'xmt', 'xmu', 'xmv', 'xmw', 'xmx', 'xmy', 'xmz', 'xna', 'xnb', 'xnd', 'xng', 'xnh', 'xni', 'xnk', 'xnn', 'xno', 'xnr', 'xns', 'xnt', 'xnu', 'xny', 'xnz', 'xoc', 'xod', 'xog', 'xoi', 'xok', 'xom', 'xon', 'xoo', 'xop', 'xor', 'xow', 'xpa', 'xpc', 'xpe', 'xpg', 'xpi', 'xpj', 'xpk', 'xpm', 'xpn', 'xpo', 'xpp', 'xpq', 'xpr', 'xps', 'xpt', 'xpu', 'xpy', 'xqa', 'xqt', 'xra', 'xrb', 'xrd', 'xre', 'xrg', 'xri', 'xrm', 'xrn', 'xrq', 'xrr', 'xrt', 'xru', 'xrw', 'xsa', 'xsb', 'xsc', 'xsd', 'xse', 'xsh', 'xsi', 'xsj', 'xsl', 'xsm', 'xsn', 'xso', 'xsp', 'xsq', 'xsr', 'xss', 'xsu', 'xsv', 'xsy', 'xta', 'xtb', 'xtc', 'xtd', 'xte', 'xtg', 'xth', 'xti', 'xtj', 'xtl', 'xtm', 'xtn', 'xto', 'xtp', 'xtq', 'xtr', 'xts', 'xtt', 'xtu', 'xtv', 'xtw', 'xty', 'xtz', 'xua', 'xub', 'xud', 'xug', 'xuj', 'xul', 'xum', 'xun', 'xuo', 'xup', 'xur', 'xut', 'xuu', 'xve', 'xvi', 'xvn', 'xvo', 'xvs', 'xwa', 'xwc', 'xwd', 'xwe', 'xwg', 'xwj', 'xwk', 'xwl', 'xwo', 'xwr', 'xwt', 'xww', 'xxb', 'xxk', 'xxm', 'xxr', 'xxt', 'xya', 'xyb', 'xyj', 'xyk', 'xyl', 'xyt', 'xyy', 'xzh', 'xzm', 'xzp', 'yaa', 'yab', 'yac', 'yad', 'yae', 'yaf', 'yag', 'yah', 'yai', 'yaj', 'yak', 'yal', 'yam', 'yan', 'yao', 'yap', 'yaq', 'yar', 'yas', 'yat', 'yau', 'yav', 'yaw', 'yax', 'yay', 'yaz', 'yba', 'ybb', 'ybd', 'ybe', 'ybh', 'ybi', 'ybj', 'ybk', 'ybl', 'ybm', 'ybn', 'ybo', 'ybx', 'yby', 'ych', 'ycl', 'ycn', 'ycp', 'yda', 'ydd', 'yde', 'ydg', 'ydk', 'yds', 'yea', 'yec', 'yee', 'yei', 'yej', 'yel', 'yen', 'yer', 'yes', 'yet', 'yeu', 'yev', 'yey', 'yga', 'ygi', 'ygl', 'ygm', 'ygp', 'ygr', 'ygs', 'ygu', 'ygw', 'yha', 'yhd', 'yhl', 'yhs', 'yia', 'yif', 'yig', 'yih', 'yii', 'yij', 'yik', 'yil', 'yim', 'yin', 'yip', 'yiq', 'yir', 'yis', 'yit', 'yiu', 'yiv', 'yix', 'yiy', 'yiz', 'yka', 'ykg', 'yki', 'ykk', 'ykl', 'ykm', 'ykn', 'yko', 'ykr', 'ykt', 'yku', 'yky', 'yla', 'ylb', 'yle', 'ylg', 'yli', 'yll', 'ylm', 'yln', 'ylo', 'ylr', 'ylu', 'yly', 'yma', 'ymb', 'ymc', 'ymd', 'yme', 'ymg', 'ymh', 'ymi', 'ymk', 'yml', 'ymm', 'ymn', 'ymo', 'ymp', 'ymq', 'ymr', 'yms', 'ymt', 'ymx', 'ymz', 'yna', 'ynd', 'yne', 'yng', 'ynh', 'ynk', 'ynl', 'ynn', 'yno', 'ynq', 'yns', 'ynu', 'yob', 'yog', 'yoi', 'yok', 'yol', 'yom', 'yon', 'yos', 'yot', 'yox', 'yoy', 'ypa', 'ypb', 'ypg', 'yph', 'ypk', 'ypm', 'ypn', 'ypo', 'ypp', 'ypz', 'yra', 'yrb', 'yre', 'yri', 'yrk', 'yrl', 'yrm', 'yrn', 'yro', 'yrs', 'yrw', 'yry', 'ysc', 'ysd', 'ysg', 'ysl', 'ysn', 'yso', 'ysp', 'ysr', 'yss', 'ysy', 'yta', 'ytl', 'ytp', 'ytw', 'yty', 'yua', 'yub', 'yuc', 'yud', 'yue', 'yuf', 'yug', 'yui', 'yuj', 'yuk', 'yul', 'yum', 'yun', 'yup', 'yuq', 'yur', 'yut', 'yuu', 'yuw', 'yux', 'yuy', 'yuz', 'yva', 'yvt', 'ywa', 'ywg', 'ywl', 'ywn', 'ywq', 'ywr', 'ywt', 'ywu', 'yww', 'yxa', 'yxg', 'yxl', 'yxm', 'yxu', 'yxy', 'yyr', 'yyu', 'yyz', 'yzg', 'yzk', 'zaa', 'zab', 'zac', 'zad', 'zae', 'zaf', 'zag', 'zah', 'zai', 'zaj', 'zak', 'zal', 'zam', 'zao', 'zap', 'zaq', 'zar', 'zas', 'zat', 'zau', 'zav', 'zaw', 'zax', 'zay', 'zaz', 'zbc', 'zbe', 'zbl', 'zbt', 'zbw', 'zca', 'zch', 'zdj', 'zea', 'zeg', 'zeh', 'zen', 'zga', 'zgb', 'zgh', 'zgm', 'zgn', 'zgr', 'zhb', 'zhd', 'zhi', 'zhn', 'zhw', 'zhx', 'zia', 'zib', 'zik', 'zil', 'zim', 'zin', 'zir', 'ziw', 'ziz', 'zka', 'zkb', 'zkd', 'zkg', 'zkh', 'zkk', 'zkn', 'zko', 'zkp', 'zkr', 'zkt', 'zku', 'zkv', 'zkz', 'zle', 'zlj', 'zlm', 'zln', 'zlq', 'zls', 'zlw', 'zma', 'zmb', 'zmc', 'zmd', 'zme', 'zmf', 'zmg', 'zmh', 'zmi', 'zmj', 'zmk', 'zml', 'zmm', 'zmn', 'zmo', 'zmp', 'zmq', 'zmr', 'zms', 'zmt', 'zmu', 'zmv', 'zmw', 'zmx', 'zmy', 'zmz', 'zna', 'znd', 'zne', 'zng', 'znk', 'zns', 'zoc', 'zoh', 'zom', 'zoo', 'zoq', 'zor', 'zos', 'zpa', 'zpb', 'zpc', 'zpd', 'zpe', 'zpf', 'zpg', 'zph', 'zpi', 'zpj', 'zpk', 'zpl', 'zpm', 'zpn', 'zpo', 'zpp', 'zpq', 'zpr', 'zps', 'zpt', 'zpu', 'zpv', 'zpw', 'zpx', 'zpy', 'zpz', 'zqe', 'zra', 'zrg', 'zrn', 'zro', 'zrp', 'zrs', 'zsa', 'zsk', 'zsl', 'zsm', 'zsr', 'zsu', 'zte', 'ztg', 'ztl', 'ztm', 'ztn', 'ztp', 'ztq', 'zts', 'ztt', 'ztu', 'ztx', 'zty', 'zua', 'zuh', 'zum', 'zun', 'zuy', 'zwa', 'zxx', 'zyb', 'zyg', 'zyj', 'zyn', 'zyp', 'zza', 'zzj' ],\n      evaluate: function evaluate(node, options) {\n        function getBaseLang(lang) {\n          return lang.trim().split('-')[0].toLowerCase();\n        }\n        var langs, invalid;\n        langs = (options || []).map(getBaseLang);\n        invalid = [ 'lang', 'xml:lang' ].reduce(function(invalid, langAttr) {\n          var langVal = node.getAttribute(langAttr);\n          if (typeof langVal !== 'string') {\n            return invalid;\n          }\n          var baselangVal = getBaseLang(langVal);\n          if (baselangVal !== '' && langs.indexOf(baselangVal) === -1) {\n            invalid.push(langAttr + '=\"' + node.getAttribute(langAttr) + '\"');\n          }\n          return invalid;\n        }, []);\n        if (invalid.length) {\n          this.data(invalid);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'dlitem',\n      evaluate: function evaluate(node, options) {\n        return node.parentNode.tagName === 'DL';\n      }\n    }, {\n      id: 'has-listitem',\n      evaluate: function evaluate(node, options) {\n        var children = node.children;\n        if (children.length === 0) {\n          return true;\n        }\n        for (var i = 0; i < children.length; i++) {\n          if (children[i].nodeName.toUpperCase() === 'LI') {\n            return false;\n          }\n        }\n        return true;\n      }\n    }, {\n      id: 'listitem',\n      evaluate: function evaluate(node, options) {\n        if ([ 'UL', 'OL' ].indexOf(node.parentNode.nodeName.toUpperCase()) !== -1) {\n          return true;\n        }\n        return node.parentNode.getAttribute('role') === 'list';\n      }\n    }, {\n      id: 'only-dlitems',\n      evaluate: function evaluate(node, options) {\n        var child, nodeName, bad = [], children = node.childNodes, permitted = [ 'STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE' ], hasNonEmptyTextNode = false;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          var nodeName = child.nodeName.toUpperCase();\n          if (child.nodeType === 1 && nodeName !== 'DT' && nodeName !== 'DD' && permitted.indexOf(nodeName) === -1) {\n            bad.push(child);\n          } else if (child.nodeType === 3 && child.nodeValue.trim() !== '') {\n            hasNonEmptyTextNode = true;\n          }\n        }\n        if (bad.length) {\n          this.relatedNodes(bad);\n        }\n        var retVal = !!bad.length || hasNonEmptyTextNode;\n        return retVal;\n      }\n    }, {\n      id: 'only-listitems',\n      evaluate: function evaluate(node, options) {\n        var child, nodeName, bad = [], children = node.childNodes, permitted = [ 'STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE' ], hasNonEmptyTextNode = false;\n        for (var i = 0; i < children.length; i++) {\n          child = children[i];\n          nodeName = child.nodeName.toUpperCase();\n          if (child.nodeType === 1 && nodeName !== 'LI' && permitted.indexOf(nodeName) === -1) {\n            bad.push(child);\n          } else if (child.nodeType === 3 && child.nodeValue.trim() !== '') {\n            hasNonEmptyTextNode = true;\n          }\n        }\n        if (bad.length) {\n          this.relatedNodes(bad);\n        }\n        return !!bad.length || hasNonEmptyTextNode;\n      }\n    }, {\n      id: 'structured-dlitems',\n      evaluate: function evaluate(node, options) {\n        var children = node.children;\n        if (!children || !children.length) {\n          return false;\n        }\n        var hasDt = false, hasDd = false, nodeName;\n        for (var i = 0; i < children.length; i++) {\n          nodeName = children[i].nodeName.toUpperCase();\n          if (nodeName === 'DT') {\n            hasDt = true;\n          }\n          if (hasDt && nodeName === 'DD') {\n            return false;\n          }\n          if (nodeName === 'DD') {\n            hasDd = true;\n          }\n        }\n        return hasDt || hasDd;\n      }\n    }, {\n      id: 'caption',\n      evaluate: function evaluate(node, options) {\n        var tracks = node.querySelectorAll('track');\n        if (tracks.length) {\n          for (var i = 0; i < tracks.length; i++) {\n            var kind = tracks[i].getAttribute('kind');\n            if (kind && kind === 'captions') {\n              return false;\n            }\n          }\n          return true;\n        }\n        return undefined;\n      }\n    }, {\n      id: 'description',\n      evaluate: function evaluate(node, options) {\n        var tracks = node.querySelectorAll('track');\n        if (tracks.length) {\n          for (var i = 0; i < tracks.length; i++) {\n            var kind = tracks[i].getAttribute('kind');\n            if (kind && kind === 'descriptions') {\n              return false;\n            }\n          }\n          return true;\n        }\n        return undefined;\n      }\n    }, {\n      id: 'meta-viewport-large',\n      evaluate: function evaluate(node, options) {\n        options = options || {};\n        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n        for (var i = 0, l = parsedParams.length; i < l; i++) {\n          params = parsedParams[i].split('=');\n          var key = params.shift().toLowerCase();\n          if (key && params.length) {\n            result[key.trim()] = params.shift().trim().toLowerCase();\n          }\n        }\n        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n          return true;\n        }\n        if (!lowerBound && result['user-scalable'] === 'no') {\n          return false;\n        }\n        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n          return false;\n        }\n        return true;\n      },\n      options: {\n        scaleMinimum: 5,\n        lowerBound: 2\n      }\n    }, {\n      id: 'meta-viewport',\n      evaluate: function evaluate(node, options) {\n        options = options || {};\n        var params, content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/), result = {}, minimum = options.scaleMinimum || 2, lowerBound = options.lowerBound || false;\n        for (var i = 0, l = parsedParams.length; i < l; i++) {\n          params = parsedParams[i].split('=');\n          var key = params.shift().toLowerCase();\n          if (key && params.length) {\n            result[key.trim()] = params.shift().trim().toLowerCase();\n          }\n        }\n        if (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n          return true;\n        }\n        if (!lowerBound && result['user-scalable'] === 'no') {\n          return false;\n        }\n        if (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n          return false;\n        }\n        return true;\n      },\n      options: {\n        scaleMinimum: 2\n      }\n    }, {\n      id: 'header-present',\n      evaluate: function evaluate(node, options) {\n        return !!node.querySelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n      }\n    }, {\n      id: 'heading-order',\n      evaluate: function evaluate(node, options) {\n        var ariaHeadingLevel = node.getAttribute('aria-level');\n        if (ariaHeadingLevel !== null) {\n          this.data(parseInt(ariaHeadingLevel, 10));\n          return true;\n        }\n        var headingLevel = node.tagName.match(/H(\\d)/);\n        if (headingLevel) {\n          this.data(parseInt(headingLevel[1], 10));\n          return true;\n        }\n        return true;\n      },\n      after: function after(results, options) {\n        if (results.length < 2) {\n          return results;\n        }\n        var prevLevel = results[0].data;\n        for (var i = 1; i < results.length; i++) {\n          if (results[i].result && results[i].data > prevLevel + 1) {\n            results[i].result = false;\n          }\n          prevLevel = results[i].data;\n        }\n        return results;\n      }\n    }, {\n      id: 'href-no-hash',\n      evaluate: function evaluate(node, options) {\n        var href = node.getAttribute('href');\n        if (href === '#') {\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'internal-link-present',\n      evaluate: function evaluate(node, options) {\n        return !!node.querySelector('a[href^=\"#\"]');\n      }\n    }, {\n      id: 'landmark',\n      evaluate: function evaluate(node, options) {\n        return node.getElementsByTagName('main').length > 0 || !!node.querySelector('[role=\"main\"]');\n      }\n    }, {\n      id: 'meta-refresh',\n      evaluate: function evaluate(node, options) {\n        var content = node.getAttribute('content') || '', parsedParams = content.split(/[;,]/);\n        return content === '' || parsedParams[0] === '0';\n      }\n    }, {\n      id: 'p-as-heading',\n      evaluate: function evaluate(node, options) {\n        var siblings = Array.from(node.parentNode.children);\n        var currentIndex = siblings.indexOf(node);\n        options = options || {};\n        var margins = options.margins || [];\n        var nextSibling = siblings.slice(currentIndex + 1).find(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P';\n        });\n        var prevSibling = siblings.slice(0, currentIndex).reverse().find(function(elm) {\n          return elm.nodeName.toUpperCase() === 'P';\n        });\n        function getTextContainer(elm) {\n          var nextNode = elm;\n          var outerText = elm.textContent.trim();\n          var innerText = outerText;\n          while (innerText === outerText && nextNode !== undefined) {\n            var i = -1;\n            elm = nextNode;\n            if (elm.children.length === 0) {\n              return elm;\n            }\n            do {\n              i++;\n              innerText = elm.children[i].textContent.trim();\n            } while (innerText === '' && i + 1 < elm.children.length);\n            nextNode = elm.children[i];\n          }\n          return elm;\n        }\n        function normalizeFontWeight(weight) {\n          switch (weight) {\n           case 'lighter':\n            return 100;\n\n           case 'normal':\n            return 400;\n\n           case 'bold':\n            return 700;\n\n           case 'bolder':\n            return 900;\n          }\n          weight = parseInt(weight);\n          return !isNaN(weight) ? weight : 400;\n        }\n        function getStyleValues(node) {\n          var style = window.getComputedStyle(getTextContainer(node));\n          return {\n            fontWeight: normalizeFontWeight(style.getPropertyValue('font-weight')),\n            fontSize: parseInt(style.getPropertyValue('font-size')),\n            isItalic: style.getPropertyValue('font-style') === 'italic'\n          };\n        }\n        function isHeaderStyle(styleA, styleB, margins) {\n          return margins.reduce(function(out, margin) {\n            return out || (!margin.size || styleA.fontSize / margin.size > styleB.fontSize) && (!margin.weight || styleA.fontWeight - margin.weight > styleB.fontWeight) && (!margin.italic || styleA.isItalic && !styleB.isItalic);\n          }, false);\n        }\n        var currStyle = getStyleValues(node);\n        var nextStyle = nextSibling ? getStyleValues(nextSibling) : null;\n        var prevStyle = prevSibling ? getStyleValues(prevSibling) : null;\n        if (!nextStyle || !isHeaderStyle(currStyle, nextStyle, margins)) {\n          return true;\n        }\n        var blockquote = axe.commons.dom.findUp(node, 'blockquote');\n        if (blockquote && blockquote.nodeName.toUpperCase() === 'BLOCKQUOTE') {\n          return undefined;\n        }\n        if (prevStyle && !isHeaderStyle(currStyle, prevStyle, margins)) {\n          return undefined;\n        }\n        return false;\n      },\n      options: {\n        margins: [ {\n          weight: 150,\n          italic: true\n        }, {\n          weight: 150,\n          size: 1.15\n        }, {\n          italic: true,\n          size: 1.15\n        }, {\n          size: 1.4\n        } ]\n      }\n    }, {\n      id: 'region',\n      evaluate: function evaluate(node, options) {\n        var landmarkRoles = axe.commons.aria.getRolesByType('landmark'), firstLink = node.querySelector('a[href]');\n        function isSkipLink(n) {\n          return firstLink && axe.commons.dom.isFocusable(axe.commons.dom.getElementByReference(firstLink, 'href')) && firstLink === n;\n        }\n        function isLandmark(n) {\n          var role = n.getAttribute('role');\n          return role && landmarkRoles.indexOf(role) !== -1;\n        }\n        function checkRegion(n) {\n          if (isLandmark(n)) {\n            return null;\n          }\n          if (isSkipLink(n)) {\n            return getViolatingChildren(n);\n          }\n          if (axe.commons.dom.isVisible(n, true) && (axe.commons.text.visible(n, true, true) || axe.commons.dom.isVisualContent(n))) {\n            return n;\n          }\n          return getViolatingChildren(n);\n        }\n        function getViolatingChildren(n) {\n          var children = axe.commons.utils.toArray(n.children);\n          if (children.length === 0) {\n            return [];\n          }\n          return children.map(checkRegion).filter(function(c) {\n            return c !== null;\n          }).reduce(function(a, b) {\n            return a.concat(b);\n          }, []);\n        }\n        var v = getViolatingChildren(node);\n        this.relatedNodes(v);\n        return !v.length;\n      },\n      after: function after(results, options) {\n        return [ results[0] ];\n      }\n    }, {\n      id: 'skip-link',\n      evaluate: function evaluate(node, options) {\n        return axe.commons.dom.isFocusable(axe.commons.dom.getElementByReference(node, 'href'));\n      },\n      after: function after(results, options) {\n        return [ results[0] ];\n      }\n    }, {\n      id: 'unique-frame-title',\n      evaluate: function evaluate(node, options) {\n        var title = axe.commons.text.sanitize(node.title).trim().toLowerCase();\n        this.data(title);\n        return true;\n      },\n      after: function after(results, options) {\n        var titles = {};\n        results.forEach(function(r) {\n          titles[r.data] = titles[r.data] !== undefined ? ++titles[r.data] : 0;\n        });\n        results.forEach(function(r) {\n          r.result = !!titles[r.data];\n        });\n        return results;\n      }\n    }, {\n      id: 'aria-label',\n      evaluate: function evaluate(node, options) {\n        var label = node.getAttribute('aria-label');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'aria-labelledby',\n      evaluate: function evaluate(node, options) {\n        var getIdRefs = axe.commons.dom.idrefs;\n        return getIdRefs(node, 'aria-labelledby').some(function(elm) {\n          return elm && axe.commons.text.accessibleText(elm, true);\n        });\n      }\n    }, {\n      id: 'button-has-visible-text',\n      evaluate: function evaluate(node, options) {\n        var nodeName = node.nodeName.toUpperCase();\n        var role = node.getAttribute('role');\n        var label = void 0;\n        if (nodeName === 'BUTTON' || role === 'button' && nodeName !== 'INPUT') {\n          label = axe.commons.text.accessibleText(node);\n          this.data(label);\n          return !!label;\n        } else {\n          return false;\n        }\n      }\n    }, {\n      id: 'doc-has-title',\n      evaluate: function evaluate(node, options) {\n        var title = document.title;\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      }\n    }, {\n      id: 'duplicate-id',\n      evaluate: function evaluate(node, options) {\n        if (!node.id.trim()) {\n          return true;\n        }\n        var matchingNodes = document.querySelectorAll('[id=\"' + axe.commons.utils.escapeSelector(node.id) + '\"]');\n        var related = [];\n        for (var i = 0; i < matchingNodes.length; i++) {\n          if (matchingNodes[i] !== node) {\n            related.push(matchingNodes[i]);\n          }\n        }\n        if (related.length) {\n          this.relatedNodes(related);\n        }\n        this.data(node.getAttribute('id'));\n        return matchingNodes.length <= 1;\n      },\n      after: function after(results, options) {\n        var uniqueIds = [];\n        return results.filter(function(r) {\n          if (uniqueIds.indexOf(r.data) === -1) {\n            uniqueIds.push(r.data);\n            return true;\n          }\n          return false;\n        });\n      }\n    }, {\n      id: 'exists',\n      evaluate: function evaluate(node, options) {\n        return true;\n      }\n    }, {\n      id: 'has-alt',\n      evaluate: function evaluate(node, options) {\n        var nn = node.nodeName.toLowerCase();\n        return node.hasAttribute('alt') && (nn === 'img' || nn === 'input' || nn === 'area');\n      }\n    }, {\n      id: 'has-visible-text',\n      evaluate: function evaluate(node, options) {\n        return axe.commons.text.accessibleText(node).length > 0;\n      }\n    }, {\n      id: 'is-on-screen',\n      evaluate: function evaluate(node, options) {\n        return axe.commons.dom.isVisible(node, false) && !axe.commons.dom.isOffscreen(node);\n      }\n    }, {\n      id: 'non-empty-alt',\n      evaluate: function evaluate(node, options) {\n        var label = node.getAttribute('alt');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'non-empty-if-present',\n      evaluate: function evaluate(node, options) {\n        var nodeName = node.nodeName.toUpperCase();\n        var type = (node.getAttribute('type') || '').toLowerCase();\n        var label = node.getAttribute('value');\n        this.data(label);\n        if (nodeName === 'INPUT' && [ 'submit', 'reset' ].indexOf(type) !== -1) {\n          return label === null;\n        }\n        return false;\n      }\n    }, {\n      id: 'non-empty-title',\n      evaluate: function evaluate(node, options) {\n        var title = node.getAttribute('title');\n        return !!(title ? axe.commons.text.sanitize(title).trim() : '');\n      }\n    }, {\n      id: 'non-empty-value',\n      evaluate: function evaluate(node, options) {\n        var label = node.getAttribute('value');\n        return !!(label ? axe.commons.text.sanitize(label).trim() : '');\n      }\n    }, {\n      id: 'role-none',\n      evaluate: function evaluate(node, options) {\n        return node.getAttribute('role') === 'none';\n      }\n    }, {\n      id: 'role-presentation',\n      evaluate: function evaluate(node, options) {\n        return node.getAttribute('role') === 'presentation';\n      }\n    }, {\n      id: 'caption-faked',\n      evaluate: function evaluate(node, options) {\n        var table = axe.commons.table.toGrid(node);\n        var firstRow = table[0];\n        if (table.length <= 1 || firstRow.length <= 1 || node.rows.length <= 1) {\n          return true;\n        }\n        return firstRow.reduce(function(out, curr, i) {\n          return out || curr !== firstRow[i + 1] && firstRow[i + 1] !== undefined;\n        }, false);\n      }\n    }, {\n      id: 'has-caption',\n      evaluate: function evaluate(node, options) {\n        return !!node.caption;\n      }\n    }, {\n      id: 'has-summary',\n      evaluate: function evaluate(node, options) {\n        return !!node.summary;\n      }\n    }, {\n      id: 'has-th',\n      evaluate: function evaluate(node, options) {\n        var row, cell, badCells = [];\n        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cell = row.cells[cellIndex];\n            if (cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1) {\n              badCells.push(cell);\n            }\n          }\n        }\n        if (badCells.length) {\n          this.relatedNodes(badCells);\n          return true;\n        }\n        return false;\n      }\n    }, {\n      id: 'html5-scope',\n      evaluate: function evaluate(node, options) {\n        if (!axe.commons.dom.isHTML5(document)) {\n          return true;\n        }\n        return node.nodeName.toUpperCase() === 'TH';\n      }\n    }, {\n      id: 'same-caption-summary',\n      evaluate: function evaluate(node, options) {\n        return !!(node.summary && node.caption) && node.summary === axe.commons.text.accessibleText(node.caption);\n      }\n    }, {\n      id: 'scope-value',\n      evaluate: function evaluate(node, options) {\n        options = options || {};\n        var value = node.getAttribute('scope').toLowerCase();\n        var validVals = [ 'row', 'col', 'rowgroup', 'colgroup' ] || options.values;\n        return validVals.indexOf(value) !== -1;\n      }\n    }, {\n      id: 'td-has-header',\n      evaluate: function evaluate(node, options) {\n        var tableUtils = axe.commons.table;\n        var badCells = [];\n        var cells = tableUtils.getAllCells(node);\n        cells.forEach(function(cell) {\n          if (axe.commons.dom.hasContent(cell) && tableUtils.isDataCell(cell) && !axe.commons.aria.label(cell)) {\n            var hasHeaders = tableUtils.getHeaders(cell);\n            hasHeaders = hasHeaders.reduce(function(hasHeaders, header) {\n              return hasHeaders || header !== null && !!axe.commons.dom.hasContent(header);\n            }, false);\n            if (!hasHeaders) {\n              badCells.push(cell);\n            }\n          }\n        });\n        if (badCells.length) {\n          this.relatedNodes(badCells);\n          return false;\n        }\n        return true;\n      }\n    }, {\n      id: 'td-headers-attr',\n      evaluate: function evaluate(node, options) {\n        var cells = [];\n        for (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n          var row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cells.push(row.cells[cellIndex]);\n          }\n        }\n        var ids = cells.reduce(function(ids, cell) {\n          if (cell.id) {\n            ids.push(cell.id);\n          }\n          return ids;\n        }, []);\n        var badCells = cells.reduce(function(badCells, cell) {\n          var isSelf, notOfTable;\n          var headers = (cell.getAttribute('headers') || '').split(/\\s/).reduce(function(headers, header) {\n            header = header.trim();\n            if (header) {\n              headers.push(header);\n            }\n            return headers;\n          }, []);\n          if (headers.length !== 0) {\n            if (cell.id) {\n              isSelf = headers.indexOf(cell.id.trim()) !== -1;\n            }\n            notOfTable = headers.reduce(function(fail, header) {\n              return fail || ids.indexOf(header) === -1;\n            }, false);\n            if (isSelf || notOfTable) {\n              badCells.push(cell);\n            }\n          }\n          return badCells;\n        }, []);\n        if (badCells.length > 0) {\n          this.relatedNodes(badCells);\n          return false;\n        } else {\n          return true;\n        }\n      }\n    }, {\n      id: 'th-has-data-cells',\n      evaluate: function evaluate(node, options) {\n        var tableUtils = axe.commons.table;\n        var cells = tableUtils.getAllCells(node);\n        var checkResult = this;\n        var reffedHeaders = [];\n        cells.forEach(function(cell) {\n          var headers = cell.getAttribute('headers');\n          if (headers) {\n            reffedHeaders = reffedHeaders.concat(headers.split(/\\s+/));\n          }\n          var ariaLabel = cell.getAttribute('aria-labelledby');\n          if (ariaLabel) {\n            reffedHeaders = reffedHeaders.concat(ariaLabel.split(/\\s+/));\n          }\n        });\n        var headers = cells.filter(function(cell) {\n          if (axe.commons.text.sanitize(cell.textContent) === '') {\n            return false;\n          }\n          return cell.nodeName.toUpperCase() === 'TH' || [ 'rowheader', 'columnheader' ].indexOf(cell.getAttribute('role')) !== -1;\n        });\n        var tableGrid = tableUtils.toGrid(node);\n        var out = headers.reduce(function(res, header) {\n          if (header.id && reffedHeaders.indexOf(header.id) !== -1) {\n            return !res ? res : true;\n          }\n          var hasCell = false;\n          var pos = tableUtils.getCellPosition(header, tableGrid);\n          if (tableUtils.isColumnHeader(header)) {\n            hasCell = tableUtils.traverse('down', pos, tableGrid).reduce(function(out, cell) {\n              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isColumnHeader(cell);\n            }, false);\n          }\n          if (!hasCell && tableUtils.isRowHeader(header)) {\n            hasCell = tableUtils.traverse('right', pos, tableGrid).reduce(function(out, cell) {\n              return out || axe.commons.dom.hasContent(cell) && !tableUtils.isRowHeader(cell);\n            }, false);\n          }\n          if (!hasCell) {\n            checkResult.relatedNodes(header);\n          }\n          return res && hasCell;\n        }, true);\n        return out ? true : undefined;\n      }\n    } ],\n    commons: function() {\n      var commons = {};\n      var aria = commons.aria = {}, lookupTables = aria._lut = {};\n      lookupTables.attributes = {\n        'aria-activedescendant': {\n          type: 'idref'\n        },\n        'aria-atomic': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-autocomplete': {\n          type: 'nmtoken',\n          values: [ 'inline', 'list', 'both', 'none' ]\n        },\n        'aria-busy': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-checked': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'mixed', 'undefined' ]\n        },\n        'aria-colcount': {\n          type: 'int'\n        },\n        'aria-colindex': {\n          type: 'int'\n        },\n        'aria-colspan': {\n          type: 'int'\n        },\n        'aria-controls': {\n          type: 'idrefs'\n        },\n        'aria-current': {\n          type: 'nmtoken',\n          values: [ 'page', 'step', 'location', 'date', 'time', 'true', 'false' ]\n        },\n        'aria-describedby': {\n          type: 'idrefs'\n        },\n        'aria-disabled': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-dropeffect': {\n          type: 'nmtokens',\n          values: [ 'copy', 'move', 'reference', 'execute', 'popup', 'none' ]\n        },\n        'aria-expanded': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ]\n        },\n        'aria-flowto': {\n          type: 'idrefs'\n        },\n        'aria-grabbed': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ]\n        },\n        'aria-haspopup': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-hidden': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-invalid': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'spelling', 'grammar' ]\n        },\n        'aria-label': {\n          type: 'string'\n        },\n        'aria-labelledby': {\n          type: 'idrefs'\n        },\n        'aria-level': {\n          type: 'int'\n        },\n        'aria-live': {\n          type: 'nmtoken',\n          values: [ 'off', 'polite', 'assertive' ]\n        },\n        'aria-multiline': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-multiselectable': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-orientation': {\n          type: 'nmtoken',\n          values: [ 'horizontal', 'vertical' ]\n        },\n        'aria-owns': {\n          type: 'idrefs'\n        },\n        'aria-posinset': {\n          type: 'int'\n        },\n        'aria-pressed': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'mixed', 'undefined' ]\n        },\n        'aria-readonly': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-relevant': {\n          type: 'nmtokens',\n          values: [ 'additions', 'removals', 'text', 'all' ]\n        },\n        'aria-required': {\n          type: 'boolean',\n          values: [ 'true', 'false' ]\n        },\n        'aria-rowcount': {\n          type: 'int'\n        },\n        'aria-rowindex': {\n          type: 'int'\n        },\n        'aria-rowspan': {\n          type: 'int'\n        },\n        'aria-selected': {\n          type: 'nmtoken',\n          values: [ 'true', 'false', 'undefined' ]\n        },\n        'aria-setsize': {\n          type: 'int'\n        },\n        'aria-sort': {\n          type: 'nmtoken',\n          values: [ 'ascending', 'descending', 'other', 'none' ]\n        },\n        'aria-valuemax': {\n          type: 'decimal'\n        },\n        'aria-valuemin': {\n          type: 'decimal'\n        },\n        'aria-valuenow': {\n          type: 'decimal'\n        },\n        'aria-valuetext': {\n          type: 'string'\n        }\n      };\n      lookupTables.globalAttributes = [ 'aria-atomic', 'aria-busy', 'aria-controls', 'aria-current', 'aria-describedby', 'aria-disabled', 'aria-dropeffect', 'aria-flowto', 'aria-grabbed', 'aria-haspopup', 'aria-hidden', 'aria-invalid', 'aria-label', 'aria-labelledby', 'aria-live', 'aria-owns', 'aria-relevant' ];\n      lookupTables.role = {\n        alert: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        alertdialog: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        application: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        article: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'article' ]\n        },\n        banner: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'header' ]\n        },\n        button: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-pressed' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'button', 'input[type=\"button\"]', 'input[type=\"image\"]', 'input[type=\"reset\"]', 'input[type=\"submit\"]', 'summary' ]\n        },\n        cell: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colindex', 'aria-colspan', 'aria-rowindex', 'aria-rowspan' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'td', 'th' ]\n        },\n        checkbox: {\n          type: 'widget',\n          attributes: {\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'input[type=\"checkbox\"]' ]\n        },\n        columnheader: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-sort', 'aria-readonly', 'aria-selected', 'aria-required' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'th' ]\n        },\n        combobox: {\n          type: 'composite',\n          attributes: {\n            required: [ 'aria-expanded' ],\n            allowed: [ 'aria-autocomplete', 'aria-required', 'aria-activedescendant' ]\n          },\n          owned: {\n            all: [ 'listbox', 'textbox' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        command: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        complementary: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'aside' ]\n        },\n        composite: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        contentinfo: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'footer' ]\n        },\n        definition: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'dd' ]\n        },\n        dialog: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'dialog' ]\n        },\n        directory: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        document: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'body' ]\n        },\n        form: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'form' ]\n        },\n        grid: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'table' ]\n        },\n        gridcell: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-readonly', 'aria-expanded', 'aria-required' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'td', 'th' ]\n        },\n        group: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'details', 'optgroup' ]\n        },\n        heading: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-level', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'h1', 'h2', 'h3', 'h4', 'h5', 'h6' ]\n        },\n        img: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'img' ]\n        },\n        input: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        landmark: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        link: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'a[href]' ]\n        },\n        list: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'listitem' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'ol', 'ul', 'dl' ]\n        },\n        listbox: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'option' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'select' ]\n        },\n        listitem: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-level', 'aria-posinset', 'aria-setsize', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'list' ],\n          implicit: [ 'li', 'dt' ]\n        },\n        log: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        main: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'main' ]\n        },\n        marquee: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        math: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'math' ]\n        },\n        menu: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: {\n            one: [ 'menuitem', 'menuitemradio', 'menuitemcheckbox' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'menu[type=\"context\"]' ]\n        },\n        menubar: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        menuitem: {\n          type: 'widget',\n          attributes: null,\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"command\"]' ]\n        },\n        menuitemcheckbox: {\n          type: 'widget',\n          attributes: {\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"checkbox\"]' ]\n        },\n        menuitemradio: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-posinset', 'aria-setsize' ],\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'menu', 'menubar' ],\n          implicit: [ 'menuitem[type=\"radio\"]' ]\n        },\n        navigation: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'nav' ]\n        },\n        none: {\n          type: 'structure',\n          attributes: null,\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        note: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        option: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-posinset', 'aria-setsize', 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'listbox' ],\n          implicit: [ 'option' ]\n        },\n        presentation: {\n          type: 'structure',\n          attributes: null,\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        progressbar: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'progress' ]\n        },\n        radio: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-posinset', 'aria-setsize' ],\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null,\n          implicit: [ 'input[type=\"radio\"]' ]\n        },\n        radiogroup: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-required', 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'radio' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        range: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        region: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'section' ]\n        },\n        roletype: {\n          type: 'abstract'\n        },\n        row: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-level', 'aria-selected', 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: {\n            one: [ 'cell', 'columnheader', 'rowheader', 'gridcell' ]\n          },\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'rowgroup', 'grid', 'treegrid', 'table' ],\n          implicit: [ 'tr' ]\n        },\n        rowgroup: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'row' ]\n          },\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'grid', 'table' ],\n          implicit: [ 'tbody', 'thead', 'tfoot' ]\n        },\n        rowheader: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-sort', 'aria-required', 'aria-readonly', 'aria-expanded', 'aria-selected' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'row' ],\n          implicit: [ 'th' ]\n        },\n        scrollbar: {\n          type: 'widget',\n          attributes: {\n            required: [ 'aria-controls', 'aria-orientation', 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ],\n            allowed: [ 'aria-valuetext' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        search: {\n          type: 'landmark',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        searchbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"search\"]' ]\n        },\n        section: {\n          nameFrom: [ 'author', 'contents' ],\n          type: 'abstract'\n        },\n        sectionhead: {\n          nameFrom: [ 'author', 'contents' ],\n          type: 'abstract'\n        },\n        select: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        },\n        separator: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-expanded', 'aria-orientation' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'hr' ]\n        },\n        slider: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-orientation' ],\n            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"range\"]' ]\n        },\n        spinbutton: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-valuetext', 'aria-required' ],\n            required: [ 'aria-valuenow', 'aria-valuemax', 'aria-valuemin' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"number\"]' ]\n        },\n        status: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'output' ]\n        },\n        structure: {\n          type: 'abstract'\n        },\n        switch: {\n          type: 'widget',\n          attributes: {\n            required: [ 'aria-checked' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        tab: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-selected', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'tablist' ]\n        },\n        table: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-colcount', 'aria-rowcount' ]\n          },\n          owned: {\n            one: [ 'rowgroup', 'row' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'table' ]\n        },\n        tablist: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-level', 'aria-multiselectable' ]\n          },\n          owned: {\n            all: [ 'tab' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        tabpanel: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        text: {\n          type: 'structure',\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        textbox: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-autocomplete', 'aria-multiline', 'aria-readonly', 'aria-required' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'input[type=\"text\"]', 'input[type=\"email\"]', 'input[type=\"password\"]', 'input[type=\"tel\"]', 'input[type=\"url\"]', 'input:not([type])', 'textarea' ]\n        },\n        timer: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        toolbar: {\n          type: 'structure',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author' ],\n          context: null,\n          implicit: [ 'menu[type=\"toolbar\"]' ]\n        },\n        tooltip: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-expanded' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: null\n        },\n        tree: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-multiselectable', 'aria-required', 'aria-expanded' ]\n          },\n          owned: {\n            all: [ 'treeitem' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        treegrid: {\n          type: 'composite',\n          attributes: {\n            allowed: [ 'aria-activedescendant', 'aria-expanded', 'aria-level', 'aria-multiselectable', 'aria-readonly', 'aria-required' ]\n          },\n          owned: {\n            all: [ 'treeitem' ]\n          },\n          nameFrom: [ 'author' ],\n          context: null\n        },\n        treeitem: {\n          type: 'widget',\n          attributes: {\n            allowed: [ 'aria-checked', 'aria-selected', 'aria-expanded', 'aria-level', 'aria-posinset', 'aria-setsize' ]\n          },\n          owned: null,\n          nameFrom: [ 'author', 'contents' ],\n          context: [ 'treegrid', 'tree' ]\n        },\n        widget: {\n          type: 'abstract'\n        },\n        window: {\n          nameFrom: [ 'author' ],\n          type: 'abstract'\n        }\n      };\n      var color = {};\n      commons.color = color;\n      var dom = commons.dom = {};\n      var table = commons.table = {};\n      var text = commons.text = {};\n      var utils = commons.utils = axe.utils;\n      aria.requiredAttr = function(role) {\n        'use strict';\n        var roles = lookupTables.role[role], attr = roles && roles.attributes && roles.attributes.required;\n        return attr || [];\n      };\n      aria.allowedAttr = function(role) {\n        'use strict';\n        var roles = lookupTables.role[role], attr = roles && roles.attributes && roles.attributes.allowed || [], requiredAttr = roles && roles.attributes && roles.attributes.required || [];\n        return attr.concat(lookupTables.globalAttributes).concat(requiredAttr);\n      };\n      aria.validateAttr = function(att) {\n        'use strict';\n        return !!lookupTables.attributes[att];\n      };\n      aria.validateAttrValue = function(node, attr) {\n        'use strict';\n        var matches, list, doc = document, value = node.getAttribute(attr), attrInfo = lookupTables.attributes[attr];\n        if (!attrInfo) {\n          return true;\n        }\n        switch (attrInfo.type) {\n         case 'boolean':\n         case 'nmtoken':\n          return typeof value === 'string' && attrInfo.values.indexOf(value.toLowerCase()) !== -1;\n\n         case 'nmtokens':\n          list = axe.utils.tokenList(value);\n          return list.reduce(function(result, token) {\n            return result && attrInfo.values.indexOf(token) !== -1;\n          }, list.length !== 0);\n\n         case 'idref':\n          return !!(value && doc.getElementById(value));\n\n         case 'idrefs':\n          list = axe.utils.tokenList(value);\n          return list.reduce(function(result, token) {\n            return !!(result && doc.getElementById(token));\n          }, list.length !== 0);\n\n         case 'string':\n          return true;\n\n         case 'decimal':\n          matches = value.match(/^[-+]?([0-9]*)\\.?([0-9]*)$/);\n          return !!(matches && (matches[1] || matches[2]));\n\n         case 'int':\n          return /^[-+]?[0-9]+$/.test(value);\n        }\n      };\n      aria.label = function(node) {\n        var ref, candidate;\n        if (node.getAttribute('aria-labelledby')) {\n          ref = dom.idrefs(node, 'aria-labelledby');\n          candidate = ref.map(function(thing) {\n            return thing ? text.visible(thing, true) : '';\n          }).join(' ').trim();\n          if (candidate) {\n            return candidate;\n          }\n        }\n        candidate = node.getAttribute('aria-label');\n        if (candidate) {\n          candidate = text.sanitize(candidate).trim();\n          if (candidate) {\n            return candidate;\n          }\n        }\n        return null;\n      };\n      aria.isValidRole = function(role) {\n        'use strict';\n        if (lookupTables.role[role]) {\n          return true;\n        }\n        return false;\n      };\n      aria.getRolesWithNameFromContents = function() {\n        return Object.keys(lookupTables.role).filter(function(r) {\n          return lookupTables.role[r].nameFrom && lookupTables.role[r].nameFrom.indexOf('contents') !== -1;\n        });\n      };\n      aria.getRolesByType = function(roleType) {\n        return Object.keys(lookupTables.role).filter(function(r) {\n          return lookupTables.role[r].type === roleType;\n        });\n      };\n      aria.getRoleType = function(role) {\n        var r = lookupTables.role[role];\n        return r && r.type || null;\n      };\n      aria.requiredOwned = function(role) {\n        'use strict';\n        var owned = null, roles = lookupTables.role[role];\n        if (roles) {\n          owned = axe.utils.clone(roles.owned);\n        }\n        return owned;\n      };\n      aria.requiredContext = function(role) {\n        'use strict';\n        var context = null, roles = lookupTables.role[role];\n        if (roles) {\n          context = axe.utils.clone(roles.context);\n        }\n        return context;\n      };\n      aria.implicitNodes = function(role) {\n        'use strict';\n        var implicit = null, roles = lookupTables.role[role];\n        if (roles && roles.implicit) {\n          implicit = axe.utils.clone(roles.implicit);\n        }\n        return implicit;\n      };\n      aria.implicitRole = function(node) {\n        'use strict';\n        var isValidImplicitRole = function isValidImplicitRole(set, role) {\n          var validForNodeType = function validForNodeType(implicitNodeTypeSelector) {\n            return axe.utils.matchesSelector(node, implicitNodeTypeSelector);\n          };\n          if (role.implicit && role.implicit.some(validForNodeType)) {\n            set.push(role.name);\n          }\n          return set;\n        };\n        var sortRolesByOptimalAriaContext = function sortRolesByOptimalAriaContext(roles, ariaAttributes) {\n          var getScore = function getScore(role) {\n            var allowedAriaAttributes = aria.allowedAttr(role);\n            return allowedAriaAttributes.reduce(function(score, attribute) {\n              return score + (ariaAttributes.indexOf(attribute) > -1 ? 1 : 0);\n            }, 0);\n          };\n          var scored = roles.map(function(role) {\n            return {\n              score: getScore(role),\n              name: role\n            };\n          });\n          var sorted = scored.sort(function(scoredRoleA, scoredRoleB) {\n            return scoredRoleB.score - scoredRoleA.score;\n          });\n          return sorted.map(function(sortedRole) {\n            return sortedRole.name;\n          });\n        };\n        var roles = Object.keys(lookupTables.role).map(function(role) {\n          var lookup = lookupTables.role[role];\n          return {\n            name: role,\n            implicit: lookup && lookup.implicit\n          };\n        });\n        var availableImplicitRoles = roles.reduce(isValidImplicitRole, []);\n        if (!availableImplicitRoles.length) {\n          return null;\n        }\n        var nodeAttributes = node.attributes;\n        var ariaAttributes = [];\n        for (var i = 0, j = nodeAttributes.length; i < j; i++) {\n          var attr = nodeAttributes[i];\n          if (attr.name.match(/^aria-/)) {\n            ariaAttributes.push(attr.name);\n          }\n        }\n        return sortRolesByOptimalAriaContext(availableImplicitRoles, ariaAttributes).shift();\n      };\n      color.Color = function(red, green, blue, alpha) {\n        this.red = red;\n        this.green = green;\n        this.blue = blue;\n        this.alpha = alpha;\n        this.toHexString = function() {\n          var redString = Math.round(this.red).toString(16);\n          var greenString = Math.round(this.green).toString(16);\n          var blueString = Math.round(this.blue).toString(16);\n          return '#' + (this.red > 15.5 ? redString : '0' + redString) + (this.green > 15.5 ? greenString : '0' + greenString) + (this.blue > 15.5 ? blueString : '0' + blueString);\n        };\n        var rgbRegex = /^rgb\\((\\d+), (\\d+), (\\d+)\\)$/;\n        var rgbaRegex = /^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/;\n        this.parseRgbString = function(colorString) {\n          if (colorString === 'transparent') {\n            this.red = 0;\n            this.green = 0;\n            this.blue = 0;\n            this.alpha = 0;\n            return;\n          }\n          var match = colorString.match(rgbRegex);\n          if (match) {\n            this.red = parseInt(match[1], 10);\n            this.green = parseInt(match[2], 10);\n            this.blue = parseInt(match[3], 10);\n            this.alpha = 1;\n            return;\n          }\n          match = colorString.match(rgbaRegex);\n          if (match) {\n            this.red = parseInt(match[1], 10);\n            this.green = parseInt(match[2], 10);\n            this.blue = parseInt(match[3], 10);\n            this.alpha = parseFloat(match[4]);\n            return;\n          }\n        };\n        this.getRelativeLuminance = function() {\n          var rSRGB = this.red / 255;\n          var gSRGB = this.green / 255;\n          var bSRGB = this.blue / 255;\n          var r = rSRGB <= .03928 ? rSRGB / 12.92 : Math.pow((rSRGB + .055) / 1.055, 2.4);\n          var g = gSRGB <= .03928 ? gSRGB / 12.92 : Math.pow((gSRGB + .055) / 1.055, 2.4);\n          var b = bSRGB <= .03928 ? bSRGB / 12.92 : Math.pow((bSRGB + .055) / 1.055, 2.4);\n          return .2126 * r + .7152 * g + .0722 * b;\n        };\n      };\n      color.flattenColors = function(fgColor, bgColor) {\n        var alpha = fgColor.alpha;\n        var r = (1 - alpha) * bgColor.red + alpha * fgColor.red;\n        var g = (1 - alpha) * bgColor.green + alpha * fgColor.green;\n        var b = (1 - alpha) * bgColor.blue + alpha * fgColor.blue;\n        var a = fgColor.alpha + bgColor.alpha * (1 - fgColor.alpha);\n        return new color.Color(r, g, b, a);\n      };\n      color.getContrast = function(bgColor, fgColor) {\n        if (!fgColor || !bgColor) {\n          return null;\n        }\n        if (fgColor.alpha < 1) {\n          fgColor = color.flattenColors(fgColor, bgColor);\n        }\n        var bL = bgColor.getRelativeLuminance();\n        var fL = fgColor.getRelativeLuminance();\n        return (Math.max(fL, bL) + .05) / (Math.min(fL, bL) + .05);\n      };\n      color.hasValidContrastRatio = function(bg, fg, fontSize, isBold) {\n        var contrast = color.getContrast(bg, fg);\n        var isSmallFont = isBold && Math.ceil(fontSize * 72) / 96 < 14 || !isBold && Math.ceil(fontSize * 72) / 96 < 18;\n        return {\n          isValid: isSmallFont && contrast >= 4.5 || !isSmallFont && contrast >= 3,\n          contrastRatio: contrast\n        };\n      };\n      function _getFonts(style) {\n        return style.getPropertyValue('font-family').split(/[,;]/g).map(function(font) {\n          return font.trim().toLowerCase();\n        });\n      }\n      function elementIsDistinct(node, ancestorNode) {\n        var nodeStyle = window.getComputedStyle(node);\n        if (nodeStyle.getPropertyValue('background-image') !== 'none') {\n          return true;\n        }\n        var hasBorder = [ 'border-bottom', 'border-top', 'outline' ].reduce(function(result, edge) {\n          var borderClr = new color.Color();\n          borderClr.parseRgbString(nodeStyle.getPropertyValue(edge + '-color'));\n          return result || nodeStyle.getPropertyValue(edge + '-style') !== 'none' && parseFloat(nodeStyle.getPropertyValue(edge + '-width')) > 0 && borderClr.alpha !== 0;\n        }, false);\n        if (hasBorder) {\n          return true;\n        }\n        var parentStyle = window.getComputedStyle(ancestorNode);\n        if (_getFonts(nodeStyle)[0] !== _getFonts(parentStyle)[0]) {\n          return true;\n        }\n        var hasStyle = [ 'text-decoration-line', 'text-decoration-style', 'font-weight', 'font-style', 'font-size' ].reduce(function(result, cssProp) {\n          return result || nodeStyle.getPropertyValue(cssProp) !== parentStyle.getPropertyValue(cssProp);\n        }, false);\n        var tDec = nodeStyle.getPropertyValue('text-decoration');\n        if (tDec.split(' ').length < 3) {\n          hasStyle = hasStyle || tDec !== parentStyle.getPropertyValue('text-decoration');\n        }\n        return hasStyle;\n      }\n      color.elementIsDistinct = elementIsDistinct;\n      var graphicNodes = [ 'IMG', 'CANVAS', 'OBJECT', 'IFRAME', 'VIDEO', 'SVG' ];\n      function elmHasImage(elm, style) {\n        var nodeName = elm.nodeName.toUpperCase();\n        if (graphicNodes.includes(nodeName)) {\n          axe.commons.color.incompleteData.set('bgColor', {\n            node: elm,\n            reason: 'imgNode'\n          });\n          return true;\n        }\n        style = style || window.getComputedStyle(elm);\n        var bgImageStyle = style.getPropertyValue('background-image');\n        var hasBgImage = bgImageStyle !== 'none';\n        if (hasBgImage) {\n          var hasGradient = /gradient/.test(bgImageStyle);\n          axe.commons.color.incompleteData.set('bgColor', {\n            node: elm,\n            reason: hasGradient ? 'bgGradient' : 'bgImage'\n          });\n        }\n        return hasBgImage;\n      }\n      function getBgColor(elm, elmStyle) {\n        elmStyle = elmStyle || window.getComputedStyle(elm);\n        var bgColor = new color.Color();\n        bgColor.parseRgbString(elmStyle.getPropertyValue('background-color'));\n        if (bgColor.alpha !== 0) {\n          var opacity = elmStyle.getPropertyValue('opacity');\n          bgColor.alpha = bgColor.alpha * opacity;\n        }\n        return bgColor;\n      }\n      function calculateObscuringAlpha(elmIndex, elmStack) {\n        var totalAlpha = 0;\n        if (elmIndex > 0) {\n          for (var i = elmIndex - 1; i >= 0; i--) {\n            var bgElm = elmStack[i];\n            var bgElmStyle = window.getComputedStyle(bgElm);\n            var bgColor = getBgColor(bgElm, bgElmStyle);\n            if (bgColor.alpha) {\n              totalAlpha += bgColor.alpha;\n            } else {\n              elmStack.splice(i, 1);\n            }\n          }\n        }\n        return totalAlpha;\n      }\n      function elmOutsideParent(elm, bgElm, bgColor) {\n        var visible = elm !== bgElm && !dom.visuallyContains(elm, bgElm) && bgColor.alpha !== 0;\n        return visible;\n      }\n      color.getBackgroundStack = function(elm) {\n        var rect = elm.getBoundingClientRect();\n        var x = void 0, y = void 0;\n        if (rect.left > window.innerWidth) {\n          return;\n        }\n        if (rect.top > window.innerHeight) {\n          return;\n        }\n        x = Math.min(Math.ceil(rect.left + rect.width / 2), window.innerWidth - 1);\n        y = Math.min(Math.ceil(rect.top + rect.height / 2), window.innerHeight - 1);\n        var elmStack = document.elementsFromPoint(x, y);\n        elmStack = dom.reduceToElementsBelowFloating(elmStack, elm);\n        var bodyIndex = elmStack.indexOf(document.body);\n        if (bodyIndex > 1 && !elmHasImage(document.documentElement) && getBgColor(document.documentElement).alpha === 0) {\n          elmStack.splice(bodyIndex, 1);\n          elmStack.splice(elmStack.indexOf(document.documentElement), 1);\n          elmStack.push(document.body);\n        }\n        var elmIndex = elmStack.indexOf(elm);\n        if (calculateObscuringAlpha(elmIndex, elmStack) >= .99) {\n          axe.commons.color.incompleteData.set('bgColor', {\n            node: elm,\n            reason: 'bgOverlap'\n          });\n          return null;\n        }\n        return elmIndex !== -1 ? elmStack : null;\n      };\n      color.getBackgroundColor = function(elm) {\n        var bgElms = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        var noScroll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n        if (noScroll !== true) {\n          elm.scrollIntoView();\n        }\n        var bgColors = [];\n        var elmStack = color.getBackgroundStack(elm);\n        (elmStack || []).some(function(bgElm) {\n          var bgElmStyle = window.getComputedStyle(bgElm);\n          var bgColor = getBgColor(bgElm, bgElmStyle);\n          if (elmOutsideParent(elm, bgElm, bgColor) || elmHasImage(bgElm, bgElmStyle)) {\n            bgColors = null;\n            bgElms.push(bgElm);\n            return true;\n          }\n          if (bgColor.alpha !== 0) {\n            bgElms.push(bgElm);\n            bgColors.push(bgColor);\n            return bgColor.alpha === 1;\n          } else {\n            return false;\n          }\n        });\n        if (bgColors !== null && elmStack !== null) {\n          bgColors.push(new color.Color(255, 255, 255, 1));\n          var colors = bgColors.reduce(color.flattenColors);\n          return colors;\n        }\n        return null;\n      };\n      dom.isOpaque = function(node) {\n        var style = window.getComputedStyle(node);\n        return elmHasImage(node, style) || getBgColor(node, style).alpha === 1;\n      };\n      color.getForegroundColor = function(node, noScroll) {\n        var nodeStyle = window.getComputedStyle(node);\n        var fgColor = new color.Color();\n        fgColor.parseRgbString(nodeStyle.getPropertyValue('color'));\n        var opacity = nodeStyle.getPropertyValue('opacity');\n        fgColor.alpha = fgColor.alpha * opacity;\n        if (fgColor.alpha === 1) {\n          return fgColor;\n        }\n        var bgColor = color.getBackgroundColor(node, [], noScroll);\n        if (bgColor === null) {\n          var reason = axe.commons.color.incompleteData.get('bgColor').reason;\n          axe.commons.color.incompleteData.set('fgColor', {\n            node: node,\n            reason: reason\n          });\n          return null;\n        }\n        return color.flattenColors(fgColor, bgColor);\n      };\n      color.incompleteData = function() {\n        var data = {};\n        return {\n          set: function set(key, dataObj) {\n            if (typeof key !== 'string') {\n              throw new Error('Incomplete data: key must be a string');\n            }\n            if (dataObj) {\n              data[key] = dataObj;\n            }\n          },\n          get: function get(key) {\n            return data[key];\n          },\n          clear: function clear() {\n            data = {};\n          }\n        };\n      }();\n      dom.reduceToElementsBelowFloating = function(elements, targetNode) {\n        var floatingPositions = [ 'fixed', 'sticky' ], finalElements = [], targetFound = false, index, currentNode, style;\n        for (index = 0; index < elements.length; ++index) {\n          currentNode = elements[index];\n          if (currentNode === targetNode) {\n            targetFound = true;\n          }\n          style = window.getComputedStyle(currentNode);\n          if (!targetFound && floatingPositions.indexOf(style.position) !== -1) {\n            finalElements = [];\n            continue;\n          }\n          finalElements.push(currentNode);\n        }\n        return finalElements;\n      };\n      dom.findUp = function(element, target) {\n        'use strict';\n        var parent, matches = document.querySelectorAll(target), length = matches.length;\n        if (!length) {\n          return null;\n        }\n        matches = axe.utils.toArray(matches);\n        parent = element.parentNode;\n        while (parent && matches.indexOf(parent) === -1) {\n          parent = parent.parentNode;\n        }\n        return parent;\n      };\n      dom.getElementByReference = function(node, attr) {\n        'use strict';\n        var candidate, fragment = node.getAttribute(attr), doc = document;\n        if (fragment && fragment.charAt(0) === '#') {\n          fragment = fragment.substring(1);\n          candidate = doc.getElementById(fragment);\n          if (candidate) {\n            return candidate;\n          }\n          candidate = doc.getElementsByName(fragment);\n          if (candidate.length) {\n            return candidate[0];\n          }\n        }\n        return null;\n      };\n      dom.getElementCoordinates = function(element) {\n        'use strict';\n        var scrollOffset = dom.getScrollOffset(document), xOffset = scrollOffset.left, yOffset = scrollOffset.top, coords = element.getBoundingClientRect();\n        return {\n          top: coords.top + yOffset,\n          right: coords.right + xOffset,\n          bottom: coords.bottom + yOffset,\n          left: coords.left + xOffset,\n          width: coords.right - coords.left,\n          height: coords.bottom - coords.top\n        };\n      };\n      dom.getScrollOffset = function(element) {\n        'use strict';\n        if (!element.nodeType && element.document) {\n          element = element.document;\n        }\n        if (element.nodeType === 9) {\n          var docElement = element.documentElement, body = element.body;\n          return {\n            left: docElement && docElement.scrollLeft || body && body.scrollLeft || 0,\n            top: docElement && docElement.scrollTop || body && body.scrollTop || 0\n          };\n        }\n        return {\n          left: element.scrollLeft,\n          top: element.scrollTop\n        };\n      };\n      dom.getViewportSize = function(win) {\n        'use strict';\n        var body, doc = win.document, docElement = doc.documentElement;\n        if (win.innerWidth) {\n          return {\n            width: win.innerWidth,\n            height: win.innerHeight\n          };\n        }\n        if (docElement) {\n          return {\n            width: docElement.clientWidth,\n            height: docElement.clientHeight\n          };\n        }\n        body = doc.body;\n        return {\n          width: body.clientWidth,\n          height: body.clientHeight\n        };\n      };\n      dom.hasContent = function hasContent(elm) {\n        var skipItems = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n        if (elm.textContent.trim() || aria.label(elm)) {\n          return true;\n        }\n        var contentElms = elm.querySelectorAll('*');\n        for (var i = 0; i < contentElms.length; i++) {\n          if (skipItems.indexOf(contentElms[i]) === -1 && aria.label(contentElms[i]) || dom.isVisualContent(contentElms[i])) {\n            return true;\n          }\n        }\n        return false;\n      };\n      dom.idrefs = function(node, attr) {\n        'use strict';\n        var index, length, doc = document, result = [], idrefs = node.getAttribute(attr);\n        if (idrefs) {\n          idrefs = axe.utils.tokenList(idrefs);\n          for (index = 0, length = idrefs.length; index < length; index++) {\n            result.push(doc.getElementById(idrefs[index]));\n          }\n        }\n        return result;\n      };\n      dom.isFocusable = function(el) {\n        'use strict';\n        if (!el || el.disabled || !dom.isVisible(el) && el.nodeName.toUpperCase() !== 'AREA') {\n          return false;\n        }\n        switch (el.nodeName.toUpperCase()) {\n         case 'A':\n         case 'AREA':\n          if (el.href) {\n            return true;\n          }\n          break;\n\n         case 'INPUT':\n          return el.type !== 'hidden';\n\n         case 'TEXTAREA':\n         case 'SELECT':\n         case 'DETAILS':\n         case 'BUTTON':\n          return true;\n        }\n        var tabindex = el.getAttribute('tabindex');\n        if (tabindex && !isNaN(parseInt(tabindex, 10))) {\n          return true;\n        }\n        return false;\n      };\n      dom.isHTML5 = function(doc) {\n        var node = doc.doctype;\n        if (node === null) {\n          return false;\n        }\n        return node.name === 'html' && !node.publicId && !node.systemId;\n      };\n      function walkDomNode(node, functor) {\n        'use strict';\n        var shouldWalk = functor(node);\n        node = node.firstChild;\n        while (node) {\n          if (shouldWalk !== false) {\n            walkDomNode(node, functor);\n          }\n          node = node.nextSibling;\n        }\n      }\n      var blockLike = [ 'block', 'list-item', 'table', 'flex', 'grid', 'inline-block' ];\n      function isBlock(elm) {\n        'use strict';\n        var display = window.getComputedStyle(elm).getPropertyValue('display');\n        return blockLike.indexOf(display) !== -1 || display.substr(0, 6) === 'table-';\n      }\n      dom.isInTextBlock = function isInTextBlock(node) {\n        'use strict';\n        if (isBlock(node)) {\n          return false;\n        }\n        var parentBlock = node.parentNode;\n        while (parentBlock.nodeType === 1 && !isBlock(parentBlock)) {\n          parentBlock = parentBlock.parentNode;\n        }\n        var parentText = '';\n        var linkText = '';\n        var inBrBlock = 0;\n        walkDomNode(parentBlock, function(currNode) {\n          if (inBrBlock === 2) {\n            return false;\n          }\n          if (currNode.nodeType === 3) {\n            parentText += currNode.nodeValue;\n          }\n          if (currNode.nodeType !== 1) {\n            return;\n          }\n          var nodeName = (currNode.nodeName || '').toUpperCase();\n          if ([ 'BR', 'HR' ].indexOf(nodeName) !== -1) {\n            if (inBrBlock === 0) {\n              parentText = '';\n              linkText = '';\n            } else {\n              inBrBlock = 2;\n            }\n          } else if (currNode.style.display === 'none' || currNode.style.overflow === 'hidden' || [ '', null, 'none' ].indexOf(currNode.style.float) === -1 || [ '', null, 'relative' ].indexOf(currNode.style.position) === -1) {\n            return false;\n          } else if (nodeName === 'A' && currNode.href || (currNode.getAttribute('role') || '').toLowerCase() === 'link') {\n            if (currNode === node) {\n              inBrBlock = 1;\n            }\n            linkText += currNode.textContent;\n            return false;\n          }\n        });\n        parentText = axe.commons.text.sanitize(parentText);\n        linkText = axe.commons.text.sanitize(linkText);\n        return parentText.length > linkText.length;\n      };\n      dom.isNode = function(candidate) {\n        'use strict';\n        return candidate instanceof Node;\n      };\n      dom.isOffscreen = function(element) {\n        'use strict';\n        var noParentScrolled = function noParentScrolled(element, offset) {\n          element = element.parentNode;\n          while (element.nodeName.toLowerCase() !== 'html') {\n            if (element.scrollTop) {\n              offset += element.scrollTop;\n              if (offset >= 0) {\n                return false;\n              }\n            }\n            element = element.parentNode;\n          }\n          return true;\n        };\n        var leftBoundary, docElement = document.documentElement, dir = window.getComputedStyle(document.body || docElement).getPropertyValue('direction'), coords = dom.getElementCoordinates(element);\n        if (coords.bottom < 0 && noParentScrolled(element, coords.bottom)) {\n          return true;\n        }\n        if (coords.left === 0 && coords.right === 0) {\n          return false;\n        }\n        if (dir === 'ltr') {\n          if (coords.right <= 0) {\n            return true;\n          }\n        } else {\n          leftBoundary = Math.max(docElement.scrollWidth, dom.getViewportSize(window).width);\n          if (coords.left >= leftBoundary) {\n            return true;\n          }\n        }\n        return false;\n      };\n      function isClipped(clip) {\n        'use strict';\n        var matches = clip.match(/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/);\n        if (matches && matches.length === 5) {\n          return matches[3] - matches[1] <= 0 && matches[2] - matches[4] <= 0;\n        }\n        return false;\n      }\n      dom.isVisible = function(el, screenReader, recursed) {\n        'use strict';\n        var style, nodeName = el.nodeName.toUpperCase(), parent = el.parentNode;\n        if (el.nodeType === 9) {\n          return true;\n        }\n        style = window.getComputedStyle(el, null);\n        if (style === null) {\n          return false;\n        }\n        if (style.getPropertyValue('display') === 'none' || nodeName.toUpperCase() === 'STYLE' || nodeName.toUpperCase() === 'SCRIPT' || !screenReader && isClipped(style.getPropertyValue('clip')) || !recursed && (style.getPropertyValue('visibility') === 'hidden' || !screenReader && dom.isOffscreen(el)) || screenReader && el.getAttribute('aria-hidden') === 'true') {\n          return false;\n        }\n        if (parent) {\n          return dom.isVisible(parent, screenReader, true);\n        }\n        return false;\n      };\n      var visualRoles = [ 'checkbox', 'img', 'radio', 'range', 'slider', 'spinbutton', 'textbox' ];\n      dom.isVisualContent = function(candidate) {\n        var role = candidate.getAttribute('role');\n        if (role) {\n          return visualRoles.indexOf(role) !== -1;\n        }\n        switch (candidate.tagName.toUpperCase()) {\n         case 'IMG':\n         case 'IFRAME':\n         case 'OBJECT':\n         case 'VIDEO':\n         case 'AUDIO':\n         case 'CANVAS':\n         case 'SVG':\n         case 'MATH':\n         case 'BUTTON':\n         case 'SELECT':\n         case 'TEXTAREA':\n         case 'KEYGEN':\n         case 'PROGRESS':\n         case 'METER':\n          return true;\n\n         case 'INPUT':\n          return candidate.type !== 'hidden';\n\n         default:\n          return false;\n        }\n      };\n      dom.visuallyContains = function(node, parent) {\n        var rectBound = node.getBoundingClientRect();\n        var margin = .01;\n        var rect = {\n          top: rectBound.top + margin,\n          bottom: rectBound.bottom - margin,\n          left: rectBound.left + margin,\n          right: rectBound.right - margin\n        };\n        var parentRect = parent.getBoundingClientRect();\n        var parentTop = parentRect.top;\n        var parentLeft = parentRect.left;\n        var parentScrollArea = {\n          top: parentTop - parent.scrollTop,\n          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n          left: parentLeft - parent.scrollLeft,\n          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n        };\n        if (rect.left < parentScrollArea.left && rect.left < parentRect.left || rect.top < parentScrollArea.top && rect.top < parentRect.top || rect.right > parentScrollArea.right && rect.right > parentRect.right || rect.bottom > parentScrollArea.bottom && rect.bottom > parentRect.bottom) {\n          return false;\n        }\n        var style = window.getComputedStyle(parent);\n        if (rect.right > parentRect.right || rect.bottom > parentRect.bottom) {\n          return style.overflow === 'scroll' || style.overflow === 'auto' || style.overflow === 'hidden' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n        }\n        return true;\n      };\n      dom.visuallyOverlaps = function(rect, parent) {\n        var parentRect = parent.getBoundingClientRect();\n        var parentTop = parentRect.top;\n        var parentLeft = parentRect.left;\n        var parentScrollArea = {\n          top: parentTop - parent.scrollTop,\n          bottom: parentTop - parent.scrollTop + parent.scrollHeight,\n          left: parentLeft - parent.scrollLeft,\n          right: parentLeft - parent.scrollLeft + parent.scrollWidth\n        };\n        if (rect.left > parentScrollArea.right && rect.left > parentRect.right || rect.top > parentScrollArea.bottom && rect.top > parentRect.bottom || rect.right < parentScrollArea.left && rect.right < parentRect.left || rect.bottom < parentScrollArea.top && rect.bottom < parentRect.top) {\n          return false;\n        }\n        var style = window.getComputedStyle(parent);\n        if (rect.left > parentRect.right || rect.top > parentRect.bottom) {\n          return style.overflow === 'scroll' || style.overflow === 'auto' || parent instanceof HTMLBodyElement || parent instanceof HTMLHtmlElement;\n        }\n        return true;\n      };\n      table.getAllCells = function(tableElm) {\n        var rowIndex, cellIndex, rowLength, cellLength;\n        var cells = [];\n        for (rowIndex = 0, rowLength = tableElm.rows.length; rowIndex < rowLength; rowIndex++) {\n          for (cellIndex = 0, cellLength = tableElm.rows[rowIndex].cells.length; cellIndex < cellLength; cellIndex++) {\n            cells.push(tableElm.rows[rowIndex].cells[cellIndex]);\n          }\n        }\n        return cells;\n      };\n      table.getCellPosition = function(cell, tableGrid) {\n        var rowIndex, index;\n        if (!tableGrid) {\n          tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n        }\n        for (rowIndex = 0; rowIndex < tableGrid.length; rowIndex++) {\n          if (tableGrid[rowIndex]) {\n            index = tableGrid[rowIndex].indexOf(cell);\n            if (index !== -1) {\n              return {\n                x: index,\n                y: rowIndex\n              };\n            }\n          }\n        }\n      };\n      table.getHeaders = function(cell) {\n        if (cell.hasAttribute('headers')) {\n          return commons.dom.idrefs(cell, 'headers');\n        }\n        var tableGrid = commons.table.toGrid(commons.dom.findUp(cell, 'table'));\n        var position = commons.table.getCellPosition(cell, tableGrid);\n        var rowHeaders = table.traverse('left', position, tableGrid).filter(function(cell) {\n          return table.isRowHeader(cell);\n        });\n        var colHeaders = table.traverse('up', position, tableGrid).filter(function(cell) {\n          return table.isColumnHeader(cell);\n        });\n        return [].concat(rowHeaders, colHeaders).reverse();\n      };\n      table.getScope = function(cell) {\n        var scope = cell.getAttribute('scope');\n        var role = cell.getAttribute('role');\n        if (cell instanceof Element === false || [ 'TD', 'TH' ].indexOf(cell.nodeName.toUpperCase()) === -1) {\n          throw new TypeError('Expected TD or TH element');\n        }\n        if (role === 'columnheader') {\n          return 'col';\n        } else if (role === 'rowheader') {\n          return 'row';\n        } else if (scope === 'col' || scope === 'row') {\n          return scope;\n        } else if (cell.nodeName.toUpperCase() !== 'TH') {\n          return false;\n        }\n        var tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n        var pos = table.getCellPosition(cell);\n        var headerRow = tableGrid[pos.y].reduce(function(headerRow, cell) {\n          return headerRow && cell.nodeName.toUpperCase() === 'TH';\n        }, true);\n        if (headerRow) {\n          return 'col';\n        }\n        var headerCol = tableGrid.map(function(col) {\n          return col[pos.x];\n        }).reduce(function(headerCol, cell) {\n          return headerCol && cell.nodeName.toUpperCase() === 'TH';\n        }, true);\n        if (headerCol) {\n          return 'row';\n        }\n        return 'auto';\n      };\n      table.isColumnHeader = function(node) {\n        return [ 'col', 'auto' ].indexOf(table.getScope(node)) !== -1;\n      };\n      table.isDataCell = function(cell) {\n        if (!cell.children.length && !cell.textContent.trim()) {\n          return false;\n        }\n        return cell.nodeName.toUpperCase() === 'TD';\n      };\n      table.isDataTable = function(node) {\n        var role = node.getAttribute('role');\n        if ((role === 'presentation' || role === 'none') && !dom.isFocusable(node)) {\n          return false;\n        }\n        if (node.getAttribute('contenteditable') === 'true' || dom.findUp(node, '[contenteditable=\"true\"]')) {\n          return true;\n        }\n        if (role === 'grid' || role === 'treegrid' || role === 'table') {\n          return true;\n        }\n        if (commons.aria.getRoleType(role) === 'landmark') {\n          return true;\n        }\n        if (node.getAttribute('datatable') === '0') {\n          return false;\n        }\n        if (node.getAttribute('summary')) {\n          return true;\n        }\n        if (node.tHead || node.tFoot || node.caption) {\n          return true;\n        }\n        for (var childIndex = 0, childLength = node.children.length; childIndex < childLength; childIndex++) {\n          if (node.children[childIndex].nodeName.toUpperCase() === 'COLGROUP') {\n            return true;\n          }\n        }\n        var cells = 0;\n        var rowLength = node.rows.length;\n        var row, cell;\n        var hasBorder = false;\n        for (var rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          for (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n            cell = row.cells[cellIndex];\n            if (cell.nodeName.toUpperCase() === 'TH') {\n              return true;\n            }\n            if (!hasBorder && (cell.offsetWidth !== cell.clientWidth || cell.offsetHeight !== cell.clientHeight)) {\n              hasBorder = true;\n            }\n            if (cell.getAttribute('scope') || cell.getAttribute('headers') || cell.getAttribute('abbr')) {\n              return true;\n            }\n            if ([ 'columnheader', 'rowheader' ].indexOf(cell.getAttribute('role')) !== -1) {\n              return true;\n            }\n            if (cell.children.length === 1 && cell.children[0].nodeName.toUpperCase() === 'ABBR') {\n              return true;\n            }\n            cells++;\n          }\n        }\n        if (node.getElementsByTagName('table').length) {\n          return false;\n        }\n        if (rowLength < 2) {\n          return false;\n        }\n        var sampleRow = node.rows[Math.ceil(rowLength / 2)];\n        if (sampleRow.cells.length === 1 && sampleRow.cells[0].colSpan === 1) {\n          return false;\n        }\n        if (sampleRow.cells.length >= 5) {\n          return true;\n        }\n        if (hasBorder) {\n          return true;\n        }\n        var bgColor, bgImage;\n        for (rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n          row = node.rows[rowIndex];\n          if (bgColor && bgColor !== window.getComputedStyle(row).getPropertyValue('background-color')) {\n            return true;\n          } else {\n            bgColor = window.getComputedStyle(row).getPropertyValue('background-color');\n          }\n          if (bgImage && bgImage !== window.getComputedStyle(row).getPropertyValue('background-image')) {\n            return true;\n          } else {\n            bgImage = window.getComputedStyle(row).getPropertyValue('background-image');\n          }\n        }\n        if (rowLength >= 20) {\n          return true;\n        }\n        if (dom.getElementCoordinates(node).width > dom.getViewportSize(window).width * .95) {\n          return false;\n        }\n        if (cells < 10) {\n          return false;\n        }\n        if (node.querySelector('object, embed, iframe, applet')) {\n          return false;\n        }\n        return true;\n      };\n      table.isHeader = function(cell) {\n        if (table.isColumnHeader(cell) || table.isRowHeader(cell)) {\n          return true;\n        }\n        if (cell.id) {\n          return !!document.querySelector('[headers~=\"' + axe.utils.escapeSelector(cell.id) + '\"]');\n        }\n        return false;\n      };\n      table.isRowHeader = function(node) {\n        return [ 'row', 'auto' ].indexOf(table.getScope(node)) !== -1;\n      };\n      table.toGrid = function(node) {\n        var table = [];\n        var rows = node.rows;\n        for (var i = 0, rowLength = rows.length; i < rowLength; i++) {\n          var cells = rows[i].cells;\n          table[i] = table[i] || [];\n          var columnIndex = 0;\n          for (var j = 0, cellLength = cells.length; j < cellLength; j++) {\n            for (var colSpan = 0; colSpan < cells[j].colSpan; colSpan++) {\n              for (var rowSpan = 0; rowSpan < cells[j].rowSpan; rowSpan++) {\n                table[i + rowSpan] = table[i + rowSpan] || [];\n                while (table[i + rowSpan][columnIndex]) {\n                  columnIndex++;\n                }\n                table[i + rowSpan][columnIndex] = cells[j];\n              }\n              columnIndex++;\n            }\n          }\n        }\n        return table;\n      };\n      table.toArray = table.toGrid;\n      (function(table) {\n        var traverseTable = function traverseTable(dir, position, tableGrid, callback) {\n          var result;\n          var cell = tableGrid[position.y] ? tableGrid[position.y][position.x] : undefined;\n          if (!cell) {\n            return [];\n          }\n          if (typeof callback === 'function') {\n            result = callback(cell, position, tableGrid);\n            if (result === true) {\n              return [ cell ];\n            }\n          }\n          result = traverseTable(dir, {\n            x: position.x + dir.x,\n            y: position.y + dir.y\n          }, tableGrid, callback);\n          result.unshift(cell);\n          return result;\n        };\n        table.traverse = function(dir, startPos, tableGrid, callback) {\n          if (Array.isArray(startPos)) {\n            callback = tableGrid;\n            tableGrid = startPos;\n            startPos = {\n              x: 0,\n              y: 0\n            };\n          }\n          if (typeof dir === 'string') {\n            switch (dir) {\n             case 'left':\n              dir = {\n                x: -1,\n                y: 0\n              };\n              break;\n\n             case 'up':\n              dir = {\n                x: 0,\n                y: -1\n              };\n              break;\n\n             case 'right':\n              dir = {\n                x: 1,\n                y: 0\n              };\n              break;\n\n             case 'down':\n              dir = {\n                x: 0,\n                y: 1\n              };\n              break;\n            }\n          }\n          return traverseTable(dir, {\n            x: startPos.x + dir.x,\n            y: startPos.y + dir.y\n          }, tableGrid, callback);\n        };\n      })(table);\n      var defaultButtonValues = {\n        submit: 'Submit',\n        reset: 'Reset'\n      };\n      var inputTypes = [ 'text', 'search', 'tel', 'url', 'email', 'date', 'time', 'number', 'range', 'color' ];\n      var phrasingElements = [ 'A', 'EM', 'STRONG', 'SMALL', 'MARK', 'ABBR', 'DFN', 'I', 'B', 'S', 'U', 'CODE', 'VAR', 'SAMP', 'KBD', 'SUP', 'SUB', 'Q', 'CITE', 'SPAN', 'BDO', 'BDI', 'BR', 'WBR', 'INS', 'DEL', 'IMG', 'EMBED', 'OBJECT', 'IFRAME', 'MAP', 'AREA', 'SCRIPT', 'NOSCRIPT', 'RUBY', 'VIDEO', 'AUDIO', 'INPUT', 'TEXTAREA', 'SELECT', 'BUTTON', 'LABEL', 'OUTPUT', 'DATALIST', 'KEYGEN', 'PROGRESS', 'COMMAND', 'CANVAS', 'TIME', 'METER' ];\n      function findLabel(element) {\n        var ref = null;\n        if (element.id) {\n          ref = document.querySelector('label[for=\"' + axe.utils.escapeSelector(element.id) + '\"]');\n          if (ref) {\n            return ref;\n          }\n        }\n        ref = dom.findUp(element, 'label');\n        return ref;\n      }\n      function isButton(element) {\n        return [ 'button', 'reset', 'submit' ].indexOf(element.type) !== -1;\n      }\n      function isInput(element) {\n        var nodeName = element.nodeName.toUpperCase();\n        return nodeName === 'TEXTAREA' || nodeName === 'SELECT' || nodeName === 'INPUT' && element.type.toLowerCase() !== 'hidden';\n      }\n      function shouldCheckSubtree(element) {\n        return [ 'BUTTON', 'SUMMARY', 'A' ].indexOf(element.nodeName.toUpperCase()) !== -1;\n      }\n      function shouldNeverCheckSubtree(element) {\n        return [ 'TABLE', 'FIGURE' ].indexOf(element.nodeName.toUpperCase()) !== -1;\n      }\n      function formValueText(element) {\n        var nodeName = element.nodeName.toUpperCase();\n        if (nodeName === 'INPUT') {\n          if (!element.hasAttribute('type') || inputTypes.indexOf(element.getAttribute('type').toLowerCase()) !== -1 && element.value) {\n            return element.value;\n          }\n          return '';\n        }\n        if (nodeName === 'SELECT') {\n          var opts = element.options;\n          if (opts && opts.length) {\n            var returnText = '';\n            for (var i = 0; i < opts.length; i++) {\n              if (opts[i].selected) {\n                returnText += ' ' + opts[i].text;\n              }\n            }\n            return text.sanitize(returnText);\n          }\n          return '';\n        }\n        if (nodeName === 'TEXTAREA' && element.value) {\n          return element.value;\n        }\n        return '';\n      }\n      function checkDescendant(element, nodeName) {\n        var candidate = element.querySelector(nodeName.toLowerCase());\n        if (candidate) {\n          return text.accessibleText(candidate);\n        }\n        return '';\n      }\n      function isEmbeddedControl(e) {\n        if (!e) {\n          return false;\n        }\n        switch (e.nodeName.toUpperCase()) {\n         case 'SELECT':\n         case 'TEXTAREA':\n          return true;\n\n         case 'INPUT':\n          return !e.hasAttribute('type') || inputTypes.indexOf(e.getAttribute('type').toLowerCase()) !== -1;\n\n         default:\n          return false;\n        }\n      }\n      function shouldCheckAlt(element) {\n        var nodeName = element.nodeName.toUpperCase();\n        return nodeName === 'INPUT' && element.type.toLowerCase() === 'image' || [ 'IMG', 'APPLET', 'AREA' ].indexOf(nodeName) !== -1;\n      }\n      function nonEmptyText(t) {\n        return !!text.sanitize(t);\n      }\n      text.accessibleText = function(element, inLabelledByContext) {\n        var accessibleNameComputation;\n        var encounteredNodes = [];\n        function getInnerText(element, inLabelledByContext, inControlContext) {\n          var nodes = element.childNodes;\n          var returnText = '';\n          var node;\n          for (var i = 0; i < nodes.length; i++) {\n            node = nodes[i];\n            if (node.nodeType === 3) {\n              returnText += node.textContent;\n            } else if (node.nodeType === 1) {\n              if (phrasingElements.indexOf(node.nodeName.toUpperCase()) === -1) {\n                returnText += ' ';\n              }\n              returnText += accessibleNameComputation(nodes[i], inLabelledByContext, inControlContext);\n            }\n          }\n          return returnText;\n        }\n        function checkNative(element, inLabelledByContext, inControlContext) {\n          var returnText = '';\n          var nodeName = element.nodeName.toUpperCase();\n          if (shouldCheckSubtree(element)) {\n            returnText = getInnerText(element, false, false) || '';\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (nodeName === 'FIGURE') {\n            returnText = checkDescendant(element, 'figcaption');\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (nodeName === 'TABLE') {\n            returnText = checkDescendant(element, 'caption');\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n            returnText = element.getAttribute('title') || element.getAttribute('summary') || '';\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (shouldCheckAlt(element)) {\n            return element.getAttribute('alt') || '';\n          }\n          if (isInput(element) && !inControlContext) {\n            if (isButton(element)) {\n              return element.value || element.title || defaultButtonValues[element.type] || '';\n            }\n            var labelElement = findLabel(element);\n            if (labelElement) {\n              return accessibleNameComputation(labelElement, inLabelledByContext, true);\n            }\n          }\n          return '';\n        }\n        function checkARIA(element, inLabelledByContext, inControlContext) {\n          if (!inLabelledByContext && element.hasAttribute('aria-labelledby')) {\n            return text.sanitize(dom.idrefs(element, 'aria-labelledby').map(function(l) {\n              if (element === l) {\n                encounteredNodes.pop();\n              }\n              return accessibleNameComputation(l, true, element !== l);\n            }).join(' '));\n          }\n          if (!(inControlContext && isEmbeddedControl(element)) && element.hasAttribute('aria-label')) {\n            return text.sanitize(element.getAttribute('aria-label'));\n          }\n          return '';\n        }\n        accessibleNameComputation = function accessibleNameComputation(element, inLabelledByContext, inControlContext) {\n          'use strict';\n          var returnText;\n          if (element === null || encounteredNodes.indexOf(element) !== -1) {\n            return '';\n          } else if (!inLabelledByContext && !dom.isVisible(element, true)) {\n            return '';\n          }\n          encounteredNodes.push(element);\n          var role = element.getAttribute('role');\n          returnText = checkARIA(element, inLabelledByContext, inControlContext);\n          if (nonEmptyText(returnText)) {\n            return returnText;\n          }\n          returnText = checkNative(element, inLabelledByContext, inControlContext);\n          if (nonEmptyText(returnText)) {\n            return returnText;\n          }\n          if (inControlContext) {\n            returnText = formValueText(element);\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (!shouldNeverCheckSubtree(element) && (!role || aria.getRolesWithNameFromContents().indexOf(role) !== -1)) {\n            returnText = getInnerText(element, inLabelledByContext, inControlContext);\n            if (nonEmptyText(returnText)) {\n              return returnText;\n            }\n          }\n          if (element.hasAttribute('title')) {\n            return element.getAttribute('title');\n          }\n          return '';\n        };\n        return text.sanitize(accessibleNameComputation(element, inLabelledByContext));\n      };\n      text.label = function(node) {\n        var ref, candidate;\n        candidate = aria.label(node);\n        if (candidate) {\n          return candidate;\n        }\n        if (node.id) {\n          ref = document.querySelector('label[for=\"' + axe.utils.escapeSelector(node.id) + '\"]');\n          candidate = ref && text.visible(ref, true);\n          if (candidate) {\n            return candidate;\n          }\n        }\n        ref = dom.findUp(node, 'label');\n        candidate = ref && text.visible(ref, true);\n        if (candidate) {\n          return candidate;\n        }\n        return null;\n      };\n      text.sanitize = function(str) {\n        'use strict';\n        return str.replace(/\\r\\n/g, '\\n').replace(/\\u00A0/g, ' ').replace(/[\\s]{2,}/g, ' ').trim();\n      };\n      text.visible = function(element, screenReader, noRecursing) {\n        'use strict';\n        var index, child, nodeValue, childNodes = element.childNodes, length = childNodes.length, result = '';\n        for (index = 0; index < length; index++) {\n          child = childNodes[index];\n          if (child.nodeType === 3) {\n            nodeValue = child.nodeValue;\n            if (nodeValue && dom.isVisible(element, screenReader)) {\n              result += child.nodeValue;\n            }\n          } else if (!noRecursing) {\n            result += text.visible(child, screenReader);\n          }\n        }\n        return text.sanitize(result);\n      };\n      axe.utils.toArray = function(thing) {\n        'use strict';\n        return Array.prototype.slice.call(thing);\n      };\n      axe.utils.tokenList = function(str) {\n        'use strict';\n        return str.trim().replace(/\\s{2,}/g, ' ').split(' ');\n      };\n      return commons;\n    }()\n  });\n})(typeof window === 'object' ? window : this);","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/Gruntfile.js":"//jshint maxcomplexity: 12, maxstatements: false, camelcase: false\nvar testConfig = require('./build/test/config');\n\nmodule.exports = function (grunt) {\n\t'use strict';\n\n\tgrunt.loadNpmTasks('grunt-babel');\n\tgrunt.loadNpmTasks('grunt-contrib-clean');\n\tgrunt.loadNpmTasks('grunt-contrib-concat');\n\tgrunt.loadNpmTasks('grunt-contrib-connect');\n\tgrunt.loadNpmTasks('grunt-contrib-copy');\n\tgrunt.loadNpmTasks('grunt-contrib-jshint');\n\tgrunt.loadNpmTasks('grunt-contrib-uglify');\n\tgrunt.loadNpmTasks('grunt-contrib-watch');\n\tgrunt.loadNpmTasks('grunt-retire');\n\tgrunt.loadNpmTasks('grunt-mocha');\n\tgrunt.loadTasks('build/tasks');\n\tgrunt.loadNpmTasks('grunt-parallel');\n\n\tvar langs;\n\tif (grunt.option('lang')) {\n\t\tlangs = (grunt.option('lang') || '')\n\t\t.split(/[,;]/g).map(function (lang) {\n\t\t\tlang = lang.trim();\n\t\t\treturn (lang !== 'en' ? '.' + lang : '');\n\t\t});\n\n\t} else if (grunt.option('all-lang')) {\n\t\tvar localeFiles = require('fs').readdirSync('./locales');\n\t\tlangs = localeFiles.map(function (file) {\n\t\t\treturn '.' + file.replace('.json', '');\n\t\t});\n\t\tlangs.unshift(''); // Add default\n\n\t} else {\n\t\tlangs = [''];\n\t}\n\n\tgrunt.initConfig({\n\t\tpkg: grunt.file.readJSON('package.json'),\n\t\tparallel: {\n\t\t\t'browser-test': {\n\t\t\t\toptions: {\n\t\t\t\t\tgrunt: true\n\t\t\t\t},\n\t\t\t\ttasks: [\n\t\t\t\t\t'test-webdriver:firefox',\n\t\t\t\t\t'test-webdriver:chrome',\n\t\t\t\t\t// Edge Webdriver isn't all too stable, manual testing required\n\t\t\t\t\t// 'test-webdriver:edge',\n\t\t\t\t\t// 'test-webdriver:safari',\n\t\t\t\t\t'test-webdriver:ie',\n\t\t\t\t\t'test-webdriver:chrome-mobile'\n\t\t\t\t]\n\t\t\t}\n\t\t},\n    retire: {\n\t\t\toptions: {\n\t\t\t\t/** list of files to ignore **/\n\t\t\t\tignorefile: '.retireignore.json' //or '.retireignore.json'\n\t\t\t},\n\t\t\tjs: ['lib/*.js'], /** Which js-files to scan. **/\n\t\t\tnode: ['./'] /** Which node directories to scan (containing package.json). **/\n    },\n\t\tclean: ['dist', 'tmp', 'axe.js', 'axe.*.js'],\n\t\tbabel: {\n\t\t\toptions: {\n\t\t\t\tcompact: 'false'\n\t\t\t},\n\t\t\tcore: {\n\t\t\t\tfiles: [{\n\t\t\t\t\texpand: true,\n\t\t\t\t\tcwd: 'lib/core',\n\t\t\t\t\tsrc: ['**/*.js'],\n\t\t\t\t\tdest: 'tmp/core'\n\t\t\t\t}]\n\t\t\t},\n\t\t\tmisc: {\n\t\t\t\tfiles: [{\n\t\t\t\t\texpand: true,\n\t\t\t\t\tcwd: 'tmp',\n\t\t\t\t\tsrc: ['*.js'],\n\t\t\t\t\tdest: 'tmp'\n\t\t\t\t}]\n\t\t\t}\n\t\t},\n\t\t'update-help': {\n\t\t\toptions: {\n\t\t\t\tversion: '<%=pkg.version%>'\n\t\t\t},\n\t\t\trules: {\n\t\t\t\tsrc: ['lib/rules/**/*.json']\n\t\t\t}\n\t\t},\n\t\tconcat: {\n\t\t\tengine: {\n\t\t\t\tcoreFiles: [\n\t\t\t\t\t'tmp/core/index.js',\n\t\t\t\t\t'tmp/core/*/index.js',\n\t\t\t\t\t'tmp/core/**/index.js',\n\t\t\t\t\t'tmp/core/**/*.js'\n\t\t\t\t],\n\t\t\t\toptions: {\n\t\t\t\t\tprocess: true\n\t\t\t\t},\n\t\t\t\tfiles: langs.map(function (lang, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsrc: [\n\t\t\t\t\t\t\t'lib/intro.stub',\n\t\t\t\t\t\t\t'<%= concat.engine.coreFiles %>',\n\t\t\t\t\t\t\t// include rules / checks / commons\n\t\t\t\t\t\t\t'<%= configure.rules.files[' + i + '].dest.auto %>',\n\t\t\t\t\t\t\t'lib/outro.stub'\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdest: 'axe' + lang + '.js',\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t},\n\t\t\tcommons: {\n\t\t\t\tsrc: [\n\t\t\t\t\t'lib/commons/intro.stub',\n\t\t\t\t\t'lib/commons/index.js',\n\t\t\t\t\t'lib/commons/*/index.js',\n\t\t\t\t\t'lib/commons/**/*.js',\n\t\t\t\t\t'lib/commons/outro.stub'\n\t\t\t\t],\n\t\t\t\tdest: 'tmp/commons.js'\n\t\t\t}\n\t\t},\n\t\tconfigure: {\n\t\t\trules: {\n\t\t\t\ttmp: 'tmp/rules.js',\n\t\t\t\toptions: {\n\t\t\t\t\ttags: grunt.option('tags')\n\t\t\t\t},\n\t\t\t\tfiles: langs.map(function (lang) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsrc: ['<%= concat.commons.dest %>'],\n\t\t\t\t\t\tdest: {\n\t\t\t\t\t\t\tauto: 'tmp/rules' + lang + '.js',\n\t\t\t\t\t\t\tdescriptions: 'doc/rule-descriptions' + lang + '.md'\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t}\n\t\t},\n\t\t'add-locale': {\n\t\t\tnewLang: {\n\t\t\t\toptions: { lang: grunt.option('lang') },\n\t\t\t\tsrc: ['<%= concat.commons.dest %>'],\n\t\t\t\tdest: './locales/' + (grunt.option('lang') || 'new-locale') + '.json'\n\t\t\t}\n\t\t},\n\t\tlangs : {\n\t\t\tgenerate: {\n\t\t\t\tcheck: 'lib/checks/language/valid-lang'\n\t\t\t}\n\t\t},\n\t\tvalidate: {\n\t\t\ttools: {\n\t\t\t\toptions: {\n\t\t\t\t\ttype: 'tool'\n\t\t\t\t},\n\t\t\t\tsrc: 'lib/tools/**/*.json'\n\t\t\t},\n\t\t\tcheck: {\n\t\t\t\toptions: {\n\t\t\t\t\ttype: 'check'\n\t\t\t\t},\n\t\t\t\tsrc: 'lib/checks/**/*.json'\n\t\t\t},\n\t\t\trule: {\n\t\t\t\toptions: {\n\t\t\t\t\ttype: 'rule'\n\t\t\t\t},\n\t\t\t\tsrc: 'lib/rules/**/*.json'\n\t\t\t}\n\t\t},\n\t\tuglify: {\n\t\t\tbeautify: {\n\t\t\t\tfiles: langs.map(function (lang, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsrc: ['<%= concat.engine.files[' + i + '].dest %>'],\n\t\t\t\t\t\tdest: '<%= concat.engine.files[' + i + '].dest %>'\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\toptions: {\n\t\t\t\t\tmangle: false,\n\t\t\t\t\tcompress: false,\n\t\t\t\t\tbeautify: {\n\t\t\t\t\t\tbeautify: true,\n\t\t\t\t\t\tindent_level: 2,\n\t\t\t\t\t\tbracketize: true,\n\t\t\t\t\t\tquote_style: 1\n\t\t\t\t\t},\n\t\t\t\t\tpreserveComments: 'some'\n\t\t\t\t}\n\t\t\t},\n\t\t\tminify: {\n\t\t\t\tfiles: langs.map(function (lang, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tsrc: ['<%= concat.engine.files[' + i + '].dest %>'],\n\t\t\t\t\t\tdest: './axe' + lang + '.min.js'\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t\toptions: {\n\t\t\t\t\tpreserveComments: function(node, comment) {\n\t\t\t\t\t\t// preserve comments that start with a bang\n\t\t\t\t\t\treturn /^!/.test( comment.value );\n\t\t\t\t\t},\n\t\t\t\t\tmangle: {\n\t\t\t\t\t\texcept: ['commons', 'utils', 'axe', 'window', 'document']\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\twatch: {\n\t\t\tfiles: ['lib/**/*', 'test/**/*.js', 'Gruntfile.js'],\n\t\t\ttasks: ['build', 'testconfig', 'fixture']\n\t\t},\n\t\ttestconfig: {\n\t\t\ttest: {\n\t\t\t\tsrc: ['test/integration/rules/**/*.json'],\n\t\t\t\tdest: 'tmp/integration-tests.js'\n\t\t\t}\n\t\t},\n\t\tfixture: {\n\t\t\tengine: {\n\t\t\t\tsrc: ['<%= concat.engine.coreFiles %>'],\n\t\t\t\tdest: 'test/core/index.html',\n\t\t\t\toptions: {\n\t\t\t\t\tfixture: 'test/runner.tmpl',\n\t\t\t\t\ttestCwd: 'test/core',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttitle: 'aXe Core Tests'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tchecks: {\n\t\t\t\tsrc: [\n\t\t\t\t\t'<%= concat.engine.files[0].dest %>',\n\t\t\t\t\t'build/test/engine.js',\n\t\t\t\t\t'<%= configure.rules.tmp %>'\n\t\t\t\t],\n\t\t\t\tdest: 'test/checks/index.html',\n\t\t\t\toptions: {\n\t\t\t\t\tfixture: 'test/runner.tmpl',\n\t\t\t\t\ttestCwd: 'test/checks',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttitle: 'aXe Check Tests'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcommons: {\n\t\t\t\tsrc: [\n\t\t\t\t\t'<%= concat.engine.files[0].dest %>',\n\t\t\t\t\t'build/test/engine.js',\n\t\t\t\t\t'<%= configure.rules.tmp %>'\n\t\t\t\t],\n\t\t\t\tdest: 'test/commons/index.html',\n\t\t\t\toptions: {\n\t\t\t\t\tfixture: 'test/runner.tmpl',\n\t\t\t\t\ttestCwd: 'test/commons',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttitle: 'aXe Commons Tests'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\truleMatches: {\n\t\t\t\tsrc: [\n\t\t\t\t\t'<%= concat.engine.files[0].dest %>',\n\t\t\t\t\t'build/test/engine.js',\n\t\t\t\t\t'<%= configure.rules.tmp %>'\n\t\t\t\t],\n\t\t\t\tdest: 'test/rule-matches/index.html',\n\t\t\t\toptions: {\n\t\t\t\t\tfixture: 'test/runner.tmpl',\n\t\t\t\t\ttestCwd: 'test/rule-matches',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttitle: 'aXe Rule Matches Tests'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tintegration: {\n\t\t\t\tsrc: ['<%= concat.engine.files[0].dest %>'],\n\t\t\t\tdest: 'test/integration/rules/index.html',\n\t\t\t\toptions: {\n\t\t\t\t\tfixture: 'test/runner.tmpl',\n\t\t\t\t\ttestCwd: 'test/integration/rules',\n\t\t\t\t\ttests: ['../../../tmp/integration-tests.js', 'runner.js'],\n\t\t\t\t\tdata: {\n\t\t\t\t\t\ttitle: 'aXe Integration Tests'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tmocha: testConfig(grunt, {\n\t\t\treporter: grunt.option('reporter') || 'Spec'\n\t\t}),\n\t\t'test-webdriver': (function () {\n\t\t\tvar tests = testConfig(grunt);\n\t\t\tvar options = Object.assign({}, tests.unit.options);\n\t\t\toptions.urls = options.urls.concat(tests.integration.options.urls);\n\t\t\tvar driverTests = {};\n\n\t\t\t['firefox', 'chrome', 'ie', 'safari', 'edge', 'chrome-mobile']\n\t\t\t.forEach(function (browser) {\n\t\t\t\tdriverTests[browser] = {\n\t\t\t\t\toptions: Object.assign({ browser: browser }, options)\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn driverTests;\n\t\t}()),\n\t\tconnect: {\n\t\t\ttest: {\n\t\t\t\toptions: {\n\t\t\t\t\thostname: '0.0.0.0',\n\t\t\t\t\tport: grunt.option('port') || 9876,\n\t\t\t\t\tbase: ['.']\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tjshint: {\n\t\t\taxe: {\n\t\t\t\toptions: {\n\t\t\t\t\tjshintrc: true,\n\t\t\t\t\treporter: grunt.option('report') ? 'checkstyle' : undefined,\n\t\t\t\t\treporterOutput: grunt.option('report') ? 'tmp/lint.xml' : undefined\n\t\t\t\t},\n\t\t\t\tsrc: ['lib/**/*.js', 'test/**/*.js', 'build/tasks/**/*.js', 'doc/**/*.js', 'Gruntfile.js']\n\t\t\t}\n\t\t}\n\t});\n\n\tgrunt.registerTask('default', ['build']);\n\n\tgrunt.registerTask('build', ['clean', 'jshint', 'validate', 'concat:commons', 'configure',\n\t\t 'babel', 'concat:engine', 'uglify']);\n\n\tgrunt.registerTask('test', ['build', 'retire', 'testconfig', 'fixture', 'connect',\n\t\t'mocha', 'parallel', 'jshint']);\n\n\tgrunt.registerTask('ci-build', ['build', 'retire', 'testconfig', 'fixture', 'connect',\n\t 'parallel', 'jshint']);\n\n\tgrunt.registerTask('test-fast', ['build', 'testconfig', 'fixture', 'connect',\n\t\t'mocha', 'jshint']);\n\n\tgrunt.registerTask('translate', ['clean', 'jshint', 'validate', 'concat:commons', 'add-locale']);\n\n\tgrunt.registerTask('dev', ['build', 'testconfig', 'fixture', 'connect', 'watch']);\n\n\tgrunt.registerTask('dev:no-lint', ['clean', 'validate', 'concat:commons', 'configure',\n\t\t 'babel', 'concat:engine', 'uglify', 'testconfig', 'fixture', 'connect', 'watch']);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/build/test/config.js":"exports = module.exports = function (grunt, options) {\n\tvar host = 'localhost';\n\n\tif (process.env.REMOTE_TESTSERVER_HOST) {\n\t\thost = process.env.REMOTE_TESTSERVER_HOST;\n\t}\n\n\tfunction mapToUrl(files, port) {\n\t\treturn grunt.file.expand(files).map(function (file) {\n\t\t\treturn 'http://' + host + ':' + port + '/' + file;\n\t\t});\n\t}\n\n\treturn {\n\t\toptions: options,\n\t\tunit: {\n\t\t\toptions: {\n\t\t\t\tlogErrors: true,\n\t\t\t\tlog: true,\n\t\t\t\turls: [\n\t\t\t\t\t'http://' + host + ':<%= connect.test.options.port %>/test/core/',\n\t\t\t\t\t'http://' + host + ':<%= connect.test.options.port %>/test/checks/',\n\t\t\t\t\t'http://' + host + ':<%= connect.test.options.port %>/test/rule-matches/',\n\t\t\t\t\t'http://' + host + ':<%= connect.test.options.port %>/test/commons/',\n\t\t\t\t\t'http://' + host + ':<%= connect.test.options.port %>/test/integration/rules/'\n\t\t\t\t],\n\t\t\t\trun: true,\n\t\t\t\tmocha: {\n\t\t\t\t\tgrep: grunt.option('grep')\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tintegration: {\n\t\t\toptions: {\n\t\t\t\tlog: true,\n\t\t\t\turls: mapToUrl(['test/integration/full/**/*.html', '!test/integration/full/**/frames/**/*.html'],\n\t\t\t\t\t'<%= connect.test.options.port %>'),\n\t\t\t\trun: true,\n\t\t\t\tmocha: {\n\t\t\t\t\tgrep: grunt.option('grep')\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/index.js":"/*exported commons */\nvar commons = {};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/constants.js":"(function (axe) {\n\nvar definitions = [{\n\tname: 'NA',\n\tvalue: 'inapplicable',\n\tpriority: 0,\n\tgroup: 'inapplicable'\n}, {\n\tname: 'PASS',\n\tvalue: 'passed',\n\tpriority: 1,\n\tgroup: 'passes'\n}, {\n\tname: 'CANTTELL',\n\tvalue: 'cantTell',\n\tpriority: 2,\n\tgroup: 'incomplete'\n}, {\n\tname: 'FAIL',\n\tvalue: 'failed',\n\tpriority: 3,\n\tgroup: 'violations'\n}];\n\nvar constants = {\n\thelpUrlBase: 'https://dequeuniversity.com/rules/',\n\tresults: [],\n\tresultGroups: [],\n\tresultGroupMap: {},\n\timpact: Object.freeze(['minor', 'moderate', 'serious', 'critical'])\n};\n\n\ndefinitions.forEach(function (definition) {\n\tvar name = definition.name;\n\tvar value = definition.value;\n\tvar priority = definition.priority;\n\tvar group = definition.group;\n\n\tconstants[name] = value;\n\tconstants[name + '_PRIO'] = priority;\n\tconstants[name + '_GROUP'] = group;\n\n\tconstants.results[priority] = value;\n\tconstants.resultGroups[priority] = group;\n\n\tconstants.resultGroupMap[value] = group;\n});\n\n// Freeze everything\nObject.freeze(constants.results);\nObject.freeze(constants.resultGroups);\nObject.freeze(constants.resultGroupMap);\nObject.freeze(constants);\n\n// Ensure that constants can not be changed\nObject.defineProperty(axe, 'constants', {\n\tvalue: constants,\n\tenumerable: true,\n\tconfigurable: false,\n\twritable: false\n});\n\n}(axe));","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/aria-allowed-attr-matches.js":"var role = node.getAttribute('role');\nif (!role) {\n\trole = axe.commons.aria.implicitRole(node);\n}\nvar allowed = axe.commons.aria.allowedAttr(role);\nif (role && allowed) {\n\tvar aria = /^aria-/;\n\tif (node.hasAttributes()) {\n\t\tvar attrs = node.attributes;\n\t\tfor (var i = 0, l = attrs.length; i < l; i++) {\n\t\t\tif (aria.test(attrs[i].name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n}\n\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/aria-has-attr-matches.js":"var aria = /^aria-/;\nif (node.hasAttributes()) {\n\tvar attrs = node.attributes;\n\tfor (var i = 0, l = attrs.length; i < l; i++) {\n\t\tif (aria.test(attrs[i].name)) {\n\t\t\treturn true;\n\t\t}\n\t}\n}\n\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/bypass-matches.js":"return !!node.querySelector('a[href]');\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/color-contrast-matches.js":"/* global document */\n\nvar nodeName = node.nodeName.toUpperCase(),\n\tnodeType = node.type,\n\tdoc = document;\n\nif (node.getAttribute('aria-disabled') === 'true' || axe.commons.dom.findUp(node, '[aria-disabled=\"true\"]')) {\n\treturn false;\n}\n\nif (nodeName === 'INPUT') {\n\treturn ['hidden', 'range', 'color', 'checkbox', 'radio', 'image'].indexOf(nodeType) === -1 && !node.disabled;\n}\n\nif (nodeName === 'SELECT') {\n\treturn !!node.options.length && !node.disabled;\n}\n\nif (nodeName === 'TEXTAREA') {\n\treturn !node.disabled;\n}\n\nif (nodeName === 'OPTION') {\n\treturn false;\n}\n\nif (nodeName === 'BUTTON' && node.disabled || axe.commons.dom.findUp(node, 'button[disabled]')) {\n\treturn false;\n}\n\nif (nodeName === 'FIELDSET' && node.disabled || axe.commons.dom.findUp(node, 'fieldset[disabled]')) {\n\treturn false;\n}\n\n// check if the element is a label or label descendant for a disabled control\nvar nodeParentLabel = axe.commons.dom.findUp(node, 'label');\nif (nodeName === 'LABEL' || nodeParentLabel) {\n\tvar relevantNode = node;\n\tif (nodeParentLabel) {\n\t\trelevantNode = nodeParentLabel;\n\t}\n\t// explicit label of disabled input\n\tvar candidate = relevantNode.htmlFor && doc.getElementById(relevantNode.htmlFor);\n\tif (candidate && candidate.disabled) {\n\t\treturn false;\n\t}\n\n\tvar candidate = node.querySelector('input:not([type=\"hidden\"]):not([type=\"image\"])' +\n\t\t':not([type=\"button\"]):not([type=\"submit\"]):not([type=\"reset\"]), select, textarea');\n\tif (candidate && candidate.disabled) {\n\t\treturn false;\n\t}\n\n}\n\n// label of disabled control associated w/ aria-labelledby\nif (node.id) {\n\tvar candidate = doc.querySelector('[aria-labelledby~=' + axe.commons.utils.escapeSelector(node.id) + ']');\n\tif (candidate && candidate.disabled) {\n\t\treturn false;\n\t}\n}\n\nif (axe.commons.text.visible(node, false, true) === '') {\n\treturn false;\n}\n\nvar range = document.createRange(),\n\tchildNodes = node.childNodes,\n\tlength = childNodes.length,\n\tchild, index;\n\nfor (index = 0; index < length; index++) {\n\tchild = childNodes[index];\n\n\tif (child.nodeType === 3 && axe.commons.text.sanitize(child.nodeValue) !== '') {\n\t\trange.selectNodeContents(child);\n\t}\n}\n\nvar rects = range.getClientRects();\nlength = rects.length;\n\nfor (index = 0; index < length; index++) {\n\t//check to see if the rectangle impinges\n\tif (axe.commons.dom.visuallyOverlaps(rects[index], node)) {\n\t\treturn true;\n\t}\n}\n\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/data-table-large-matches.js":"if (axe.commons.table.isDataTable(node)) {\n\tvar tableArray = axe.commons.table.toArray(node);\n\treturn (tableArray.length >= 3 &&\n\t\t\ttableArray[0].length >= 3 &&\n\t\t\ttableArray[1].length >= 3 &&\n\t\t\ttableArray[2].length >= 3);\n}\n\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/data-table-matches.js":"return axe.commons.table.isDataTable(node);","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/frame-title-has-text.js":"var title = node.getAttribute('title');\nreturn !!(title ? axe.commons.text.sanitize(title).trim() : '');","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/layout-table-matches.js":"return !axe.commons.table.isDataTable(node);","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/link-in-text-block-matches.js":"var text = axe.commons.text.sanitize(node.textContent);\n\nif (!text) {\n\treturn false;\n}\nif (!axe.commons.dom.isVisible(node, false)) {\n\treturn false;\n}\n\nreturn axe.commons.dom.isInTextBlock(node);\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/p-as-heading-matches.js":"const children = Array.from(node.parentNode.childNodes);\nconst nodeText = node.textContent.trim();\nconst isSentence = /[.!?:;](?![.!?:;])/g;\n\n// Check that there is text, and it is not more than a single sentence\nif (nodeText.length === 0 || (nodeText.match(isSentence) || []).length >= 2) {\n\treturn false;\n}\n\n// Grab sibling p element following the current node\nconst siblingsAfter = children.slice( children.indexOf(node) + 1)\n.filter(elm =>\n\telm.nodeName.toUpperCase() === 'P' &&\n\telm.textContent.trim() !== ''\n);\n\nreturn siblingsAfter.length !== 0;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/rules/window-is-top.js":"return node.ownerDocument.defaultView.self === node.ownerDocument.defaultView.top;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/abstractrole.js":"return axe.commons.aria.getRoleType(node.getAttribute('role')) === 'abstract';\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/allowed-attr.js":"var invalid = [];\n\nvar attr, attrName, allowed,\n\trole = node.getAttribute('role'),\n\tattrs = node.attributes;\n\nif (!role) {\n\trole = axe.commons.aria.implicitRole(node);\n}\nallowed = axe.commons.aria.allowedAttr(role);\nif (role && allowed) {\n\tfor (var i = 0, l = attrs.length; i < l; i++) {\n\t\tattr = attrs[i];\n\t\tattrName = attr.name;\n\t\tif (axe.commons.aria.validateAttr(attrName) && allowed.indexOf(attrName) === -1) {\n\t\t\tinvalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n\t\t}\n\t}\n}\n\nif (invalid.length) {\n\tthis.data(invalid);\n\treturn false;\n}\n\nreturn true;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/invalidrole.js":"return !axe.commons.aria.isValidRole(node.getAttribute('role'));\n\n\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/required-attr.js":"var missing = [];\n\nif (node.hasAttributes()) {\n\tvar attr,\n\t\trole = node.getAttribute('role'),\n\t\trequired = axe.commons.aria.requiredAttr(role);\n\n\tif (role && required) {\n\t\tfor (var i = 0, l = required.length; i < l; i++) {\n\t\t\tattr = required[i];\n\t\t\tif (!node.getAttribute(attr)) {\n\t\t\t\tmissing.push(attr);\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (missing.length) {\n\tthis.data(missing);\n\treturn false;\n}\n\nreturn true;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/required-children.js":"var requiredOwned = axe.commons.aria.requiredOwned,\nimplicitNodes = axe.commons.aria.implicitNodes,\nmatchesSelector = axe.commons.utils.matchesSelector,\nidrefs = axe.commons.dom.idrefs;\n\nfunction owns(node, role, ariaOwned) {\n\tif (node === null) { return false; }\n\tvar implicit = implicitNodes(role),\n\tselector = ['[role=\"' + role + '\"]'];\n\n\tif (implicit) {\n\t\tselector = selector.concat(implicit);\n\t}\n\n\tselector = selector.join(',');\n\n\treturn ariaOwned ? (matchesSelector(node, selector) || !!node.querySelector(selector)) :\n\t\t!!node.querySelector(selector);\n}\n\nfunction ariaOwns(nodes, role) {\n\tvar index, length;\n\n\tfor (index = 0, length = nodes.length; index < length; index++) {\n\t\tif (nodes[index] === null) { continue; }\n\t\tif (owns(nodes[index], role, true)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction missingRequiredChildren(node, childRoles, all) {\n\n\tvar i,\n\tl = childRoles.length,\n\tmissing = [],\n\townedElements = idrefs(node, 'aria-owns');\n\n\tfor (i = 0; i < l; i++) {\n\t\tvar r = childRoles[i];\n\t\tif (owns(node, r) || ariaOwns(ownedElements, r)) {\n\t\t\tif (!all) { return null; }\n\t\t} else {\n\t\t\tif (all) { missing.push(r); }\n\t\t}\n\t}\n\n\tif (missing.length) { return missing; }\n\tif (!all && childRoles.length) { return childRoles; }\n\treturn null;\n}\n\nvar role = node.getAttribute('role');\nvar required = requiredOwned(role);\n\nif (!required) { return true; }\n\nvar all = false;\nvar childRoles = required.one;\nif (!childRoles) {\n\tvar all = true;\n\tchildRoles = required.all;\n}\n\nvar missing = missingRequiredChildren(node, childRoles, all);\n\nif (!missing) { return true; }\n\nthis.data(missing);\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/required-parent.js":"function getSelector(role) {\n\tvar impliedNative = axe.commons.aria.implicitNodes(role) || [];\n\treturn impliedNative.concat('[role=\"' + role + '\"]').join(',');\n}\n\nfunction getMissingContext(element, requiredContext, includeElement) {\n\tvar index, length,\n\trole = element.getAttribute('role'),\n\tmissing = [];\n\n\tif (!requiredContext) {\n\t\trequiredContext = axe.commons.aria.requiredContext(role);\n\t}\n\n\tif (!requiredContext) { return null; }\n\n\tfor (index = 0, length = requiredContext.length; index < length; index++) {\n\t\tif (includeElement && axe.utils.matchesSelector(element, getSelector(requiredContext[index]))) {\n\t\t\treturn null;\n\t\t}\n\t\tif (axe.commons.dom.findUp(element, getSelector(requiredContext[index]))) {\n\t\t\t//if one matches, it passes\n\t\t\treturn null;\n\t\t} else {\n\t\t\tmissing.push(requiredContext[index]);\n\t\t}\n\t}\n\n\treturn missing;\n}\n\nfunction getAriaOwners(element) {\n\tvar owners = [],\n\t\to = null;\n\n\twhile (element) {\n\t\tif (element.id) {\n\t\t\to = document.querySelector('[aria-owns~=' + axe.commons.utils.escapeSelector(element.id) + ']');\n\t\t\tif (o) { owners.push(o); }\n\t\t}\n\t\telement = element.parentNode;\n\t}\n\n\treturn owners.length ? owners : null;\n}\n\nvar missingParents = getMissingContext(node);\n\nif (!missingParents) { return true; }\n\nvar owners = getAriaOwners(node);\n\nif (owners) {\n\tfor (var i = 0, l = owners.length; i < l; i++) {\n\t\tmissingParents = getMissingContext(owners[i], missingParents, true);\n\t\tif (!missingParents) { return true; }\n\t}\n}\n\nthis.data(missingParents);\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/valid-attr.js":"options = Array.isArray(options) ? options : [];\n\nvar invalid = [],\n\taria = /^aria-/;\n\nvar attr,\n\tattrs = node.attributes;\n\nfor (var i = 0, l = attrs.length; i < l; i++) {\n\tattr = attrs[i].name;\n\tif (options.indexOf(attr) === -1 && aria.test(attr) && !axe.commons.aria.validateAttr(attr)) {\n\t\tinvalid.push(attr);\n\t}\n}\n\nif (invalid.length) {\n\tthis.data(invalid);\n\treturn false;\n}\n\nreturn true;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/aria/valid-attr-value.js":"options = Array.isArray(options) ? options : [];\n\nvar invalid = [],\n\taria = /^aria-/;\n\nvar attr, attrName,\n\tattrs = node.attributes;\n\nfor (var i = 0, l = attrs.length; i < l; i++) {\n\tattr = attrs[i];\n\tattrName = attr.name;\n\tif (options.indexOf(attrName) === -1 && aria.test(attrName) &&\n\t\t!axe.commons.aria.validateAttrValue(node, attrName)) {\n\n\t\tinvalid.push(attrName + '=\"' + attr.nodeValue + '\"');\n\t}\n}\n\nif (invalid.length) {\n\tthis.data(invalid);\n\treturn false;\n}\n\nreturn true;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/color/color-contrast.js":"if (!axe.commons.dom.isVisible(node, false)) {\n\treturn true;\n}\n\nvar noScroll = !!(options || {}).noScroll;\nvar bgNodes = [],\n\tbgColor = axe.commons.color.getBackgroundColor(node, bgNodes, noScroll),\n\tfgColor = axe.commons.color.getForegroundColor(node, noScroll);\n\nvar nodeStyle = window.getComputedStyle(node);\nvar fontSize = parseFloat(nodeStyle.getPropertyValue('font-size'));\nvar fontWeight = nodeStyle.getPropertyValue('font-weight');\nvar bold = (['bold', 'bolder', '600', '700', '800', '900'].indexOf(fontWeight) !== -1);\n\nvar cr = axe.commons.color.hasValidContrastRatio(bgColor, fgColor, fontSize, bold);\n\n// truncate ratio to three digits while rounding down\n// 4.499 = 4.49, 4.019 = 4.01\nvar truncatedResult = Math.floor(cr.contrastRatio * 100) / 100;\n\n// if fgColor or bgColor are missing, get more information.\nvar missing = [];\nif (fgColor === null) {\n\tmissing.push(axe.commons.color.incompleteData.get('fgColor'));\n}\nif (bgColor === null) {\n\tmissing.push(axe.commons.color.incompleteData.get('bgColor'));\n}\n// need both independently in case both are missing\nvar data = {\n\tfgColor: fgColor ? fgColor.toHexString() : undefined,\n\tbgColor: bgColor ? bgColor.toHexString() : undefined,\n\tcontrastRatio: cr ? truncatedResult : undefined,\n\tfontSize: (fontSize * 72 / 96).toFixed(1) + 'pt',\n\tfontWeight: bold ? 'bold' : 'normal',\n\tmissingData: missing\n};\n\nthis.data(data);\n\nif (!cr.isValid) {\n\tthis.relatedNodes(bgNodes);\n}\n\n//We don't know, so we'll put it into Can't Tell\nif (fgColor === null || bgColor === null) {\n\tmissing = [];\n\taxe.commons.color.incompleteData.clear();\n\treturn undefined;\n}\nreturn cr.isValid;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/color/link-in-text-block.js":"/* global axe*/\nvar color = axe.commons.color;\n\nfunction getContrast(color1, color2) {\n\tvar c1lum = color1.getRelativeLuminance();\n\tvar c2lum = color2.getRelativeLuminance();\n\treturn (Math.max(c1lum, c2lum) + 0.05) / (Math.min(c1lum, c2lum) + 0.05);\n}\n\nvar blockLike = ['block', 'list-item', 'table', 'flex', 'grid', 'inline-block'];\nfunction isBlock(elm) {\n\tvar display = window.getComputedStyle(elm).getPropertyValue('display');\n\treturn (blockLike.indexOf(display) !== -1 ||\n\t\t\tdisplay.substr(0, 6) === 'table-');\n}\n\n\nif (isBlock(node)) {\n\treturn false;\n}\n\nvar parentBlock = node.parentNode;\nwhile (parentBlock.nodeType === 1 && !isBlock(parentBlock)) {\n\tparentBlock = parentBlock.parentNode;\n}\n\n// TODO: Check the :visited state of the link\nif (color.elementIsDistinct(node, parentBlock)) {\n\treturn true;\n\n} else {\n\n\t// Check if contrast of foreground is sufficient\n\tvar nodeColor, parentColor;\n\tnodeColor = color.getForegroundColor(node);\n\tparentColor = color.getForegroundColor(parentBlock);\n\n\tif (!nodeColor || !parentColor) {\n\t\treturn undefined;\n\t}\n\n\tvar contrast = getContrast(nodeColor, parentColor);\n\tif (contrast === 1) {\n\t\treturn true;\n\t} else if (contrast >= 3.0) {\n\t\taxe.commons.color.incompleteData.set('fgColor', {\n\t\t\tnode: nodeColor ? parentBlock : node,\n\t\t\treason: 'bgContrast'\n\t\t});\n\t\tthis.data({\n\t\t\tmissingData: [axe.commons.color.incompleteData.get('fgColor')]\n\t\t});\n\t\taxe.commons.color.incompleteData.clear();\n\t\t// User needs to check whether there is a hover and a focus style\n\t\treturn undefined;\n\t}\n\n\t// Check if contrast of background is sufficient\n\tnodeColor = color.getBackgroundColor(node);\n\tparentColor = color.getBackgroundColor(parentBlock);\n\n\tif (!nodeColor || !parentColor || getContrast(nodeColor, parentColor) >= 3.0) {\n\t\tlet reason;\n\t\tif (!nodeColor || !parentColor) {\n\t\t\treason = axe.commons.color.incompleteData.get('bgColor').reason;\n\t\t}\n\t\telse {\n\t\t\treason = 'bgContrast';\n\t\t}\n\t\taxe.commons.color.incompleteData.set('fgColor', {\n\t\t\tnode: nodeColor ? parentBlock : node,\n\t\t\treason: reason\n\t\t});\n\t\tthis.data({\n\t\t\tmissingData: [axe.commons.color.incompleteData.get('fgColor')]\n\t\t});\n\t\taxe.commons.color.incompleteData.clear();\n\t\treturn undefined;\n\t}\n\n}\n\n// TODO: We should check the focus / hover style too\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/forms/fieldset-after.js":"var seen = {};\n\nreturn results.filter(function (result) {\n\t// passes can pass through\n\tif (result.result) {\n\t\treturn true;\n\t}\n\tvar data = result.data;\n\tif (data) {\n\t\tseen[data.type] = seen[data.type] || {};\n\t\tif (!seen[data.type][data.name]) {\n\t\t\tseen[data.type][data.name] = [data];\n\t\t\treturn true;\n\t\t}\n\t\tvar hasBeenSeen = seen[data.type][data.name].some(function (candidate) {\n\t\t\treturn candidate.failureCode === data.failureCode;\n\t\t});\n\t\tif (!hasBeenSeen) {\n\t\t\tseen[data.type][data.name].push(data);\n\t\t}\n\n\t\treturn !hasBeenSeen;\n\n\t}\n\treturn false;\n});\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/forms/fieldset.js":"var failureCode,\n\tself = this;\n\n\nfunction getUnrelatedElements(parent, name) {\n\treturn axe.commons.utils.toArray(parent.querySelectorAll('select,textarea,button,input:not([name=\"' + name +\n\t\t'\"]):not([type=\"hidden\"])'));\n}\n\nfunction checkFieldset(group, name) {\n\n\tvar firstNode = group.firstElementChild;\n\tif (!firstNode || firstNode.nodeName.toUpperCase() !== 'LEGEND') {\n\t\tself.relatedNodes([group]);\n\t\tfailureCode = 'no-legend';\n\t\treturn false;\n\t}\n\tif (!axe.commons.text.accessibleText(firstNode)) {\n\t\tself.relatedNodes([firstNode]);\n\t\tfailureCode = 'empty-legend';\n\t\treturn false;\n\t}\n\tvar otherElements = getUnrelatedElements(group, name);\n\tif (otherElements.length) {\n\t\tself.relatedNodes(otherElements);\n\t\tfailureCode = 'mixed-inputs';\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction checkARIAGroup(group, name) {\n\n\tvar hasLabelledByText = axe.commons.dom.idrefs(group, 'aria-labelledby').some(function (element) {\n\t\treturn element && axe.commons.text.accessibleText(element);\n\t});\n\tvar ariaLabel = group.getAttribute('aria-label');\n\tif (!hasLabelledByText && !(ariaLabel && axe.commons.text.sanitize(ariaLabel))) {\n\t\tself.relatedNodes(group);\n\t\tfailureCode = 'no-group-label';\n\t\treturn false;\n\t}\n\n\tvar otherElements = getUnrelatedElements(group, name);\n\tif (otherElements.length) {\n\t\tself.relatedNodes(otherElements);\n\t\tfailureCode = 'group-mixed-inputs';\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction spliceCurrentNode(nodes, current) {\n\treturn axe.commons.utils.toArray(nodes).filter(function (candidate) {\n\t\treturn candidate !== current;\n\t});\n}\n\nfunction runCheck(element) {\n\tvar name = axe.commons.utils.escapeSelector(node.name);\n\tvar matchingNodes = document.querySelectorAll('input[type=\"' +\n\t\taxe.commons.utils.escapeSelector(node.type) + '\"][name=\"' + name + '\"]');\n\tif (matchingNodes.length < 2) {\n\t\treturn true;\n\t}\n\tvar fieldset = axe.commons.dom.findUp(element, 'fieldset');\n\tvar group = axe.commons.dom.findUp(element, '[role=\"group\"]' + (node.type === 'radio' ? ',[role=\"radiogroup\"]' : ''));\n\tif (!group && !fieldset) {\n\t\tfailureCode = 'no-group';\n\t\tself.relatedNodes(spliceCurrentNode(matchingNodes, element));\n\t\treturn false;\n\t}\n\treturn fieldset ? checkFieldset(fieldset, name) : checkARIAGroup(group, name);\n\n}\n\nvar data = {\n\tname: node.getAttribute('name'),\n\ttype: node.getAttribute('type')\n};\n\nvar result = runCheck(node);\nif (!result) {\n\tdata.failureCode = failureCode;\n}\nthis.data(data);\n\nreturn result;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/forms/labelledby-after.js":"var seen = {};\n\nreturn results.filter(function (result) {\n\tvar data = result.data;\n\tif (data) {\n\t\tseen[data.type] = seen[data.type] || {};\n\t\tif (!seen[data.type][data.name]) {\n\t\t\tseen[data.type][data.name] = true;\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n});","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/forms/labelledby.js":"this.data({\n\tname: node.getAttribute('name'),\n\ttype: node.getAttribute('type')\n});\n\nvar matchingNodes = document.querySelectorAll('input[type=\"' +\n\taxe.commons.utils.escapeSelector(node.type) + '\"][name=\"' + axe.commons.utils.escapeSelector(node.name) + '\"]');\nif (matchingNodes.length <= 1) {\n\treturn true;\n}\n\n// Check to see if there's an aria-labelledby value that all nodes have in common\nreturn [].map.call(matchingNodes, function (m) {\n\tvar l = m.getAttribute('aria-labelledby');\n\treturn l ? l.split(/\\s+/) : [];\n}).reduce(function (prev, curr) {\n\treturn prev.filter(function (n) {\n\t\treturn curr.indexOf(n) !== -1;\n\t});\n}).filter(function (n) {\n\tvar labelNode = document.getElementById(n);\n\treturn labelNode && axe.commons.text.accessibleText(labelNode);\n}).length !== 0;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/keyboard/accesskeys-after.js":"var seen = {};\nreturn results.filter(function (r) {\n\tif (!r.data) {\n\t\treturn false;\n\t}\n\tvar key = r.data.toUpperCase();\n\tif (!seen[key]) {\n\t\tseen[key] = r;\n\t\tr.relatedNodes = [];\n\t\treturn true;\n\t}\n\tseen[key].relatedNodes.push(r.relatedNodes[0]);\n\treturn false;\n}).map(function (r) {\n\tr.result = !!r.relatedNodes.length;\n\treturn r;\n});\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/keyboard/accesskeys.js":"if (axe.commons.dom.isVisible(node, false)) {\n\tthis.data(node.getAttribute('accesskey'));\n\tthis.relatedNodes([node]);\n}\nreturn true;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/keyboard/focusable-no-name.js":"var tabIndex = node.getAttribute('tabindex'),\n\tisFocusable = axe.commons.dom.isFocusable(node) && tabIndex > -1;\nif (!isFocusable) {\n\treturn false;\n}\nreturn !axe.commons.text.accessibleText(node);\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/keyboard/tabindex.js":"return node.tabIndex <= 0;\n\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/label/duplicate-img-label.js":"var imgs = node.querySelectorAll('img');\nvar text = axe.commons.text.visible(node, true).toLowerCase();\n\nif (text === '') {\n\treturn false;\n}\n\nfor (var i = 0, len = imgs.length; i < len; i++) {\n\tvar img = imgs[i];\n\tvar imgAlt = axe.commons.text.accessibleText(img).toLowerCase();\n\tif (imgAlt === text &&\n\timg.getAttribute('role') !== 'presentation' &&\n\taxe.commons.dom.isVisible(img)) {\n\t\treturn true;\n\t}\n}\n\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/label/explicit.js":"if (node.id) {\n\tvar label = document.querySelector('label[for=\"' + axe.commons.utils.escapeSelector(node.id) + '\"]');\n\tif (label) {\n\t\treturn !!axe.commons.text.accessibleText(label);\n\t}\n}\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/label/help-same-as-label.js":"\nvar labelText = axe.commons.text.label(node),\n\tcheck = node.getAttribute('title');\n\nif (!labelText) {\n\treturn false;\n}\n\nif (!check) {\n\tcheck = '';\n\n\tif (node.getAttribute('aria-describedby')) {\n\t\tvar ref = axe.commons.dom.idrefs(node, 'aria-describedby');\n\t\tcheck = ref.map(function (thing) {\n\t\t\treturn thing ? axe.commons.text.accessibleText(thing) : '';\n\t\t}).join('');\n\t}\n}\n\nreturn axe.commons.text.sanitize(check) === axe.commons.text.sanitize(labelText);\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/label/implicit.js":"\nvar label = axe.commons.dom.findUp(node, 'label');\nif (label) {\n\treturn !!axe.commons.text.accessibleText(label);\n}\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/label/multiple-label.js":"var labels = [].slice.call(document.querySelectorAll('label[for=\"' +\n\taxe.commons.utils.escapeSelector(node.id) + '\"]')),\n\tparent = node.parentNode;\n\nif (labels.length) {\n\t// filter out hidden labels because they're fine\n\t// except: fail first label if hidden because of VO\n\tlabels = labels.filter(function(label, index) {\n\t\tif ((index === 0 && !axe.commons.dom.isVisible(label, true)) || axe.commons.dom.isVisible(label, true)) {\n\t\t\treturn label;\n\t\t}\n\t});\n}\n\nwhile (parent) {\n\tif (parent.tagName === 'LABEL' && labels.indexOf(parent) === -1) {\n\t\tlabels.push(parent);\n\t}\n\tparent = parent.parentNode;\n}\n\nthis.relatedNodes(labels);\nreturn labels.length > 1;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/label/title-only.js":"var labelText = axe.commons.text.label(node);\nreturn !labelText && !!(node.getAttribute('title') || node.getAttribute('aria-describedby'));","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/language/has-lang.js":"return !!(node.getAttribute('lang') || node.getAttribute('xml:lang') || '').trim();","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/language/valid-lang.js":"\nfunction getBaseLang (lang) {\n\treturn lang.trim().split('-')[0].toLowerCase();\n}\nvar langs, invalid;\n\nlangs = (options || []).map(getBaseLang);\n\ninvalid = ['lang', 'xml:lang'].reduce(function (invalid, langAttr) {\n\tvar langVal = node.getAttribute(langAttr);\n\tif (typeof langVal !== 'string') {\n\t\treturn invalid;\n\t}\n\n\tvar baselangVal = getBaseLang(langVal);\n\n\t// Edge sets lang to an empty string when xml:lang is set\n\t// so we need to ignore empty strings here\n\tif (baselangVal !== '' && langs.indexOf(baselangVal) === -1) {\n\t\tinvalid.push(langAttr + '=\"' + node.getAttribute(langAttr) + '\"');\n\t}\n\treturn invalid;\n\n}, []);\n\nif (invalid.length) {\n\tthis.data(invalid);\n\treturn true;\n}\n\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/lists/dlitem.js":"return node.parentNode.tagName === 'DL';\n\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/lists/has-listitem.js":"var children = node.children;\nif (children.length === 0) { return true; }\n\nfor (var i = 0; i < children.length; i++) {\n\tif (children[i].nodeName.toUpperCase() === 'LI') { return false; }\n}\n\nreturn true;\n\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/lists/listitem.js":"\nif (['UL', 'OL'].indexOf(node.parentNode.nodeName.toUpperCase()) !== -1) {\n\treturn true;\n}\n\nreturn node.parentNode.getAttribute('role') === 'list';\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/lists/only-dlitems.js":"var child,\n\tnodeName,\n\tbad = [],\n\tchildren = node.childNodes,\n\tpermitted = ['STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE'],\n\thasNonEmptyTextNode = false;\n\nfor (var i = 0; i < children.length; i++) {\n\tchild = children[i];\n\tvar nodeName = child.nodeName.toUpperCase();\n\tif (child.nodeType === 1 && nodeName !== 'DT' && nodeName !== 'DD' && permitted.indexOf(nodeName) === -1) {\n\t\tbad.push(child);\n\t} else if (child.nodeType === 3 && child.nodeValue.trim() !== '') {\n\t\thasNonEmptyTextNode = true;\n\t}\n}\nif (bad.length) {\n\tthis.relatedNodes(bad);\n}\n\nvar retVal = !!bad.length || hasNonEmptyTextNode;\nreturn retVal;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/lists/only-listitems.js":"var child,\n\tnodeName,\n\tbad = [],\n\tchildren = node.childNodes,\n\tpermitted = ['STYLE', 'META', 'LINK', 'MAP', 'AREA', 'SCRIPT', 'DATALIST', 'TEMPLATE'],\n\thasNonEmptyTextNode = false;\n\nfor (var i = 0; i < children.length; i++) {\n\tchild = children[i];\n\tnodeName = child.nodeName.toUpperCase();\n\tif (child.nodeType === 1 && nodeName !== 'LI' && permitted.indexOf(nodeName) === -1) {\n\t\tbad.push(child);\n\t} else if (child.nodeType === 3 && child.nodeValue.trim() !== '') {\n\t\thasNonEmptyTextNode = true;\n\t}\n}\nif (bad.length) {\n\tthis.relatedNodes(bad);\n}\n\nreturn !!bad.length || hasNonEmptyTextNode;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/lists/structured-dlitems.js":"var children = node.children;\nif ( !children || !children.length) { return false; }\n\nvar hasDt = false, hasDd = false, nodeName;\nfor (var i = 0; i < children.length; i++) {\n\tnodeName = children[i].nodeName.toUpperCase();\n\tif (nodeName === 'DT') { hasDt = true; }\n\tif (hasDt && nodeName === 'DD') { return false; }\n\tif (nodeName === 'DD') { hasDd = true; }\n}\n\nreturn hasDt || hasDd;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/media/caption.js":"var tracks = node.querySelectorAll('track');\nif (tracks.length) {\n\tfor (var i=0; i<tracks.length; i++) {\n\t\tvar kind = tracks[i].getAttribute('kind');\n\t\tif (kind && kind === 'captions') {\n\t\t\t// only return for matching track, in case there are multiple\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n// for multiple track elements, return the first one that matches\nreturn undefined;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/media/description.js":"var tracks = node.querySelectorAll('track');\nif (tracks.length) {\n\tfor (var i=0; i<tracks.length; i++) {\n\t\tvar kind = tracks[i].getAttribute('kind');\n\t\tif (kind && kind === 'descriptions') {\n\t\t\t// only return for matching track, in case there are multiple\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\nreturn undefined;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/mobile/meta-viewport-scale.js":"options = options || {};\nvar params,\n\tcontent = node.getAttribute('content') || '',\n\tparsedParams = content.split(/[;,]/),\n\tresult = {},\n\tminimum = options.scaleMinimum || 2,\n\tlowerBound = options.lowerBound || false;\n\nfor (var i = 0, l = parsedParams.length; i < l; i++) {\n\tparams = parsedParams[i].split('=');\n\tvar key = params.shift().toLowerCase();\n\tif (key && params.length) {\n\t\tresult[key.trim()] = params.shift().trim().toLowerCase();\n\t}\n}\n\nif (lowerBound && result['maximum-scale'] && parseFloat(result['maximum-scale']) < lowerBound) {\n\treturn true;\n}\n\nif (!lowerBound && result['user-scalable'] === 'no') {\n\treturn false;\n}\n\nif (result['maximum-scale'] && parseFloat(result['maximum-scale']) < minimum) {\n\treturn false;\n}\n\n\nreturn true;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/header-present.js":"return !!node.querySelector('h1, h2, h3, h4, h5, h6, [role=\"heading\"]');\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/heading-order-after.js":"if (results.length < 2) { return results; }\n\nvar prevLevel = results[0].data;\n\nfor (var i = 1; i < results.length; i++) {\n\tif (results[i].result && results[i].data > (prevLevel + 1)) { results[i].result = false; }\n\tprevLevel = results[i].data;\n}\n\nreturn results;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/heading-order.js":"var ariaHeadingLevel = node.getAttribute('aria-level');\n\nif (ariaHeadingLevel !== null) {\n\tthis.data(parseInt(ariaHeadingLevel, 10));\n\treturn true;\n}\n\nvar headingLevel = node.tagName.match(/H(\\d)/);\n\nif (headingLevel) {\n\tthis.data(parseInt(headingLevel[1], 10));\n\treturn true;\n}\n\nreturn true;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/href-no-hash.js":"var href = node.getAttribute('href');\n\nif(href === '#'){\n\treturn false;\n}\n\nreturn true;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/internal-link-present.js":"return !!node.querySelector('a[href^=\"#\"]');\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/landmark.js":"return node.getElementsByTagName('main').length > 0 || !!node.querySelector('[role=\"main\"]') ;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/meta-refresh.js":"var content = node.getAttribute('content') || '',\n\tparsedParams = content.split(/[;,]/);\n\nreturn (content === '' || parsedParams[0] === '0');\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/p-as-heading.js":"let siblings = Array.from(node.parentNode.children);\nlet currentIndex = siblings.indexOf(node);\n\noptions = options || {};\nlet margins = options.margins || [];\n\nlet nextSibling = siblings.slice(currentIndex+1)\n.find(elm => elm.nodeName.toUpperCase() === 'P');\n\nlet prevSibling = siblings.slice(0, currentIndex).reverse()\n.find(elm => elm.nodeName.toUpperCase() === 'P');\n\nfunction getTextContainer(elm) {\n\tlet nextNode = elm;\n\tlet outerText = elm.textContent.trim();\n\tlet innerText = outerText;\n\n\twhile(innerText === outerText && nextNode !== undefined) {\n\t\tlet i = -1;\n\t\telm = nextNode;\n\t\tif (elm.children.length === 0) {\n\t\t\treturn elm;\n\t\t}\n\n\t\tdo { // find the first non-empty child\n\t\t\ti++;\n\t\t\tinnerText = elm.children[i].textContent.trim();\n\t\t} while(innerText === '' && i + 1 < elm.children.length);\n\t\tnextNode = elm.children[i];\n\t}\n\n\treturn elm;\n}\n\nfunction normalizeFontWeight(weight) {\n\tswitch (weight) {\n\t\tcase 'lighter': return 100;\n\t\tcase 'normal': return 400;\n\t\tcase 'bold': return 700;\n\t\tcase 'bolder': return 900;\n\t}\n\tweight = parseInt(weight);\n\treturn !isNaN(weight) ? weight : 400;\n}\n\nfunction getStyleValues(node) {\n\tlet style = window.getComputedStyle(getTextContainer(node));\n\treturn {\n\t\tfontWeight: normalizeFontWeight(style.getPropertyValue('font-weight')),\n\t\tfontSize: parseInt(style.getPropertyValue('font-size')),\n\t\tisItalic: style.getPropertyValue('font-style') === 'italic'\n\t};\n}\n\nfunction isHeaderStyle(styleA, styleB, margins) {\n\treturn margins.reduce((out, margin) => {\n\t\treturn (out || (\n\t\t\t(!margin.size || styleA.fontSize / margin.size > styleB.fontSize) &&\n\t\t\t(!margin.weight || styleA.fontWeight - margin.weight > styleB.fontWeight) &&\n\t\t\t(!margin.italic || styleA.isItalic && !styleB.isItalic)\n\t\t));\n\t}, false);\n}\n\nconst currStyle = getStyleValues(node);\nconst nextStyle = nextSibling ? getStyleValues(nextSibling) : null;\nconst prevStyle = prevSibling ? getStyleValues(prevSibling) : null;\n\nif (!nextStyle || !isHeaderStyle(currStyle, nextStyle, margins)) {\n\treturn true;\n}\n\nlet blockquote = axe.commons.dom.findUp(node, 'blockquote');\nif (blockquote && blockquote.nodeName.toUpperCase() === 'BLOCKQUOTE') {\n\treturn undefined;\n}\n\nif (prevStyle && !isHeaderStyle(currStyle, prevStyle, margins)) {\n\treturn undefined;\n}\n\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/region-after.js":"return [results[0]];\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/region.js":"//jshint latedef: false\n\nvar landmarkRoles = axe.commons.aria.getRolesByType('landmark'),\n\tfirstLink = node.querySelector('a[href]');\n\nfunction isSkipLink(n) {\n\treturn firstLink &&\n\t\taxe.commons.dom.isFocusable(axe.commons.dom.getElementByReference(firstLink, 'href')) &&\n\t\tfirstLink === n;\n}\n\nfunction isLandmark(n) {\n\tvar role = n.getAttribute('role');\n\treturn role && (landmarkRoles.indexOf(role) !== -1);\n}\n\nfunction checkRegion(n) {\n\tif (isLandmark(n)) { return null; }\n\tif (isSkipLink(n)) { return getViolatingChildren(n); }\n\tif (axe.commons.dom.isVisible(n, true) &&\n\t\t(axe.commons.text.visible(n, true, true) || axe.commons.dom.isVisualContent(n))) { return n; }\n\treturn getViolatingChildren(n);\n}\nfunction getViolatingChildren(n) {\n\tvar children =  axe.commons.utils.toArray(n.children);\n\tif (children.length === 0) { return []; }\n\treturn children.map(checkRegion)\n\t\t.filter(function (c) { return c !== null; })\n\t\t.reduce(function (a, b) { return a.concat(b); }, []);\n}\n\nvar v = getViolatingChildren(node);\nthis.relatedNodes(v);\nreturn !v.length;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/skip-link-after.js":"return [results[0]];\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/skip-link.js":"return axe.commons.dom.isFocusable(axe.commons.dom.getElementByReference(node, 'href'));\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/unique-frame-title-after.js":"var titles = {};\nresults.forEach(function (r) {\n\ttitles[r.data] = titles[r.data] !== undefined ? ++titles[r.data] : 0;\n});\nresults.forEach(function (r) {\n\tr.result = !!titles[r.data];\n});\n\nreturn results;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/navigation/unique-frame-title.js":"var title = axe.commons.text.sanitize(node.title).trim().toLowerCase();\nthis.data(title);\nreturn true;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/aria-label.js":"var label = node.getAttribute('aria-label');\nreturn !!(label ? axe.commons.text.sanitize(label).trim() : '');","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/aria-labelledby.js":"var getIdRefs = axe.commons.dom.idrefs;\n\nreturn getIdRefs(node, 'aria-labelledby').some(function (elm) {\n\treturn (elm && axe.commons.text.accessibleText(elm, true));\n});\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/button-has-visible-text.js":"let nodeName = node.nodeName.toUpperCase();\nlet role = node.getAttribute('role');\nlet label;\n\nif (nodeName === 'BUTTON' || (role === 'button' && nodeName !== 'INPUT')) {\n\tlabel = axe.commons.text.accessibleText(node);\n\tthis.data(label);\n\n\treturn !!label;\n} else {\n\n\treturn false;\n}","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/duplicate-id-after.js":"var uniqueIds = [];\nreturn results.filter(function (r) {\n\tif (uniqueIds.indexOf(r.data) === -1) {\n\t\tuniqueIds.push(r.data);\n\t\treturn true;\n\t}\n\treturn false;\n});\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/duplicate-id.js":"// Since empty ID's are not meaningful and are ignored by Edge, we'll\n// let those pass.\nif (!node.id.trim()) {\n\treturn true;\n}\n\nvar matchingNodes = document.querySelectorAll('[id=\"' + axe.commons.utils.escapeSelector(node.id) + '\"]');\nvar related = [];\nfor (var i = 0; i < matchingNodes.length; i++) {\n\tif (matchingNodes[i] !== node) {\n\t\trelated.push(matchingNodes[i]);\n\t}\n}\nif (related.length) {\n\tthis.relatedNodes(related);\n}\nthis.data(node.getAttribute('id'));\n\nreturn (matchingNodes.length <= 1);\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/exists.js":"return true;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/has-alt.js":"var nn = node.nodeName.toLowerCase();\nreturn node.hasAttribute('alt') &&\n\t(nn === 'img' ||\n\tnn === 'input' ||\n\tnn === 'area');","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/has-visible-text.js":"return axe.commons.text.accessibleText(node).length > 0;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/is-on-screen.js":"// From a visual perspective\nreturn axe.commons.dom.isVisible(node, false) && !axe.commons.dom.isOffscreen(node);","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/non-empty-alt.js":"var label = node.getAttribute('alt');\nreturn !!(label ? axe.commons.text.sanitize(label).trim() : '');","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/non-empty-if-present.js":"// Check for 'default' names, which are given to reset and submit buttons\nlet nodeName = node.nodeName.toUpperCase();\nlet type = (node.getAttribute('type') || '').toLowerCase();\nlet label = node.getAttribute('value');\n\nthis.data(label);\n\nif (nodeName === 'INPUT' && ['submit', 'reset'].indexOf(type) !== -1) {\n\treturn label === null;\n}\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/non-empty-title.js":"var title = node.getAttribute('title');\nreturn !!(title ? axe.commons.text.sanitize(title).trim() : '');\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/non-empty-value.js":"var label = node.getAttribute('value');\nreturn !!(label ? axe.commons.text.sanitize(label).trim() : '');","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/role-none.js":"return node.getAttribute('role') === 'none';","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/shared/role-presentation.js":"return node.getAttribute('role') === 'presentation';","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/caption-faked.js":"var table = axe.commons.table.toGrid(node);\nvar firstRow = table[0];\n\nif (table.length <= 1 || firstRow.length <= 1 || node.rows.length <= 1) {\n\treturn true;\n}\n\nreturn firstRow.reduce(function (out, curr, i) {\n\treturn (out || (curr !== firstRow[i+1] && firstRow[i+1] !== undefined));\n}, false);","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/has-caption.js":"return !!node.caption;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/has-summary.js":"return !!node.summary;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/has-th.js":"\nvar row, cell,\n\tbadCells = [];\n\nfor (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n\trow = node.rows[rowIndex];\n\tfor (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t\tcell = row.cells[cellIndex];\n\t\tif (cell.nodeName.toUpperCase() === 'TH' ||\n\t\t\t\t\t['rowheader', 'columnheader'].indexOf(cell.getAttribute('role')) !== -1)  {\n\t\t\tbadCells.push(cell);\n\t\t}\n\t}\n}\n\nif (badCells.length) {\n\tthis.relatedNodes(badCells);\n\treturn true;\n}\n\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/headers-visible-text.js":"\nvar row, cell,\n\tbadHeaders = [];\nfor (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n\trow = node.rows[rowIndex];\n\tfor (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t\tcell = row.cells[cellIndex];\n\t\tif (axe.commons.table.isHeader(cell) && !axe.commons.text.accessibleText(cell)) {\n\t\t\tbadHeaders.push(cell);\n\t\t}\n\t}\n}\n\nif (badHeaders.length) {\n\tthis.relatedNodes(badHeaders);\n\treturn true;\n}\n\nreturn false;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/html5-scope.js":"\nif (!axe.commons.dom.isHTML5(document)) {\n\treturn true;\n}\n\nreturn node.nodeName.toUpperCase() === 'TH';","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/same-caption-summary.js":"return !!(node.summary && node.caption) && node.summary === axe.commons.text.accessibleText(node.caption);\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/scope-value.js":"options = (options || {});\nvar value = node.getAttribute('scope').toLowerCase();\nvar validVals = (['row', 'col', 'rowgroup', 'colgroup'] || options.values);\n\nreturn validVals.indexOf(value) !== -1;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/td-has-header.js":"var tableUtils = axe.commons.table;\nvar badCells = [];\nvar cells = tableUtils.getAllCells(node);\n\ncells.forEach((cell) => {\n\t// For each non-empty data cell that doesn't have an aria label\n\tif (axe.commons.dom.hasContent(cell) &&\n\t\ttableUtils.isDataCell(cell) &&\n\t\t!axe.commons.aria.label(cell)\n\t) {\n\t\t// Check if it has any headers\n\t\tvar hasHeaders = tableUtils.getHeaders(cell);\n\t\thasHeaders = hasHeaders.reduce(function (hasHeaders, header) {\n\t\t\treturn (hasHeaders || header !== null && !!axe.commons.dom.hasContent(header));\n\t\t}, false);\n\n\t\t// If no headers, put it on the naughty list\n\t\tif (!hasHeaders) {\n\t\t\tbadCells.push(cell);\n\t\t}\n\t}\n});\n\nif (badCells.length) {\n\tthis.relatedNodes(badCells);\n\treturn false;\n}\n\nreturn true;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/td-headers-attr.js":"var cells = [];\n\nfor (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n\tvar row = node.rows[rowIndex];\n\tfor (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t\tcells.push(row.cells[cellIndex]);\n\t}\n}\n\nvar ids = cells.reduce(function (ids, cell) {\n\tif (cell.id) {\n\t\tids.push(cell.id);\n\t}\n\treturn ids;\n}, []);\n\nvar badCells = cells.reduce(function (badCells, cell) {\n\tvar isSelf, notOfTable;\n\n\t// Get a list all the values of the headers attribute\n\tvar headers = (cell.getAttribute('headers') || '')\n\t.split(/\\s/)\n\t.reduce(function (headers, header) {\n\t\theader = header.trim();\n\t\tif (header) {\n\t\t\theaders.push(header);\n\t\t}\n\t\treturn headers;\n\t}, []);\n\n\tif (headers.length !== 0) {\n\t\t// Check if the cell's id is in this list\n\t\tif (cell.id) {\n\t\t\tisSelf = (headers.indexOf(cell.id.trim()) !== -1);\n\t\t}\n\n\t\t// Check if the headers are of cells inside the table\n\t\tnotOfTable = headers.reduce(function (fail, header) {\n\t\t\treturn fail || (ids.indexOf(header) === -1);\n\t\t}, false);\n\n\t\tif (isSelf || notOfTable) {\n\t\t\tbadCells.push(cell);\n\t\t}\n\t}\n\treturn badCells;\n}, []);\n\n\nif (badCells.length > 0) {\n\tthis.relatedNodes(badCells);\n\treturn false;\n\n} else {\n\treturn true;\n}\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/th-has-data-cells.js":"var tableUtils = axe.commons.table;\nvar cells = tableUtils.getAllCells(node);\nvar checkResult = this;\n\n// Get a list of all headers reffed to in this rule\nvar reffedHeaders = [];\ncells.forEach(function (cell) {\n\tvar headers = cell.getAttribute('headers');\n\tif (headers) {\n\t\treffedHeaders = reffedHeaders.concat(headers.split(/\\s+/));\n\t}\n\n\tvar ariaLabel = cell.getAttribute('aria-labelledby');\n\tif (ariaLabel) {\n\t\treffedHeaders = reffedHeaders.concat(ariaLabel.split(/\\s+/));\n\t}\n});\n\n// Get all the headers\nvar headers = cells.filter(function (cell) {\n\tif (axe.commons.text.sanitize(cell.textContent) === '') {\n\t\treturn false;\n\t}\n\treturn (cell.nodeName.toUpperCase() === 'TH' ||\n\t\t['rowheader', 'columnheader'].indexOf(cell.getAttribute('role')) !== -1);\n});\n\n\nvar tableGrid = tableUtils.toGrid(node);\n\n// Look for all the bad headers\nvar out = headers.reduce(function (res, header) {\n\tif (header.id && reffedHeaders.indexOf(header.id) !== -1) {\n\t\treturn (!res ? res : true);\n\t}\n\n\tvar hasCell = false;\n\tvar pos = tableUtils.getCellPosition(header, tableGrid);\n\n\t// Look for any data cells or row headers that this might refer to\n\tif (tableUtils.isColumnHeader(header)) {\n\t\thasCell = tableUtils.traverse('down', pos, tableGrid)\n\t\t.reduce((out, cell) => {\n\t\t\treturn (out || (\n\t\t\t\taxe.commons.dom.hasContent(cell) &&\n\t\t\t\t!tableUtils.isColumnHeader(cell))\n\t\t\t);\n\t\t}, false);\n\t}\n\n\t// Look for any data cells or column headers that this might refer to\n\tif (!hasCell && tableUtils.isRowHeader(header)) {\n\t\thasCell = tableUtils.traverse('right', pos, tableGrid)\n\t\t.reduce((out, cell) => {\n\t\t\treturn out || (\n\t\t\t\taxe.commons.dom.hasContent(cell) &&\n\t\t\t\t!tableUtils.isRowHeader(cell)\n\t\t\t);\n\t\t}, false);\n\t}\n\n\t// report the node as having failed\n\tif (!hasCell) {\n\t\tcheckResult.relatedNodes(header);\n\t}\n\n\treturn res && hasCell;\n}, true);\n\nreturn out ? true : undefined;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/checks/tables/th-single-row-column.js":"\nvar row, cell, position,\n\trowHeaders = [],\n\tcolumnHeaders = [];\n\nfor (var rowIndex = 0, rowLength = node.rows.length; rowIndex < rowLength; rowIndex++) {\n\trow = node.rows[rowIndex];\n\tfor (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t\tcell = row.cells[cellIndex];\n\t\tif (cell.nodeType === 1) {\n\t\t\tif (axe.commons.table.isColumnHeader(cell) && columnHeaders.indexOf(rowIndex) === -1) {\n\t\t\t\tcolumnHeaders.push(rowIndex);\n\t\t\t} else if (axe.commons.table.isRowHeader(cell)) {\n\t\t\t\tposition = axe.commons.table.getCellPosition(cell);\n\t\t\t\tif (rowHeaders.indexOf(position.x) === -1) {\n\t\t\t\t\trowHeaders.push(position.x);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nif (columnHeaders.length > 1 || rowHeaders.length > 1) {\n\treturn true;\n}\n\nreturn false;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/aria/attributes.js":"/*global aria, axe, lookupTables */\n\n/**\n * Get required attributes for a given role\n * @param  {String} role The role to check\n * @return {Array}\n */\naria.requiredAttr = function (role) {\n\t'use strict';\n\tvar roles = lookupTables.role[role],\n\t\tattr = roles && roles.attributes && roles.attributes.required;\n\treturn attr || [];\n};\n\n/**\n * Get allowed attributes for a given role\n * @param  {String} role The role to check\n * @return {Array}\n */\naria.allowedAttr = function (role) {\n\t'use strict';\n\tvar roles = lookupTables.role[role],\n\t\tattr = (roles && roles.attributes && roles.attributes.allowed) || [],\n\t\trequiredAttr = (roles && roles.attributes && roles.attributes.required) || [];\n\n\treturn attr.concat(lookupTables.globalAttributes).concat(requiredAttr);\n};\n\n/**\n * Check if an aria- attribute name is valid\n * @param  {String} att The attribute name\n * @return {Boolean}\n */\naria.validateAttr = function (att) {\n\t'use strict';\n\treturn !!lookupTables.attributes[att];\n};\n\n/**\n * Validate the value of an ARIA attribute\n * @param  {HTMLElement} node The element to check\n * @param  {String} attr The name of the attribute\n * @return {Boolean}\n */\naria.validateAttrValue = function (node, attr) {\n\t//jshint maxcomplexity: 12\n\t'use strict';\n\tvar matches, list,\n\t\tdoc = document,\n\t\tvalue = node.getAttribute(attr),\n\t\tattrInfo = lookupTables.attributes[attr];\n\n\tif (!attrInfo) {\n\t\treturn true;\n\t}\n\n\tswitch (attrInfo.type) {\n\tcase 'boolean':\n\tcase 'nmtoken':\n\t\treturn (typeof value === 'string' && attrInfo.values.indexOf(value.toLowerCase()) !== -1);\n\n\tcase 'nmtokens': \n\t\tlist = axe.utils.tokenList(value);\n\t\t// Check if any value isn't in the list of values\n\t\treturn list.reduce(function (result, token) {\n\t\t\treturn (result && attrInfo.values.indexOf(token) !== -1);\n\t\t// Initial state, fail if the list is empty\n\t\t}, list.length !== 0);\n\n\tcase 'idref':\n\t\treturn !!(value && doc.getElementById(value));\n\n\tcase 'idrefs':\n\t\tlist = axe.utils.tokenList(value);\n\t\t// Check if any value isn't in the list of values\n\t\treturn list.reduce(function (result, token) {\n\t\t\treturn !!(result && doc.getElementById(token));\n\t\t// Initial state, fail if the list is empty\n\t\t}, list.length !== 0);\n\n\tcase 'string':\n\t\t// anything goes\n\t\treturn true;\n\n\tcase 'decimal':\n\t\tmatches = value.match(/^[-+]?([0-9]*)\\.?([0-9]*)$/);\n\t\treturn !!(matches && (matches[1] || matches[2]));\n\n\tcase 'int':\n\t\treturn (/^[-+]?[0-9]+$/).test(value);\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/aria/label.js":"/*global aria, dom, text */\n/**\n * Gets the accessible ARIA label text of a given element\n * @see http://www.w3.org/WAI/PF/aria/roles#namecalculation\n * @param  {HTMLElement} node The element to test\n * @return {Mixed}      String of visible text, or `null` if no label is found\n */\naria.label = function (node) {\n\tvar ref, candidate;\n\n\tif (node.getAttribute('aria-labelledby')) {\n\t\t// aria-labelledby\n\t\tref = dom.idrefs(node, 'aria-labelledby');\n\t\tcandidate = ref.map(function (thing) {\n\t\t\treturn thing ? text.visible(thing, true) : '';\n\t\t}).join(' ').trim();\n\n\t\tif (candidate) {\n\t\t\treturn candidate;\n\t\t}\n\t}\n\n\t// aria-label\n\tcandidate = node.getAttribute('aria-label');\n\tif (candidate) {\n\t\tcandidate = text.sanitize(candidate).trim();\n\t\tif (candidate) {\n\t\t\treturn candidate;\n\t\t}\n\t}\n\n\treturn null;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/aria/roles.js":"/*global aria, lookupTables, axe */\n\n/**\n * Check if a given role is valid\n * @param  {String}  role The role to check\n * @return {Boolean}\n */\naria.isValidRole = function (role) {\n\t'use strict';\n\tif (lookupTables.role[role]) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n\n/**\n * Get the roles that get name from contents\n * @return {Array}           Array of roles that match the type\n */\naria.getRolesWithNameFromContents = function () {\n\treturn Object.keys(lookupTables.role).filter(function (r) {\n\t\treturn lookupTables.role[r].nameFrom &&\n\t\t\tlookupTables.role[r].nameFrom.indexOf('contents') !== -1;\n\t});\n};\n\n/**\n * Get the roles that have a certain \"type\"\n * @param  {String} roleType The roletype to check\n * @return {Array}           Array of roles that match the type\n */\naria.getRolesByType = function (roleType) {\n\treturn Object.keys(lookupTables.role).filter(function (r) {\n\t\treturn lookupTables.role[r].type === roleType;\n\t});\n};\n\n/**\n * Get the \"type\" of role; either widget, composite, abstract, landmark or `null`\n * @param  {String} role The role to check\n * @return {Mixed}       String if a matching role and its type are found, otherwise `null`\n */\naria.getRoleType = function (role) {\n\tvar r = lookupTables.role[role];\n\n\treturn (r && r.type) || null;\n};\n\n/**\n * Get the required owned (children) roles for a given role\n * @param  {String} role The role to check\n * @return {Mixed}       Either an Array of required owned elements or `null` if there are none\n */\naria.requiredOwned = function (role) {\n\t'use strict';\n\tvar owned = null,\n\t\troles = lookupTables.role[role];\n\n\tif (roles) {\n\t\towned = axe.utils.clone(roles.owned);\n\t}\n\treturn owned;\n};\n\n/**\n * Get the required context (parent) roles for a given role\n * @param  {String} role The role to check\n * @return {Mixed}       Either an Array of required context elements or `null` if there are none\n */\naria.requiredContext = function (role) {\n\t'use strict';\n\tvar context = null,\n\t\troles = lookupTables.role[role];\n\n\tif (roles) {\n\t\tcontext = axe.utils.clone(roles.context);\n\t}\n\treturn context;\n};\n\n/**\n * Get a list of CSS selectors of nodes that have an implicit role\n * @param  {String} role The role to check\n * @return {Mixed}       Either an Array of CSS selectors or `null` if there are none\n */\naria.implicitNodes = function (role) {\n\t'use strict';\n\n\tvar implicit = null,\n\t\troles = lookupTables.role[role];\n\n\tif (roles && roles.implicit) {\n\t\timplicit = axe.utils.clone(roles.implicit);\n\t}\n\treturn implicit;\n};\n\n/**\n * Get the implicit role for a given node\n * @param  {HTMLElement} node The node to test\n * @return {Mixed}      Either the role or `null` if there is none\n */\n\naria.implicitRole = function (node) {\n\t'use strict';\n\n\t/*\n\t * Filter function to reduce a list of roles to a valid list of roles for a nodetype\n\t */\n\tvar isValidImplicitRole = function (set, role) {\n\t\tvar validForNodeType = function (implicitNodeTypeSelector) {\n\t\t\treturn axe.utils.matchesSelector(node, implicitNodeTypeSelector);\n\t\t};\n\n\t\tif (role.implicit && role.implicit.some(validForNodeType)) {\n\t\t\tset.push(role.name);\n\t\t}\n\n\t\treturn set;\n\t};\n\n\t/*\n\t * Score a set of roles and aria-attributes by its optimal score\n\t * E.g. [{score: 2, name: button}, {score: 1, name: main}]\n\t */\n\tvar sortRolesByOptimalAriaContext = function (roles, ariaAttributes) {\n\t\tvar getScore = function (role) {\n\t\t\tvar allowedAriaAttributes = aria.allowedAttr(role);\n\t\t\treturn allowedAriaAttributes.reduce( function (score, attribute) {\n\t\t\t\treturn score + (ariaAttributes.indexOf(attribute) > -1 ? 1 : 0);\n\t\t\t}, 0);\n\t\t};\n\n\t\tvar scored = roles.map( function (role) {\n\t\t\treturn { score: getScore(role), name: role };\n\t\t});\n\n\t\tvar sorted = scored.sort( function (scoredRoleA, scoredRoleB) {\n\t\t\treturn scoredRoleB.score - scoredRoleA.score;\n\t\t});\n\n\t\treturn sorted.map( function (sortedRole) {\n\t\t\treturn sortedRole.name;\n\t\t});\n\t};\n\n\t/*\n\t * Create a list of { name / implicit } role mappings to filter on\n\t */\n\tvar roles = Object.keys(lookupTables.role).map( function (role) {\n\t\tvar lookup = lookupTables.role[role];\n\t\treturn { name: role, implicit: lookup && lookup.implicit };\n\t});\n\n\t/* Build a list of valid implicit roles for this node */\n\tvar availableImplicitRoles = roles.reduce(isValidImplicitRole, []);\n\n\tif (!availableImplicitRoles.length) { return null; }\n\n\tvar nodeAttributes = node.attributes;\n\tvar ariaAttributes = [];\n\n\t/* Get all aria-attributes defined for this node */\n\t/* Should be a helper function somewhere */\n\tfor (var i = 0, j = nodeAttributes.length; i < j; i++) {\n\t\tvar attr = nodeAttributes[i];\n\t\tif (attr.name.match(/^aria-/)) { ariaAttributes.push( attr.name ); }\n\t}\n\n\t/* Sort roles by highest score, return the first */\n\treturn sortRolesByOptimalAriaContext(availableImplicitRoles, ariaAttributes).shift();\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/color/contrast.js":"/*global color */\n\n/**\n * @constructor\n * @param {number} red\n * @param {number} green\n * @param {number} blue\n * @param {number} alpha\n */\ncolor.Color = function (red, green, blue, alpha) {\n\t/** @type {number} */\n\tthis.red = red;\n\n\t/** @type {number} */\n\tthis.green = green;\n\n\t/** @type {number} */\n\tthis.blue = blue;\n\n\t/** @type {number} */\n\tthis.alpha = alpha;\n\n\t/**\n\t * Provide the hex string value for the color\n\t * @return {string}\n\t */\n\tthis.toHexString = function () {\n\t\tvar redString = Math.round(this.red).toString(16);\n\t\tvar greenString = Math.round(this.green).toString(16);\n\t\tvar blueString = Math.round(this.blue).toString(16);\n\t\treturn '#' + (this.red > 15.5 ? redString : '0' + redString) +\n\t\t\t(this.green > 15.5 ? greenString : '0' + greenString) +\n\t\t\t(this.blue > 15.5 ? blueString : '0' + blueString);\n\t};\n\n\tvar rgbRegex = /^rgb\\((\\d+), (\\d+), (\\d+)\\)$/;\n\tvar rgbaRegex = /^rgba\\((\\d+), (\\d+), (\\d+), (\\d*(\\.\\d+)?)\\)/;\n\n\t/**\n\t * Set the color value based on a CSS RGB/RGBA string\n\t * @param  {string}  rgb  The string value\n\t */\n\tthis.parseRgbString = function (colorString) {\n\t\t// IE can pass transparent as value instead of rgba\n\t\tif (colorString === 'transparent') {\n\t\t\tthis.red = 0;\n\t\t\tthis.green = 0;\n\t\t\tthis.blue = 0;\n\t\t\tthis.alpha = 0;\n\t\t\treturn;\n\t\t}\n\t\tvar match = colorString.match(rgbRegex);\n\n\t\tif (match) {\n\t\t\tthis.red = parseInt(match[1], 10);\n\t\t\tthis.green = parseInt(match[2], 10);\n\t\t\tthis.blue = parseInt(match[3], 10);\n\t\t\tthis.alpha = 1;\n\t\t\treturn;\n\t\t}\n\n\t\tmatch = colorString.match(rgbaRegex);\n\t\tif (match) {\n\t\t\tthis.red = parseInt(match[1], 10);\n\t\t\tthis.green = parseInt(match[2], 10);\n\t\t\tthis.blue = parseInt(match[3], 10);\n\t\t\tthis.alpha = parseFloat(match[4]);\n\t\t\treturn;\n\t\t}\n\t};\n\n\t/**\n\t * Get the relative luminance value\n\t * using algorithm from http://www.w3.org/WAI/GL/wiki/Relative_luminance\n\t * @return {number} The luminance value, ranges from 0 to 1\n\t */\n\tthis.getRelativeLuminance = function () {\n\t\tvar rSRGB = this.red / 255;\n\t\tvar gSRGB = this.green / 255;\n\t\tvar bSRGB = this.blue / 255;\n\n\t\tvar r = rSRGB <= 0.03928 ? rSRGB / 12.92 : Math.pow(((rSRGB + 0.055) / 1.055), 2.4);\n\t\tvar g = gSRGB <= 0.03928 ? gSRGB / 12.92 : Math.pow(((gSRGB + 0.055) / 1.055), 2.4);\n\t\tvar b = bSRGB <= 0.03928 ? bSRGB / 12.92 : Math.pow(((bSRGB + 0.055) / 1.055), 2.4);\n\n\t\treturn 0.2126 * r + 0.7152 * g + 0.0722 * b;\n\t};\n};\n\n/**\n * Combine the two given color according to alpha blending.\n * @param {Color} fgColor\n * @param {Color} bgColor\n * @return {Color}\n */\ncolor.flattenColors = function (fgColor, bgColor) {\n\tvar alpha = fgColor.alpha;\n\tvar r = ((1 - alpha) * bgColor.red) + (alpha * fgColor.red);\n\tvar g  = ((1 - alpha) * bgColor.green) + (alpha * fgColor.green);\n\tvar b = ((1 - alpha) * bgColor.blue) + (alpha * fgColor.blue);\n\tvar a = fgColor.alpha + (bgColor.alpha * (1 - fgColor.alpha));\n\n\treturn new color.Color(r, g, b, a);\n};\n\n/**\n * Get the contrast of two colors\n * @param  {Color}  bgcolor  Background color\n * @param  {Color}  fgcolor  Foreground color\n * @return {number} The contrast ratio\n */\ncolor.getContrast = function (bgColor, fgColor) {\n\tif (!fgColor || !bgColor) { return null; }\n\n\tif (fgColor.alpha < 1) {\n\t\tfgColor = color.flattenColors(fgColor, bgColor);\n\t}\n\n\tvar bL = bgColor.getRelativeLuminance();\n\tvar fL = fgColor.getRelativeLuminance();\n\n\treturn (Math.max(fL, bL) + 0.05) / (Math.min(fL, bL) + 0.05);\n};\n\n/**\n * Check whether certain text properties meet WCAG contrast rules\n * @param  {Color}  bgcolor  Background color\n * @param  {Color}  fgcolor  Foreground color\n * @param  {number}  fontSize  Font size of text, in pixels\n * @param  {boolean}  isBold  Whether the text is bold\n * @return {{isValid: boolean, contrastRatio: number}}\n */\ncolor.hasValidContrastRatio = function (bg, fg, fontSize, isBold) {\n\tvar contrast = color.getContrast(bg, fg);\n\tvar isSmallFont = (isBold && (Math.ceil(fontSize * 72) / 96) < 14) || (!isBold && (Math.ceil(fontSize * 72) / 96) < 18);\n\n\treturn {\n\t\tisValid: (isSmallFont && contrast >= 4.5) || (!isSmallFont && contrast >= 3),\n\t\tcontrastRatio: contrast\n\t};\n\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/color/element-is-distinct.js":"/*global color */\n\nfunction _getFonts(style) {\n\treturn style.getPropertyValue('font-family')\n\t.split(/[,;]/g)\n\t.map(function (font) {\n\t\treturn font.trim().toLowerCase();\n\t});\n}\n\nfunction elementIsDistinct(node, ancestorNode) {\n\tvar nodeStyle = window.getComputedStyle(node);\n\n\t// Check if the link has a background\n\tif (nodeStyle.getPropertyValue('background-image') !== 'none') {\n\t\treturn true;\n\t}\n\n\t// Check if the link has a border or outline\n\tvar hasBorder = ['border-bottom', 'border-top', 'outline']\n\t.reduce(function (result, edge) {\n\n\t\tvar borderClr = new color.Color();\n\t\tborderClr.parseRgbString(nodeStyle.getPropertyValue(edge + '-color'));\n\n\t\t// Check if a border/outline was specified\n\t\treturn result || (\n\t\t\t// or if the current border edge / outline\n\t\t\tnodeStyle.getPropertyValue(edge + '-style') !== 'none' &&\n\t\t\tparseFloat(nodeStyle.getPropertyValue(edge + '-width')) > 0 &&\n\t\t\tborderClr.alpha !== 0\n\t\t);\n\t}, false);\n\n\tif (hasBorder) {\n\t\treturn true;\n\t}\n\n\tvar parentStyle = window.getComputedStyle(ancestorNode);\n\t// Compare fonts\n\tif (_getFonts(nodeStyle)[0] !== _getFonts(parentStyle)[0]) {\n\t\treturn true;\n\t}\n\n\tvar hasStyle = ['text-decoration-line', 'text-decoration-style', 'font-weight', 'font-style', 'font-size']\n\t.reduce(function (result, cssProp) {\n\t\treturn result || (nodeStyle.getPropertyValue(cssProp) !== parentStyle.getPropertyValue(cssProp));\n\t}, false);\n\n\tvar tDec = nodeStyle.getPropertyValue('text-decoration');\n\tif (tDec.split(' ').length < 3) {\n\t\t// old style CSS text decoration\n\t\thasStyle = hasStyle || (tDec !== parentStyle.getPropertyValue('text-decoration'));\n\t}\n\n\treturn hasStyle;\n}\n\n\ncolor.elementIsDistinct = elementIsDistinct;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/color/get-background-color.js":"/* global axe, color, dom */\nconst graphicNodes = [\n\t'IMG', 'CANVAS', 'OBJECT', 'IFRAME', 'VIDEO', 'SVG'\n];\n\nfunction elmHasImage(elm, style) {\n\tvar nodeName = elm.nodeName.toUpperCase();\n\tif (graphicNodes.includes(nodeName)) {\n\t\taxe.commons.color.incompleteData.set('bgColor', {\n\t\t\tnode: elm,\n\t\t\treason: 'imgNode'\n\t\t});\n\t\treturn true;\n\t}\n\n\tstyle = style || window.getComputedStyle(elm);\n\tvar bgImageStyle = style.getPropertyValue('background-image');\n\tvar hasBgImage = bgImageStyle !== 'none';\n\tif (hasBgImage) {\n\t\tvar hasGradient = /gradient/.test(bgImageStyle);\n\t\taxe.commons.color.incompleteData.set('bgColor', {\n\t\t\tnode: elm,\n\t\t\treason: (hasGradient ? 'bgGradient' : 'bgImage')\n\t\t});\n\t}\n\treturn hasBgImage;\n}\n\n/**\n * Returns the non-alpha-blended background color of an element\n * @param {Element} elm\n * @return {Color}\n */\nfunction getBgColor(elm, elmStyle) {\n\telmStyle = elmStyle || window.getComputedStyle(elm);\n\n\tlet bgColor = new color.Color();\n\tbgColor.parseRgbString( elmStyle.getPropertyValue('background-color'));\n\n\tif (bgColor.alpha !== 0) {\n\t\tlet opacity = elmStyle.getPropertyValue('opacity');\n\t\tbgColor.alpha = bgColor.alpha * opacity;\n\t}\n\treturn bgColor;\n}\n\nfunction calculateObscuringAlpha(elmIndex, elmStack) {\n\tvar totalAlpha = 0;\n\n\tif (elmIndex > 0) {\n\t\t// there are elements above our element, check if they are contribute to the background\n\t\tfor (var i = elmIndex - 1; i >= 0; i--) {\n\t\t\tlet bgElm = elmStack[i];\n\t\t\tlet bgElmStyle = window.getComputedStyle(bgElm);\n\t\t\tlet bgColor = getBgColor(bgElm, bgElmStyle);\n\t\t\tif (bgColor.alpha) {\n\t\t\t\ttotalAlpha += bgColor.alpha;\n\t\t\t} else {\n\t\t\t\t// remove elements not contributing to the background\n\t\t\t\telmStack.splice(i, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn totalAlpha;\n}\n\nfunction elmOutsideParent(elm, bgElm, bgColor) {\n\tvar visible = (elm !== bgElm && !dom.visuallyContains(elm, bgElm) && bgColor.alpha !== 0);\n\treturn visible;\n}\n/**\n * Get all elements rendered underneath the current element,\n * in the order in which it is rendered\n */\ncolor.getBackgroundStack = function(elm) {\n\tlet rect = elm.getBoundingClientRect();\n\tlet x, y;\n\tif (rect.left > window.innerWidth) {\n\t\treturn;\n\t}\n\tif (rect.top > window.innerHeight) {\n\t\treturn;\n\t}\n\tx = Math.min(\n\t\t\tMath.ceil(rect.left + (rect.width / 2)),\n\t\t\twindow.innerWidth - 1);\n\ty = Math.min(\n\t\t\tMath.ceil(rect.top + (rect.height / 2)),\n\t\t\twindow.innerHeight - 1);\n\n\tlet elmStack = document.elementsFromPoint(x, y);\n\telmStack = dom.reduceToElementsBelowFloating(elmStack, elm);\n\n\tlet bodyIndex = elmStack.indexOf(document.body);\n\n\tif (// Check that the body background is the page's background\n\t\tbodyIndex > 1 && // only if there are negative z-index elements\n\t\t!elmHasImage(document.documentElement) &&\n\t\tgetBgColor(document.documentElement).alpha === 0\n\t) {\n\t\t// Remove body and html from it's current place\n\t\telmStack.splice(bodyIndex, 1);\n\t\telmStack.splice( elmStack.indexOf(document.documentElement), 1);\n\n\t\t// Put the body background as the lowest element\n\t\telmStack.push(document.body);\n\t}\n\n\t// Return all elements BELOW the current element, null if the element is undefined\n\tlet elmIndex = elmStack.indexOf(elm);\n\tif (calculateObscuringAlpha(elmIndex, elmStack) >= 0.99) {\n\t\t// if the total of the elements above our element results in total obscuring, return null\n\t\taxe.commons.color.incompleteData.set('bgColor', {\n\t\t\tnode: elm,\n\t\t\treason: 'bgOverlap'\n\t\t});\n\t\treturn null;\n\t}\n\treturn elmIndex !== -1 ? elmStack : null;\n};\n\ncolor.getBackgroundColor = function(elm, bgElms = [], noScroll = false) {\n\tif(noScroll !== true) {\n\t\telm.scrollIntoView();\n\t}\n\tlet bgColors = [];\n\tlet elmStack = color.getBackgroundStack(elm);\n\n\t// Search the stack until we have an alpha === 1 background\n\t(elmStack || []).some((bgElm) => {\n\t\tlet bgElmStyle = window.getComputedStyle(bgElm);\n\n\t\t// Get the background color\n\t\tlet bgColor = getBgColor(bgElm, bgElmStyle);\n\n\t\tif (// abort if a node is outside it's parent and its parent has a background\n\t\t\telmOutsideParent(elm, bgElm, bgColor) ||\n\t\t\t// OR if the background elm is a graphic\n\t\t\telmHasImage(bgElm, bgElmStyle)\n\t\t) {\n\t\t\tbgColors = null;\n\t\t\tbgElms.push(bgElm);\n\n\t\t\treturn true;\n\t\t}\n\n\t\tif (bgColor.alpha !== 0) {\n\t\t\t// store elements contributing to the br color.\n\t\t\tbgElms.push(bgElm);\n\t\t\tbgColors.push(bgColor);\n\n\t\t\t// Exit if the background is opaque\n\t\t\treturn (bgColor.alpha === 1);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t});\n\n\tif (bgColors !== null && elmStack !== null) {\n\t\t// Mix the colors together, on top of a default white\n\t\tbgColors.push( new color.Color(255, 255, 255, 1));\n\t\tvar colors = bgColors.reduce( color.flattenColors);\n\t\treturn colors;\n\t}\n\n\treturn null;\n};\n\n/**\n * Determines whether an element has a fully opaque background, whether solid color or an image\n * @param {Element} node\n * @return {Boolean} false if the background is transparent, true otherwise\n */\ndom.isOpaque = function(node) {\n\tlet style = window.getComputedStyle(node);\n\treturn elmHasImage(node, style) || getBgColor(node, style).alpha === 1;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/color/get-foreground-color.js":"/*global axe, color */\n\n/**\n * Returns the flattened foreground color of an element, or null if it can't be determined because\n * of transparency\n * @param {Element} node\n * @param {Boolean} noScroll (default false)\n * @return {Color}\n */\ncolor.getForegroundColor = function (node, noScroll) {\n\tvar nodeStyle = window.getComputedStyle(node);\n\n\tvar fgColor = new color.Color();\n\tfgColor.parseRgbString(nodeStyle.getPropertyValue('color'));\n\tvar opacity = nodeStyle.getPropertyValue('opacity');\n\tfgColor.alpha = fgColor.alpha * opacity;\n\tif (fgColor.alpha === 1) { return fgColor; }\n\n\tvar bgColor = color.getBackgroundColor(node, [], noScroll);\n\tif (bgColor === null) {\n\t\tvar reason = axe.commons.color.incompleteData.get('bgColor').reason;\n\t\taxe.commons.color.incompleteData.set('fgColor', {\n\t\t\tnode: node,\n\t\t\treason: reason\n\t\t});\n\t\treturn null;\n\t}\n\n\treturn color.flattenColors(fgColor, bgColor);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/color/incomplete-data.js":"/* global color */\n\n/**\n * API for handling incomplete color data\n */\ncolor.incompleteData = (function() {\n\tvar data = {};\n\treturn {\n\t\t/**\n\t\t * Store incomplete data by key with a data object value\n\t\t * @param {String} key \t\t\t\t\t\tIdentifier for missing data point (fgColor, bgColor, etc.)\n\t\t * @param {Object} dataObj \t\t\t\tMissing data information\n\t\t * @param {Element} dataObj.node \tNode being tested for data point\n\t\t * @param {String} dataObj.reason Key for reason we couldn't tell\n\t\t */\n\t\tset: function(key, dataObj) {\n\t\t\tif (typeof key !== 'string') {\n\t\t\t\tthrow new Error('Incomplete data: key must be a string');\n\t\t\t}\n\t\t\tif (dataObj){\n\t\t\t\tdata[key] = dataObj;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Get incomplete data by key\n\t\t * @param {String} key \tIdentifier for missing data point (fgColor, bgColor, etc.)\n\t\t * @return {Object} Data object for string key\n\t\t */\n\t\t // TODO: do we need to lookup by node to ensure we have the right value?\n\t\tget: function(key) {\n\t\t\treturn data[key];\n\t\t},\n\t\t/**\n\t\t * Clear incomplete data on demand\n\t\t */\n\t\tclear: function() {\n\t\t\tdata = {};\n\t\t}\n\t};\n})();\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/elements-below-floating.js":"/* global dom */\n\n/**\n * Reduce an array of elements to only those that are below a 'floating' element.\n *\n * @param {Array} elements\n * @param {Element} targetNode\n * @returns {Array}\n */\ndom.reduceToElementsBelowFloating = function (elements, targetNode) {\n\tvar floatingPositions = ['fixed', 'sticky'],\n\t\tfinalElements = [],\n\t\ttargetFound = false,\n\t\tindex,\n\t\tcurrentNode,\n\t\tstyle;\n\n\t// Filter out elements that are temporarily floating above the target\n\tfor (index = 0; index < elements.length; ++index) {\n\t\tcurrentNode = elements[index];\n\t\tif (currentNode === targetNode) {\n\t\t\ttargetFound = true;\n\t\t}\n\n\t\tstyle = window.getComputedStyle(currentNode);\n\n\t\tif (!targetFound && floatingPositions.indexOf(style.position) !== -1) {\n\t\t\t//Target was not found yet, so it must be under this floating thing (and will not always be under it)\n\t\t\tfinalElements = [];\n\t\t\tcontinue;\n\t\t}\n\n\t\tfinalElements.push(currentNode);\n\t}\n\n\treturn finalElements;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/find-up.js":"/*global dom, axe */\n/**\n * recusively walk up the DOM, checking for a node which matches a selector\n *\n * **WARNING:** this should be used sparingly, as it's not even close to being performant\n *\n * @param {HTMLElement|String} element The starting HTMLElement\n * @param {String} selector The selector for the HTMLElement\n * @return {HTMLElement|null} Either the matching HTMLElement or `null` if there was no match\n */\ndom.findUp = function (element, target) {\n\t'use strict';\n\t/*jslint browser:true*/\n\n\tvar parent,\n\t\tmatches = document.querySelectorAll(target),\n\t\tlength = matches.length;\n\n\tif (!length) {\n\t\treturn null;\n\t}\n\n\tmatches = axe.utils.toArray(matches);\n\n\tparent = element.parentNode;\n\t// recrusively walk up the DOM, checking each parent node\n\twhile (parent && matches.indexOf(parent) === -1) {\n\t\tparent = parent.parentNode;\n\t}\n\n\treturn parent;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/get-element-by-reference.js":"/*global dom */\n\ndom.getElementByReference = function (node, attr) {\n\t'use strict';\n\n\tvar candidate,\n\t\tfragment = node.getAttribute(attr),\n\t\tdoc = document;\n\n\tif (fragment && fragment.charAt(0) === '#') {\n\t\tfragment = fragment.substring(1);\n\n\t\tcandidate = doc.getElementById(fragment);\n\t\tif (candidate) {\n\t\t\treturn candidate;\n\t\t}\n\n\t\tcandidate = doc.getElementsByName(fragment);\n\t\tif (candidate.length) {\n\t\t\treturn candidate[0];\n\t\t}\n\n\t}\n\n\treturn null;\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/get-element-coordinates.js":"/*global dom */\n/**\n * Get the coordinates of the element passed into the function relative to the document\n *\n * #### Returns\n *\n * Returns a `Object` with the following properties, which\n * each hold a value representing the pixels for each of the\n * respective coordinates:\n *\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n * - `width`\n * - `height`\n *\n * @param {HTMLElement} el The HTMLElement\n */\ndom.getElementCoordinates = function (element) {\n\t'use strict';\n\n\tvar scrollOffset = dom.getScrollOffset(document),\n\t\txOffset = scrollOffset.left,\n\t\tyOffset = scrollOffset.top,\n\t\tcoords = element.getBoundingClientRect();\n\n\treturn {\n\t\ttop: coords.top + yOffset,\n\t\tright: coords.right + xOffset,\n\t\tbottom: coords.bottom + yOffset,\n\t\tleft: coords.left + xOffset,\n\n\t\twidth: coords.right - coords.left,\n\t\theight: coords.bottom - coords.top\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/get-scroll-offset.js":"/*global dom */\n/**\n * Get the scroll offset of the document passed in\n *\n * @param {Document} element The element to evaluate, defaults to document\n * @return {Object} Contains the attributes `x` and `y` which contain the scroll offsets\n */\ndom.getScrollOffset = function (element) {\n\t'use strict';\n\n\tif (!element.nodeType && element.document) {\n\t\telement = element.document;\n\t}\n\n\t// 9 === Node.DOCUMENT_NODE\n\tif (element.nodeType === 9) {\n\t\tvar docElement = element.documentElement,\n\t\t\tbody = element.body;\n\n\t\treturn {\n\t\t\tleft: (docElement && docElement.scrollLeft || body && body.scrollLeft || 0),\n\t\t\ttop: (docElement && docElement.scrollTop || body && body.scrollTop || 0)\n\t\t};\n\t}\n\n\treturn {\n\t\tleft: element.scrollLeft,\n\t\ttop: element.scrollTop\n\t};\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/get-viewport-size.js":"/*global dom */\n/**\n * Gets the width and height of the viewport; used to calculate the right and bottom boundaries of the viewable area.\n *\n * @api private\n * @param  {Object}  window The `window` object that should be measured\n * @return {Object}  Object with the `width` and `height` of the viewport\n */\ndom.getViewportSize = function (win) {\n\t'use strict';\n\n\tvar body,\n\t\tdoc = win.document,\n\t\tdocElement = doc.documentElement;\n\n\tif (win.innerWidth) {\n\t\treturn {\n\t\t\twidth: win.innerWidth,\n\t\t\theight: win.innerHeight\n\t\t};\n\t}\n\n\tif (docElement) {\n\t\treturn {\n\t\t\twidth: docElement.clientWidth,\n\t\t\theight: docElement.clientHeight\n\t\t};\n\n\t}\n\n\tbody = doc.body;\n\n\treturn {\n\t\twidth: body.clientWidth,\n\t\theight: body.clientHeight\n\t};\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/has-content.js":"/*global dom, aria */\n/**\n * Check that the element has visible content\n * in the form of either text, an aria-label or visual content such as image\n *\n * @param DOMElement\n * @param [DOMElement] (optional) Items to ignore as content\n * @return boolean\n */\ndom.hasContent = function hasContent(elm, skipItems = []) {\n  if (\n    elm.textContent.trim() ||\n    aria.label(elm)\n  ) {\n    return true;\n  }\n\n  const contentElms = elm.querySelectorAll('*');\n  for (let i = 0; i < contentElms.length; i++) {\n    if (\n      skipItems.indexOf(contentElms[i]) === -1 &&\n      aria.label(contentElms[i]) ||\n      dom.isVisualContent(contentElms[i])\n    ) {\n      return true;\n    }\n  }\n  return false;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/idrefs.js":"/*global dom, axe */\n\n/**\n * Get elements referenced via a space-separated token attribute; it will insert `null` for any Element that is not found\n * @param  {HTMLElement} node\n * @param  {String} attr The name of attribute\n * @return {Array}      Array of elements (or `null` if not found)\n */\ndom.idrefs = function (node, attr) {\n\t'use strict';\n\n\tvar index, length,\n\t\tdoc = document,\n\t\tresult = [],\n\t\tidrefs = node.getAttribute(attr);\n\n\tif (idrefs) {\n\t\tidrefs = axe.utils.tokenList(idrefs);\n\t\tfor (index = 0, length = idrefs.length; index < length; index++) {\n\t\t\tresult.push(doc.getElementById(idrefs[index]));\n\t\t}\n\t}\n\n\treturn result;\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/is-focusable.js":"/*global dom */\n/* jshint maxcomplexity: 20 */\n/**\n * Determines if an element is focusable\n * @param {HTMLelement} element The HTMLelement\n * @return {Boolean} The element's focusability status\n */\n\ndom.isFocusable = function (el) {\n\t'use strict';\n\n\tif (!el ||\n\t\tel.disabled ||\n\t\t(!dom.isVisible(el) && el.nodeName.toUpperCase() !== 'AREA')) {\n\t\treturn false;\n\t}\n\n\tswitch (el.nodeName.toUpperCase()) {\n\t\tcase 'A':\n\t\tcase 'AREA':\n\t\t\tif (el.href) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tbreak;\n\t\tcase 'INPUT':\n\t\t\treturn el.type !== 'hidden';\n\t\tcase 'TEXTAREA':\n\t\tcase 'SELECT':\n\t\tcase 'DETAILS':\n\t\tcase 'BUTTON':\n\t\t\treturn true;\n\t}\n\n\t// check if the tabindex is specified and a parseable number\n\tvar tabindex = el.getAttribute('tabindex');\n\tif (tabindex && !isNaN(parseInt(tabindex, 10))) {\n\t\treturn true;\n\t}\n\n\treturn false;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/is-html5.js":"/*global dom */\ndom.isHTML5 = function (doc) {\n\tvar node = doc.doctype;\n\tif (node === null) {\n\t\treturn false;\n\t}\n\treturn node.name === 'html' && !node.publicId && !node.systemId;\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/is-in-text-block.js":"/* global axe, dom, window */\n\nfunction walkDomNode(node, functor) {\n\t'use strict';\n    var shouldWalk = functor(node);\n    node = node.firstChild;\n    while (node) {\n    \tif (shouldWalk !== false) {\n        \twalkDomNode(node, functor);\n    \t}\n        node = node.nextSibling;\n    }\n}\n\nvar blockLike = ['block', 'list-item', 'table', 'flex', 'grid', 'inline-block'];\nfunction isBlock(elm) {\n\t'use strict';\n\tvar display = window.getComputedStyle(elm).getPropertyValue('display');\n\treturn (blockLike.indexOf(display) !== -1 ||\n\t\t\tdisplay.substr(0, 6) === 'table-');\n}\n\n\ndom.isInTextBlock = function isInTextBlock(node) {\n\t// jshint maxcomplexity: 15\n\t'use strict';\n\t// Ignore if the link is a block\n\tif (isBlock(node)) {\n\t\treturn false;\n\t}\n\n\t// Find the closest parent\n\tvar parentBlock = node.parentNode;\n\twhile (parentBlock.nodeType === 1 && !isBlock(parentBlock)) {\n\t\tparentBlock = parentBlock.parentNode;\n\t}\n\n\t// Find all the text part of the parent block not in a link, and all the text in a link\n\tvar parentText = '';\n\tvar linkText = '';\n\tvar inBrBlock = 0;\n\n\t// We want to ignore hidden text, and if br / hr is used, only use the section of the parent \n\t// that has the link we're looking at\n\twalkDomNode(parentBlock, function (currNode) {\n\t\t// We're already passed it, skip everything else\n\t\tif (inBrBlock === 2) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (currNode.nodeType === 3) {\n\t\t\t// Add the text to the parent\n\t\t\tparentText += currNode.nodeValue;\n\t\t}\n\t\t// Ignore any node that's not an element (or text as above)\n\t\tif (currNode.nodeType !== 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar nodeName = (currNode.nodeName || '').toUpperCase();\n\t\t// BR and HR elements break the line\n\t\tif (['BR', 'HR'].indexOf(nodeName) !== -1) {\n\t\t\tif (inBrBlock === 0) {\n\t\t\t\tparentText = '';\n\t\t\t\tlinkText = '';\n\t\t\t} else {\n\t\t\t\tinBrBlock = 2;\n\t\t\t}\n\n\t\t// Don't walk nodes with content not displayed on screen.\n\t\t} else if (currNode.style.display === 'none' ||\n\t\t\t\tcurrNode.style.overflow === 'hidden' ||\n\t\t\t\t['', null, 'none'].indexOf(currNode.style.float) === -1 ||\n\t\t\t\t['', null, 'relative'].indexOf(currNode.style.position) === -1) {\n\t\t\treturn false;\n\n\t\t// Don't walk links, we're only interested in what's not in them.\n\t\t} else if ((nodeName === 'A' && currNode.href) ||\n\t\t\t\t(currNode.getAttribute('role') || '').toLowerCase() === 'link') {\n\t\t\tif (currNode === node) {\n\t\t\t\tinBrBlock = 1;\n\t\t\t}\n\t\t\t// Grab all the text from this element, but don't walk down it's children\n\t\t\tlinkText += currNode.textContent;\n\t\t\treturn false;\n\t\t}\n\t});\n\n\tparentText = axe.commons.text.sanitize(parentText);\n\tlinkText = axe.commons.text.sanitize(linkText);\n\n\treturn (parentText.length > linkText.length);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/is-node.js":"/*global dom */\ndom.isNode = function (candidate) {\n\t'use strict';\n\treturn candidate instanceof Node;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/is-offscreen.js":"/*global dom */\n\ndom.isOffscreen = function (element) {\n\t'use strict';\n\tvar noParentScrolled = function (element, offset) {\n\t\telement = element.parentNode;\n\t\twhile (element.nodeName.toLowerCase() !== 'html') {\n\t\t\tif (element.scrollTop) {\n\t\t\t\toffset += element.scrollTop;\n\t\t\t\tif (offset >= 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\telement = element.parentNode;\n\t\t}\n\t\treturn true;\n\t};\n\n\tvar leftBoundary,\n\t\tdocElement = document.documentElement,\n\t\tdir = window.getComputedStyle(document.body || docElement)\n\t\t\t.getPropertyValue('direction'),\n\t\tcoords = dom.getElementCoordinates(element);\n\n\t// bottom edge beyond\n\tif (coords.bottom < 0 && noParentScrolled(element, coords.bottom)) {\n\t\treturn true;\n\t}\n\n\tif (coords.left === 0 && coords.right === 0) {\n\t\t//This is an edge case, an empty (zero-width) element that isn't positioned 'off screen'.\n\t\treturn false;\n\t}\n\n\tif (dir === 'ltr') {\n\t\tif (coords.right <= 0) {\n\t\t\treturn true;\n\t\t}\n\t} else {\n\n\t\tleftBoundary = Math.max(docElement.scrollWidth, dom.getViewportSize(window).width);\n\t\tif (coords.left >= leftBoundary) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/is-visible.js":"/*global dom */\n/*jshint maxcomplexity: 11 */\n\n/**\n * Determines if an element is hidden with the clip rect technique\n * @param  {String}  clip Computed property value of clip\n * @return {Boolean}\n */\nfunction isClipped(clip) {\n\t'use strict';\n\n\tvar matches = clip.match(/rect\\s*\\(([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px,?\\s*([0-9]+)px\\s*\\)/);\n\tif (matches && matches.length === 5) {\n\t\treturn matches[3] - matches[1] <= 0 && matches[2] - matches[4] <= 0;\n\t}\n\n\treturn false;\n\n}\n\n/**\n * Determine whether an element is visible\n *\n * @param {HTMLElement} el The HTMLElement\n * @param {Boolean} screenReader When provided, will evaluate visibility from the perspective of a screen reader\n * @return {Boolean} The element's visibilty status\n */\ndom.isVisible = function (el, screenReader, recursed) {\n\t'use strict';\n\tvar style,\n\t\tnodeName = el.nodeName.toUpperCase(),\n\t\tparent = el.parentNode;\n\n\t// 9 === Node.DOCUMENT\n\tif (el.nodeType === 9) {\n\t\treturn true;\n\t}\n\n\tstyle = window.getComputedStyle(el, null);\n\tif (style === null) {\n\t\treturn false;\n\t}\n\n\tif (style.getPropertyValue('display') === 'none' ||\n\n\t\tnodeName.toUpperCase() === 'STYLE' || nodeName.toUpperCase() === 'SCRIPT' ||\n\n\t\t(!screenReader && (isClipped(style.getPropertyValue('clip')))) ||\n\n\t\t(!recursed &&\n\t\t\t// visibility is only accurate on the first element\n\t\t\t(style.getPropertyValue('visibility') === 'hidden' ||\n\t\t\t// position does not matter if it was already calculated\n\t\t\t!screenReader && dom.isOffscreen(el))) ||\n\n\t\t(screenReader && el.getAttribute('aria-hidden') === 'true')) {\n\n\t\treturn false;\n\t}\n\n\tif (parent) {\n\t\treturn dom.isVisible(parent, screenReader, true);\n\t}\n\n\treturn false;\n\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/is-visual-content.js":"/*global dom */\n/*jshint maxcomplexity: 20 */\n\nconst visualRoles = [\n\t'checkbox', 'img', 'radio', 'range',\n\t'slider', 'spinbutton', 'textbox',\n];\n\n/**\n * Check if an element is an inherently visual element\n * @param  {object}  candidate The node to check\n * @return {Boolean}\n */\ndom.isVisualContent = function (candidate) {\n\tconst role = candidate.getAttribute('role');\n\tif (role) {\n\t\treturn (visualRoles.indexOf(role) !== -1);\n\t}\n\n\tswitch (candidate.tagName.toUpperCase()) {\n\t\tcase 'IMG':\n\t\tcase 'IFRAME':\n\t\tcase 'OBJECT':\n\t\tcase 'VIDEO':\n\t\tcase 'AUDIO':\n\t\tcase 'CANVAS':\n\t\tcase 'SVG':\n\t\tcase 'MATH':\n\t\tcase 'BUTTON':\n\t\tcase 'SELECT':\n\t\tcase 'TEXTAREA':\n\t\tcase 'KEYGEN':\n\t\tcase 'PROGRESS':\n\t\tcase 'METER':\n\t\t\treturn true;\n\t\tcase 'INPUT':\n\t\t\treturn candidate.type !== 'hidden';\n\t\tdefault:\n\t\t\treturn false;\n\t}\n\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/visually-contains.js":"/* global dom */\n/* jshint maxcomplexity: 11 */\n\n/**\n * Checks whether a parent element visually contains its child, either directly or via scrolling.\n * Assumes that |parent| is an ancestor of |node|.\n * @param {Element} node\n * @param {Element} parent\n * @return {boolean} True if node is visually contained within parent\n */\ndom.visuallyContains = function (node, parent) {\n\tvar rectBound = node.getBoundingClientRect();\n\tvar margin = 0.01;\n\tvar rect = {\n\t\ttop: rectBound.top + margin,\n\t\tbottom: rectBound.bottom - margin,\n\t\tleft: rectBound.left + margin,\n\t\tright: rectBound.right - margin\n\t};\n\tvar parentRect = parent.getBoundingClientRect();\n\tvar parentTop = parentRect.top;\n\tvar parentLeft = parentRect.left;\n\tvar parentScrollArea = {\n\t\ttop: parentTop - parent.scrollTop,\n\t\tbottom: parentTop - parent.scrollTop + parent.scrollHeight,\n\t\tleft: parentLeft - parent.scrollLeft,\n\t\tright: parentLeft - parent.scrollLeft + parent.scrollWidth\n\t};\n\n\t//In theory, we should just be able to look at the scroll area as a superset of the parentRect,\n\t//but that's not true in Firefox\n\tif ((rect.left < parentScrollArea.left && rect.left < parentRect.left) ||\n\t\t(rect.top < parentScrollArea.top && rect.top < parentRect.top) ||\n\t\t(rect.right > parentScrollArea.right && rect.right > parentRect.right) ||\n\t\t(rect.bottom > parentScrollArea.bottom && rect.bottom > parentRect.bottom)) {\n\t\treturn false;\n\t}\n\n\tvar style = window.getComputedStyle(parent);\n\n\tif (rect.right > parentRect.right || rect.bottom > parentRect.bottom) {\n\t\treturn (style.overflow === 'scroll' || style.overflow === 'auto' ||\n\t\t\t\tstyle.overflow === 'hidden' || parent instanceof HTMLBodyElement ||\n\t\t\t\tparent instanceof HTMLHtmlElement);\n\t}\n\n\treturn true;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/dom/visually-overlaps.js":"/* global dom */\n/* jshint maxcomplexity: 11 */\n\n/**\n * Checks whether a parent element visually overlaps a rectangle, either directly or via scrolling.\n * @param {DOMRect} rect\n * @param {Element} parent\n * @return {boolean} True if rect is visually contained within parent\n */\ndom.visuallyOverlaps = function (rect, parent) {\n\tvar parentRect = parent.getBoundingClientRect();\n\tvar parentTop = parentRect.top;\n\tvar parentLeft = parentRect.left;\n\tvar parentScrollArea = {\n\t\ttop: parentTop - parent.scrollTop,\n\t\tbottom: parentTop - parent.scrollTop + parent.scrollHeight,\n\t\tleft: parentLeft - parent.scrollLeft,\n\t\tright: parentLeft - parent.scrollLeft + parent.scrollWidth\n\t};\n\n\t//In theory, we should just be able to look at the scroll area as a superset of the parentRect,\n\t//but that's not true in Firefox\n\tif ((rect.left > parentScrollArea.right && rect.left > parentRect.right) ||\n\t\t(rect.top > parentScrollArea.bottom && rect.top > parentRect.bottom) ||\n\t\t(rect.right < parentScrollArea.left && rect.right < parentRect.left) ||\n\t\t(rect.bottom < parentScrollArea.top && rect.bottom < parentRect.top)) {\n\t\treturn false;\n\t}\n\n\tvar style = window.getComputedStyle(parent);\n\n\tif (rect.left > parentRect.right || rect.top > parentRect.bottom) {\n\t\treturn (style.overflow === 'scroll' || style.overflow === 'auto' ||\n\t\t\t\tparent instanceof HTMLBodyElement ||\n\t\t\t\tparent instanceof HTMLHtmlElement);\n\t}\n\n\treturn true;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/get-all-cells.js":"/* global table */\ntable.getAllCells = function (tableElm) {\n\tvar rowIndex, cellIndex, rowLength, cellLength;\n\tvar cells = [];\n\tfor (rowIndex = 0, rowLength = tableElm.rows.length; rowIndex < rowLength; rowIndex++) {\n\t\tfor (cellIndex = 0, cellLength = tableElm.rows[rowIndex].cells.length; cellIndex < cellLength; cellIndex++) {\n\t\t\tcells.push(tableElm.rows[rowIndex].cells[cellIndex]);\n\t\t}\n\t}\n\treturn cells;\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/get-cell-position.js":"/*global table, dom */\n\n/**\n * Get the x, y coordinates of a table cell; normalized for rowspan and colspan\n * @param  {HTMLTableCelLElement} cell The table cell of which to get the position\n * @return {Object}      Object with `x` and `y` properties of the coordinates\n */\ntable.getCellPosition = function (cell, tableGrid) {\n\tvar rowIndex, index;\n\tif (!tableGrid) {\n\t\ttableGrid = table.toGrid(dom.findUp(cell, 'table'));\n\t}\n\n\tfor (rowIndex = 0; rowIndex < tableGrid.length; rowIndex++) {\n\t\tif (tableGrid[rowIndex]) {\n\t\t\tindex = tableGrid[rowIndex].indexOf(cell);\n\t\t\tif (index !== -1) {\n\t\t\t\treturn {\n\t\t\t\t\tx: index,\n\t\t\t\t\ty: rowIndex\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/get-headers.js":"/*global table */\n\n/**\n * Get any associated table headers for a `HTMLTableCellElement`\n * @param  {HTMLTableCellElement} cell The cell of which to get headers\n * @return {Array}      Array of headers associated to the table cell\n */\ntable.getHeaders = function (cell) {\n\n\tif (cell.hasAttribute('headers')) {\n\t\treturn commons.dom.idrefs(cell, 'headers');\n\t}\n\n\tvar tableGrid = commons.table.toGrid(commons.dom.findUp(cell, 'table'));\n\tvar position = commons.table.getCellPosition(cell, tableGrid);\n\n\t// TODO: RTL text\n\tvar rowHeaders = table\n\t.traverse('left', position, tableGrid)\n\t.filter((cell) => table.isRowHeader(cell));\n\n\tvar colHeaders = table\n\t.traverse('up', position, tableGrid)\n\t.filter((cell) => table.isColumnHeader(cell));\n\n\treturn [].concat(rowHeaders, colHeaders).reverse();\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/get-scope.js":"/*global table, dom */\n\n/**\n * Determine if a `HTMLTableCellElement` is a column header\n * @param  {HTMLTableCellElement}  node The table cell to test\n * @return {Boolean}\n */\ntable.getScope = function (cell) {\n\tvar scope = cell.getAttribute('scope');\n\tvar role = cell.getAttribute('role');\n\n\tif (cell instanceof Element === false ||\n\t\t['TD', 'TH'].indexOf(cell.nodeName.toUpperCase()) === -1\n\t) {\n\t\tthrow new TypeError('Expected TD or TH element');\n\t}\n\n\tif (role === 'columnheader') {\n\t\treturn 'col';\n\n\t} else if (role === 'rowheader') {\n\t\treturn 'row';\n\n\t} else if (scope === 'col' || scope === 'row') {\n\t\treturn scope;\n\n\t} else if (cell.nodeName.toUpperCase() !== 'TH') {\n\t\treturn false;\n\t}\n\tvar tableGrid = table.toGrid(dom.findUp(cell, 'table'));\n\tvar pos = table.getCellPosition(cell);\n\n\t// The element is in a row with all th elements, that makes it a column header\n\tvar headerRow = tableGrid[pos.y].reduce((headerRow, cell) => {\n\t\treturn headerRow && cell.nodeName.toUpperCase() === 'TH';\n\t}, true);\n\n\tif (headerRow) {\n\t\treturn 'col';\n\t}\n\n\t// The element is in a column with all th elements, that makes it a row header\n\tvar headerCol = tableGrid.map((col) => col[pos.x])\n\t.reduce((headerCol, cell) => {\n\t\treturn headerCol && cell.nodeName.toUpperCase() === 'TH';\n\t}, true);\n\n\tif (headerCol) {\n\t\treturn 'row';\n\t}\n\treturn 'auto';\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/is-column-header.js":"/*global table */\n\n/**\n * Determine if a `HTMLTableCellElement` is a column header\n * @param  {HTMLTableCellElement}  node The table cell to test\n * @return {Boolean}\n */\ntable.isColumnHeader = function (node) {\n\treturn (['col', 'auto'].indexOf(table.getScope(node)) !== -1);\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/is-data-cell.js":"/*global table */\n\n/**\n * Determine if a `HTMLTableCellElement` is a data cell\n * @param  {HTMLTableCellElement}  node The table cell to test\n * @return {Boolean}\n */\ntable.isDataCell = function (cell) {\n\t// @see http://www.whatwg.org/specs/web-apps/current-work/multipage/tables.html#empty-cell\n\tif (!cell.children.length && !cell.textContent.trim()) {\n\t\treturn false;\n\t}\n\treturn cell.nodeName.toUpperCase() === 'TD';\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/is-data-table.js":"/*global table, dom */\n/*jshint maxstatements: 70, maxcomplexity: 40 */\n\n/**\n * Determines whether a table is a data table\n * @param  {HTMLTableElement}  node The table to test\n * @return {Boolean}\n * @see http://asurkov.blogspot.co.uk/2011/10/data-vs-layout-table.html\n */\ntable.isDataTable = function (node) {\n\n\tvar role = node.getAttribute('role');\n\n\t// The element is not focusable and has role=presentation\n\tif ((role === 'presentation' || role === 'none') && !dom.isFocusable(node)) {\n\t\treturn false;\n\t}\n\n\t// Table inside editable area is data table always since the table structure is crucial for table editing\n\tif (node.getAttribute('contenteditable') === 'true' || dom.findUp(node, '[contenteditable=\"true\"]')) {\n\t\treturn true;\n\t}\n\n\t// Table having ARIA table related role is data table\n\tif (role === 'grid' || role === 'treegrid' || role === 'table') {\n\t\treturn true;\n\t}\n\n\t// Table having ARIA landmark role is data table\n\tif (commons.aria.getRoleType(role) === 'landmark') {\n\t\treturn true;\n\t}\n\n\t// Table having datatable=\"0\" attribute is layout table\n\tif (node.getAttribute('datatable') === '0') {\n\t\treturn false;\n\t}\n\n\t// Table having summary attribute is data table\n\tif (node.getAttribute('summary')) {\n\t\treturn true;\n\n\t}\n\n\t// Table having legitimate data table structures is data table\n\tif (node.tHead || node.tFoot || node.caption) {\n\t\treturn true;\n\t}\n\t// colgroup / col - colgroup is magically generated\n\tfor (var childIndex = 0, childLength = node.children.length; childIndex < childLength; childIndex++) {\n\t\tif (node.children[childIndex].nodeName.toUpperCase() === 'COLGROUP') {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tvar cells = 0;\n\tvar rowLength = node.rows.length;\n\tvar row, cell;\n\tvar hasBorder = false;\n\tfor (var rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n\t\trow = node.rows[rowIndex];\n\t\tfor (var cellIndex = 0, cellLength = row.cells.length; cellIndex < cellLength; cellIndex++) {\n\t\t\tcell = row.cells[cellIndex];\n\t\t\tif (cell.nodeName.toUpperCase() === 'TH') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (!hasBorder && (cell.offsetWidth !== cell.clientWidth || cell.offsetHeight !== cell.clientHeight)) {\n\t\t\t\thasBorder = true;\n\t\t\t}\n\t\t\tif (cell.getAttribute('scope') || cell.getAttribute('headers') || cell.getAttribute('abbr')) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (['columnheader', 'rowheader'].indexOf(cell.getAttribute('role')) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t// abbr element as a single child element of table cell\n\t\t\tif (cell.children.length === 1 && cell.children[0].nodeName.toUpperCase() === 'ABBR') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcells++;\n\t\t}\n\t}\n\n\t// Table having nested table is layout table\n\tif (node.getElementsByTagName('table').length) {\n\t\treturn false;\n\t}\n\n\t// Table having only one row or column is layout table (row)\n\tif (rowLength < 2) {\n\t\treturn false;\n\t}\n\n\t// Table having only one row or column is layout table (column)\n\tvar sampleRow = node.rows[Math.ceil(rowLength / 2)];\n\tif (sampleRow.cells.length === 1 && sampleRow.cells[0].colSpan === 1) {\n\t\treturn false;\n\t}\n\n\t// Table having many columns (>= 5) is data table\n\tif (sampleRow.cells.length >= 5) {\n\t\treturn true;\n\t}\n\n\t// Table having borders around cells is data table\n\tif (hasBorder) {\n\t\treturn true;\n\t}\n\n\t// Table having differently colored rows is data table\n\tvar bgColor, bgImage;\n\tfor (rowIndex = 0; rowIndex < rowLength; rowIndex++) {\n\t\trow = node.rows[rowIndex];\n\t\tif (bgColor && bgColor !== window.getComputedStyle(row).getPropertyValue('background-color')) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tbgColor = window.getComputedStyle(row).getPropertyValue('background-color');\n\t\t}\n\t\tif (bgImage && bgImage !== window.getComputedStyle(row).getPropertyValue('background-image')) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\tbgImage = window.getComputedStyle(row).getPropertyValue('background-image');\n\t\t}\n\n\t}\n\n\t// Table having many rows (>= 20) is data table\n\tif (rowLength >= 20) {\n\t\treturn true;\n\t}\n\n\t// Wide table (more than 95% of the document width) is layout table\n\tif (dom.getElementCoordinates(node).width > dom.getViewportSize(window).width * 0.95) {\n\t\treturn false;\n\t}\n\n\t// Table having small amount of cells (<= 10) is layout table\n\tif (cells < 10) {\n\t\treturn false;\n\t}\n\n\t// Table containing embed, object, applet of iframe elements (typical advertisements elements) is layout table\n\tif (node.querySelector('object, embed, iframe, applet')) {\n\t\treturn false;\n\t}\n\n\t// Otherwise it's data table\n\treturn true;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/is-header.js":"/*global table, axe */\n\n/**\n * Determine if a `HTMLTableCellElement` is a header\n * @param  {HTMLTableCellElement}  node The table cell to test\n * @return {Boolean}\n */\ntable.isHeader = function (cell) {\n\tif (table.isColumnHeader(cell) || table.isRowHeader(cell)) {\n\t\treturn true;\n\t}\n\n\tif (cell.id) {\n\t\treturn !!document.querySelector('[headers~=\"' + axe.utils.escapeSelector(cell.id) + '\"]');\n\t}\n\n\treturn false;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/is-row-header.js":"/*global table */\n\n/**\n * Determine if a `HTMLTableCellElement` is a row header\n * @param  {HTMLTableCellElement}  node The table cell to test\n * @return {Boolean}\n */\ntable.isRowHeader = function (node) {\n\treturn (['row', 'auto'].indexOf(table.getScope(node)) !== -1);\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/to-grid.js":"/*global table */\n\n/**\n * Converts a table to an Array of arrays, normalized for row and column spans\n * @param  {HTMLTableElement} node The table to convert\n * @return {Array}      Array of rows and cells\n */\ntable.toGrid = function (node) {\n\tvar table = [];\n\tvar rows = node.rows;\n\tfor (var i = 0, rowLength = rows.length; i < rowLength; i++) {\n\t\tvar cells = rows[i].cells;\n\t\ttable[i] = table[i] || [];\n\n\t\tvar columnIndex = 0;\n\n\t\tfor (var j = 0, cellLength = cells.length; j < cellLength; j++) {\n\t\t\tfor (var colSpan = 0; colSpan < cells[j].colSpan; colSpan++) {\n\t\t\t\tfor (var rowSpan = 0; rowSpan < cells[j].rowSpan; rowSpan++) {\n\t\t\t\t\ttable[i + rowSpan] = table[i + rowSpan] || [];\n\t\t\t\t\twhile (table[i + rowSpan][columnIndex]) {\n\t\t\t\t\t\tcolumnIndex++;\n\t\t\t\t\t}\n\t\t\t\t\ttable[i + rowSpan][columnIndex] = cells[j];\n\t\t\t\t}\n\t\t\t\tcolumnIndex++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn table;\n};\n\n// This was the old name\ntable.toArray = table.toGrid;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/table/traverse.js":"/* global table */\n(function (table) {\n\n\tvar traverseTable = function (dir, position, tableGrid, callback) {\n\t\tvar result;\n\t\tvar cell = (tableGrid[position.y] ? tableGrid[position.y][position.x] : undefined);\n\t\tif (!cell) {\n\t\t\treturn [];\n\t\t}\n\t\tif (typeof callback === 'function') {\n\t\t\tresult = callback(cell, position, tableGrid);\n\t\t\tif (result === true) { // abort\n\t\t\t\treturn [cell];\n\t\t\t}\n\t\t}\n\n\t\tresult = traverseTable(dir, {\n\t\t\tx: position.x + dir.x,\n\t\t\ty: position.y + dir.y\n\t\t}, tableGrid, callback);\n\t\tresult.unshift(cell);\n\t\treturn result;\n\t};\n\n\t/**\n\t * Traverses a table in a given direction, passing it to the callback\n\t * @param  {object}   dir      Direction that will be added recursively {x: 1, y: 0};\n\t * @param  {object}   start    x/y coordinate: {x: 0, y: 0};\n\t * @param  {array}    [table]  A matrix of the table obtained using axe.commons.table.toArray (OPTIONAL)\n\t * @param  {Function} callback Function to which each cell will be passed\n\t * @return {nodeElemtn}        If the callback returns true, the traversal will end and the cell will be returned\n\t */\n\ttable.traverse = function (dir, startPos, tableGrid, callback) {\n\t\tif (Array.isArray(startPos)) {\n\t\t\tcallback = tableGrid;\n\t\t\ttableGrid = startPos;\n\t\t\tstartPos = { x:0, y:0 };\n\t\t}\n\n\t\tif (typeof dir === 'string') {\n\t\t\tswitch (dir) {\n\t\t\t\tcase 'left': dir = { x: -1, y: 0 };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'up': dir = { x: 0, y: -1 };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'right': dir = { x: 1, y: 0 };\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'down': dir = { x: 0, y: 1 };\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn traverseTable(dir, {\n\t\t\tx: startPos.x + dir.x,\n\t\t\ty: startPos.y + dir.y\n\t\t}, tableGrid, callback);\n\t};\n\n}(table));","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/text/accessible-text.js":"/*global text, dom, aria, axe */\n/*jshint maxstatements: 25, maxcomplexity: 19 */\n\nvar defaultButtonValues = {\n\tsubmit: 'Submit',\n\treset: 'Reset'\n};\n\nvar inputTypes = ['text', 'search', 'tel', 'url', 'email', 'date', 'time', 'number', 'range', 'color'];\nvar phrasingElements = ['A', 'EM', 'STRONG', 'SMALL', 'MARK', 'ABBR', 'DFN', 'I', 'B', 'S', 'U', 'CODE',\n\t'VAR', 'SAMP', 'KBD', 'SUP', 'SUB', 'Q', 'CITE', 'SPAN', 'BDO', 'BDI', 'BR', 'WBR', 'INS', 'DEL', 'IMG',\n\t'EMBED', 'OBJECT', 'IFRAME', 'MAP', 'AREA', 'SCRIPT', 'NOSCRIPT', 'RUBY', 'VIDEO', 'AUDIO', 'INPUT',\n\t'TEXTAREA', 'SELECT', 'BUTTON', 'LABEL', 'OUTPUT', 'DATALIST', 'KEYGEN', 'PROGRESS', 'COMMAND',\n\t'CANVAS', 'TIME', 'METER'];\n\n/**\n * Find a non-ARIA label for an element\n *\n * @param {HTMLElement} element The HTMLElement\n * @return {HTMLElement} The label element, or null if none is found\n */\nfunction findLabel(element) {\n\tvar ref = null;\n\tif (element.id) {\n\t\tref = document.querySelector('label[for=\"' + axe.utils.escapeSelector(element.id) + '\"]');\n\t\tif (ref) {\n\t\t\treturn ref;\n\t\t}\n\t}\n\tref = dom.findUp(element, 'label');\n\treturn ref;\n}\n\nfunction isButton(element) {\n\treturn ['button', 'reset', 'submit'].indexOf(element.type) !== -1;\n}\n\nfunction isInput(element) {\n\tvar nodeName = element.nodeName.toUpperCase();\n\treturn (nodeName === 'TEXTAREA' || nodeName === 'SELECT') ||\n\t\t(nodeName === 'INPUT' && element.type.toLowerCase() !== 'hidden');\n}\n\nfunction shouldCheckSubtree(element) {\n\treturn ['BUTTON', 'SUMMARY', 'A'].indexOf(element.nodeName.toUpperCase()) !== -1;\n}\n\nfunction shouldNeverCheckSubtree(element) {\n\treturn ['TABLE', 'FIGURE'].indexOf(element.nodeName.toUpperCase()) !== -1;\n}\n\n/**\n * Calculate value of a form element when treated as a value\n *\n * @param {HTMLElement} element The HTMLElement\n * @return {string} The calculated value\n */\nfunction formValueText(element) {\n\tvar nodeName = element.nodeName.toUpperCase();\n\tif (nodeName === 'INPUT') {\n\t\tif (!element.hasAttribute('type') || (\n\t\t\t\tinputTypes.indexOf(element.getAttribute('type').toLowerCase()) !== -1) &&\n\t\t\t\telement.value) {\n\t\t\treturn element.value;\n\t\t}\n\t\treturn '';\n\t}\n\n\tif (nodeName === 'SELECT') {\n\t\tvar opts = element.options;\n\t\tif (opts && opts.length) {\n\t\t\tvar returnText = '';\n\t\t\tfor (var i = 0; i < opts.length; i++) {\n\t\t\t\tif (opts[i].selected) {\n\t\t\t\t\treturnText += ' ' + opts[i].text;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn text.sanitize(returnText);\n\t\t}\n\t\treturn '';\n\t}\n\n\tif (nodeName === 'TEXTAREA' && element.value) {\n\t\treturn element.value;\n\t}\n\treturn '';\n}\n\nfunction checkDescendant(element, nodeName) {\n\tvar candidate = element.querySelector(nodeName.toLowerCase());\n\tif (candidate) {\n\t\treturn text.accessibleText(candidate);\n\t}\n\n\treturn '';\n}\n\n\n/**\n * Determine whether an element can be an embedded control\n *\n * @param {HTMLElement} element The HTMLElement\n * @return {boolean} True if embedded control\n */\nfunction isEmbeddedControl(e) {\n\tif (!e) {\n\t\treturn false;\n\t}\n\tswitch (e.nodeName.toUpperCase()) {\n\t\tcase 'SELECT':\n\t\tcase 'TEXTAREA':\n\t\t\treturn true;\n\t\tcase 'INPUT':\n\t\t\treturn !e.hasAttribute('type') || (inputTypes.indexOf(e.getAttribute('type').toLowerCase()) !== -1);\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nfunction shouldCheckAlt(element) {\n\tvar nodeName = element.nodeName.toUpperCase();\n\treturn (nodeName === 'INPUT' && element.type.toLowerCase() === 'image') ||\n\t\t['IMG', 'APPLET', 'AREA'].indexOf(nodeName) !== -1;\n}\n\nfunction nonEmptyText(t) {\n\treturn !!text.sanitize(t);\n}\n\n/**\n * Determine the accessible text of an element, using logic from ARIA:\n * http://www.w3.org/TR/html-aam-1.0/\n * http://www.w3.org/TR/wai-aria/roles#textalternativecomputation\n *\n * @param {HTMLElement} element The HTMLElement\n * @param {Boolean} inLabelledByContext True when in the context of resolving a labelledBy\n * @return {string}\n */\ntext.accessibleText = function(element, inLabelledByContext) {\n\tvar accessibleNameComputation;\n\tvar encounteredNodes = [];\n\n\tfunction getInnerText (element, inLabelledByContext, inControlContext) {\n\t\tvar nodes = element.childNodes;\n\t\tvar returnText = '';\n\t\tvar node;\n\n\t\tfor (var i = 0; i < nodes.length; i++) {\n\t\t\tnode = nodes[i];\n\t\t\tif (node.nodeType === 3) {\n\t\t\t\treturnText += node.textContent;\n\t\t\t} else if (node.nodeType === 1) {\n\t\t\t\tif (phrasingElements.indexOf(node.nodeName.toUpperCase()) === -1) {\n\t\t\t\t\treturnText += ' ';\n\t\t\t\t}\n\t\t\t\treturnText += accessibleNameComputation(nodes[i], inLabelledByContext, inControlContext);\n\t\t\t}\n\t\t}\n\n\t\treturn returnText;\n\t}\n\n\tfunction checkNative (element, inLabelledByContext, inControlContext) {\n\t\t// jshint maxstatements:30\n\t\tvar returnText = '';\n\t\tvar nodeName = element.nodeName.toUpperCase();\n\n\t\tif (shouldCheckSubtree(element)) {\n\t\t\treturnText = getInnerText(element, false, false) || '';\n\t\t\tif (nonEmptyText(returnText)) {\n\t\t\t\treturn returnText;\n\t\t\t}\n\t\t}\n\t\tif (nodeName === 'FIGURE') {\n\t\t\treturnText = checkDescendant(element, 'figcaption');\n\n\t\t\tif (nonEmptyText(returnText)) {\n\t\t\t\treturn returnText;\n\t\t\t}\n\t\t}\n\n\t\tif (nodeName === 'TABLE') {\n\t\t\treturnText = checkDescendant(element, 'caption');\n\n\t\t\tif (nonEmptyText(returnText)) {\n\t\t\t\treturn returnText;\n\t\t\t}\n\n\t\t\treturnText = element.getAttribute('title') || element.getAttribute('summary') || '';\n\n\t\t\tif (nonEmptyText(returnText)) {\n\t\t\t\treturn returnText;\n\t\t\t}\n\t\t}\n\n\t\tif (shouldCheckAlt(element)) {\n\t\t\treturn element.getAttribute('alt') || '';\n\t\t}\n\n\t\tif (isInput(element) && !inControlContext) {\n\t\t\tif (isButton(element)) {\n\t\t\t\treturn element.value || element.title || defaultButtonValues[element.type] || '';\n\t\t\t}\n\n\t\t\tvar labelElement = findLabel(element);\n\t\t\tif (labelElement) {\n\t\t\t\treturn accessibleNameComputation(labelElement, inLabelledByContext, true);\n\t\t\t}\n\t\t}\n\n\t\treturn '';\n\t}\n\n\tfunction checkARIA (element, inLabelledByContext, inControlContext) {\n\n\t\tif (!inLabelledByContext && element.hasAttribute('aria-labelledby')) {\n\t\t\treturn text.sanitize(dom.idrefs(element, 'aria-labelledby').map(function(l) {\n\t\t\t\tif (element === l) {\n\t\t\t\t\tencounteredNodes.pop();\n\t\t\t\t} //let element be encountered twice\n\t\t\t\treturn accessibleNameComputation(l, true, element !== l);\n\t\t\t}).join(' '));\n\t\t}\n\n\t\tif (!(inControlContext && isEmbeddedControl(element)) && element.hasAttribute('aria-label')) {\n\t\t\treturn text.sanitize(element.getAttribute('aria-label'));\n\t\t}\n\n\t\treturn '';\n\t}\n\n\t/**\n\t * Determine the accessible text of an element, using logic from ARIA:\n\t * http://www.w3.org/TR/accname-aam-1.1/#mapping_additional_nd_name\n\t *\n\t * @param {HTMLElement} element The HTMLElement\n\t * @param {Boolean} inLabelledByContext True when in the context of resolving a labelledBy\n\t * @param {Boolean} inControlContext True when in the context of textifying a widget\n\t * @return {string}\n\t */\n\taccessibleNameComputation = function (element, inLabelledByContext, inControlContext) {\n\t\t'use strict';\n\n\t\tvar returnText;\n\t\t// If the node was already checked or is null, skip\n\t\tif (element === null || (encounteredNodes.indexOf(element) !== -1)) {\n\t\t\treturn '';\n\n\t\t//Step 2a: Skip if the element is hidden, unless part of labelledby\n\t\t} else if(!inLabelledByContext && !dom.isVisible(element, true)) {\n\t\t\treturn '';\n\t\t}\n\n\t\tencounteredNodes.push(element);\n\t\tvar role = element.getAttribute('role');\n\n\t\t//Step 2b & 2c\n\t\treturnText = checkARIA(element, inLabelledByContext, inControlContext);\n\t\tif (nonEmptyText(returnText)) {\n\t\t\treturn returnText;\n\t\t}\n\n\t\t//Step 2d - native attribute or elements\n\t\treturnText = checkNative(element, inLabelledByContext, inControlContext);\n\t\tif (nonEmptyText(returnText)) {\n\t\t\treturn returnText;\n\t\t}\n\n\t\t//Step 2e\n\t\tif (inControlContext) {\n\t\t\treturnText = formValueText(element);\n\t\t\tif (nonEmptyText(returnText)) {\n\t\t\t\treturn returnText;\n\t\t\t}\n\t\t}\n\n\t\t//Step 2f\n\t\tif (!shouldNeverCheckSubtree(element) && (!role || aria.getRolesWithNameFromContents().indexOf(role) !== -1)) {\n\n\t\t\treturnText = getInnerText(element, inLabelledByContext, inControlContext);\n\n\t\t\tif (nonEmptyText(returnText)) {\n\t\t\t\treturn returnText;\n\t\t\t}\n\t\t}\n\n\t\t//Step 2g - if text node, return value (handled in getInnerText)\n\n\t\t//Step 2h\n\t\tif (element.hasAttribute('title')) {\n\t\t\treturn element.getAttribute('title');\n\t\t}\n\n\t\treturn '';\n\t};\n\n\treturn text.sanitize(accessibleNameComputation(element, inLabelledByContext));\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/text/label.js":"/*global text, dom, axe, aria */\n/**\n * Gets the visible text of a label for a given input\n * @see http://www.w3.org/WAI/PF/aria/roles#namecalculation\n * @param  {HTMLElement} node The input to test\n * @return {Mixed}      String of visible text, or `null` if no label is found\n */\ntext.label = function (node) {\n\tvar ref, candidate;\n\n\tcandidate = aria.label(node);\n\tif (candidate) {\n\t\treturn candidate;\n\t}\n\n\t// explicit label\n\tif (node.id) {\n\t\tref = document.querySelector('label[for=\"' + axe.utils.escapeSelector(node.id) + '\"]');\n\t\tcandidate = ref && text.visible(ref, true);\n\t\tif (candidate) {\n\t\t\treturn candidate;\n\t\t}\n\t}\n\n\tref = dom.findUp(node, 'label');\n\tcandidate = ref && text.visible(ref, true);\n\tif (candidate) {\n\t\treturn candidate;\n\t}\n\n\treturn null;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/text/sanitize.js":"/*global text */\ntext.sanitize = function (str) {\n\t'use strict';\n\treturn str\n\t\t.replace(/\\r\\n/g, '\\n')\n\t\t.replace(/\\u00A0/g, ' ')\n\t\t.replace(/[\\s]{2,}/g, ' ')\n\t\t.trim();\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/text/visible.js":"/*global text, dom */\n\ntext.visible = function (element, screenReader, noRecursing) {\n\t'use strict';\n\n\tvar index, child, nodeValue,\n\t\tchildNodes = element.childNodes,\n\t\tlength = childNodes.length,\n\t\tresult = '';\n\n\tfor (index = 0; index < length; index++) {\n\t\tchild = childNodes[index];\n\n\t\tif (child.nodeType === 3) {\n\t\t\tnodeValue = child.nodeValue;\n\t\t\tif (nodeValue && dom.isVisible(element, screenReader)) {\n\t\t\t\tresult += child.nodeValue;\n\t\t\t}\n\t\t} else if (!noRecursing) {\n\t\t\tresult += text.visible(child, screenReader);\n\t\t}\n\t}\n\n\treturn text.sanitize(result);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/utils/to-array.js":"/*global axe */\naxe.utils.toArray = function (thing) {\n\t'use strict';\n\treturn Array.prototype.slice.call(thing);\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/commons/utils/token-list.js":"/*global axe */\n\naxe.utils.tokenList = function (str) {\n\t'use strict';\n\n\treturn str.trim().replace(/\\s{2,}/g, ' ').split(' ');\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/base/audit.js":"/*global Rule, Check, RuleResult, commons: true */\n\nfunction getDefaultConfiguration(audit) {\n\t'use strict';\n\tvar config;\n\tif (audit) {\n\t\tconfig = axe.utils.clone(audit);\n\t\t// Commons are configured into axe like everything else,\n\t\t// however because things go funky if we have multiple commons objects\n\t\t// we're not using the copy of that.\n\t\tconfig.commons = audit.commons;\n\t} else {\n\t\tconfig = {};\n\t}\n\n\tconfig.reporter = config.reporter || null;\n\tconfig.rules = config.rules || [];\n\tconfig.checks = config.checks || [];\n\tconfig.data = Object.assign({\n\t\tchecks: {},\n\t\trules: {}\n\t}, config.data);\n\n\treturn config;\n}\n\nfunction unpackToObject(collection, audit, method) {\n\t'use strict';\n\n\tvar i, l;\n\tfor (i = 0, l = collection.length; i < l; i++) {\n\t\taudit[method](collection[i]);\n\t}\n}\n\n/**\n * Constructor which holds configured rules and information about the document under test\n */\nfunction Audit(audit) {\n\t// defaults\n\tthis.brand = 'axe';\n\tthis.application = 'axeAPI';\n\tthis.tagExclude = ['experimental'];\n\n\tthis.defaultConfig = audit;\n\tthis._init();\n}\n\n/**\n * Initializes the rules and checks\n */\nAudit.prototype._init = function () {\n\tvar audit = getDefaultConfiguration(this.defaultConfig);\n\n\taxe.commons = commons = audit.commons;\n\n\tthis.reporter = audit.reporter;\n\tthis.commands = {};\n\tthis.rules = [];\n\tthis.checks = {};\n\n\tunpackToObject(audit.rules, this, 'addRule');\n\tunpackToObject(audit.checks, this, 'addCheck');\n\n\tthis.data = {};\n\tthis.data.checks = (audit.data && audit.data.checks) || {};\n\tthis.data.rules = (audit.data && audit.data.rules) || {};\n\tthis.data.failureSummaries = (audit.data && audit.data.failureSummaries) || {};\n\n\tthis._constructHelpUrls(); // create default helpUrls\n};\n\n/**\n * Adds a new command to the audit\n */\n\nAudit.prototype.registerCommand = function (command) {\n\t'use strict';\n\tthis.commands[command.id] = command.callback;\n};\n\n/**\n * Adds a new rule to the Audit.  If a rule with specified ID already exists, it will be overridden\n * @param {Object} spec Rule specification object\n */\nAudit.prototype.addRule = function (spec) {\n\t'use strict';\n\n\tif (spec.metadata) {\n\t\tthis.data.rules[spec.id] = spec.metadata;\n\t}\n\n\tlet rule = this.getRule(spec.id);\n\tif (rule) {\n\t\trule.configure(spec);\n\t} else {\n\t\tthis.rules.push(new Rule(spec, this));\n\t}\n};\n\n/**\n * Adds a new check to the Audit.  If a Check with specified ID already exists, it will be\n * reconfigured\n *\n * @param {Object} spec Check specification object\n */\nAudit.prototype.addCheck = function (spec) {\n\t/*jshint evil:true */\n\t'use strict';\n\tlet metadata = spec.metadata;\n\n\tif (typeof metadata === 'object') {\n\t\tthis.data.checks[spec.id] = metadata;\n\t\t// Transform messages into functions:\n\t\tif (typeof metadata.messages === 'object') {\n\t\t\tObject.keys(metadata.messages)\n\t\t\t.filter( prop =>\n\t\t\t\tmetadata.messages.hasOwnProperty(prop) &&\n\t\t\t\ttypeof metadata.messages[prop] === 'string'\n\t\t\t).forEach( prop => {\n\t\t\t\tif (metadata.messages[prop].indexOf('function') === 0) {\n\t\t\t\t\tmetadata.messages[prop] = (new Function('return ' + metadata.messages[prop] + ';'))();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tif (this.checks[spec.id]) {\n\t\tthis.checks[spec.id].configure(spec);\n\t} else {\n\t\tthis.checks[spec.id] = new Check(spec);\n\t}\n};\n\n/**\n * Runs the Audit; which in turn should call `run` on each rule.\n * @async\n * @param  {Context}   context The scope definition/context for analysis (include/exclude)\n * @param  {Object}    options Options object to pass into rules and/or disable rules or checks\n * @param  {Function} fn       Callback function to fire when audit is complete\n */\nAudit.prototype.run = function (context, options, resolve, reject) {\n\t'use strict';\n\tthis.validateOptions(options);\n\n\tvar q = axe.utils.queue();\n\tthis.rules.forEach(function (rule) {\n\t\tif (axe.utils.ruleShouldRun(rule, context, options)) {\n\t\t\tif (options.performanceTimer) {\n\t\t\t\tvar markEnd = 'mark_rule_end_' + rule.id;\n\t\t\t\tvar markStart = 'mark_rule_start_' + rule.id;\n\t\t\t\taxe.utils.performanceTimer.mark(markStart);\n\t\t\t}\n\t\t\tq.defer(function (res, rej) {\n\t\t\t\trule.run(context, options, function(out) {\n\t\t\t\t\tif (options.performanceTimer) {\n\t\t\t\t\t\taxe.utils.performanceTimer.mark(markEnd);\n\t\t\t\t\t\taxe.utils.performanceTimer.measure('rule_'+rule.id, markStart, markEnd);\n\t\t\t\t\t}\n\t\t\t\t\tres(out);\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (!options.debug) {\n\t\t\t\t\t\tvar errResult = Object.assign(new RuleResult(rule), {\n\t\t\t\t\t\t\tresult: axe.constants.CANTTELL,\n\t\t\t\t\t\t\tdescription: 'An error occured while running this rule',\n\t\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\t\thelp: err.stack || err.message,\n\t\t\t\t\t\t\terror: err\n\t\t\t\t\t\t});\n\t\t\t\t\t\tres(errResult);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t});\n\tq.then(function (results) {\n\t\tresolve(results.filter(function (result) { return !!result; }));\n\t}).catch(reject);\n};\n\n/**\n * Runs Rule `after` post processing functions\n * @param  {Array} results  Array of RuleResults to postprocess\n * @param  {Mixed} options  Options object to pass into rules and/or disable rules or checks\n */\nAudit.prototype.after = function (results, options) {\n\t'use strict';\n\n\tvar rules = this.rules;\n\n\treturn results.map(function (ruleResult) {\n\t\tvar rule = axe.utils.findBy(rules, 'id', ruleResult.id);\n\n\t\treturn rule.after(ruleResult, options);\n\t});\n};\n\n/**\n * Get the rule with a given ID\n * @param  {string}\n * @return {Rule}\n */\nAudit.prototype.getRule = function (ruleId) {\n\treturn this.rules.find(rule => rule.id === ruleId);\n};\n\n/**\n * Ensure all rules that are expected to run exist\n * @throws {Error} If any tag or rule specified in options is unknown\n * @param  {Object} options  Options object\n * @return {Object}          Validated options object\n */\nAudit.prototype.validateOptions = function (options) {\n\t'use strict';\n\tvar audit = this;\n\n\t// Validate runOnly\n\tif (typeof options.runOnly === 'object') {\n\t\tvar only = options.runOnly;\n\n\t\t// Check if every value in options.runOnly is a known rule ID\n\t\tif (only.type === 'rule' && Array.isArray(only.value)) {\n\t\t\tonly.value.forEach(function (ruleId) {\n\t\t\t\tif (!audit.getRule(ruleId)) {\n\t\t\t\t\tthrow new Error('unknown rule `' + ruleId +  '` in options.runOnly');\n\t\t\t\t}\n\t\t\t});\n\n\t\t// Validate 'tags' (e.g. anything not 'rule')\n\t\t} else if (Array.isArray(only.value) && only.value.length > 0) {\n\t\t\tvar tags = [].concat(only.value);\n\n\t\t\taudit.rules.forEach(function (rule) {\n\t\t\t\tvar tagPos, i, l;\n\t\t\t\tif (!tags) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// Remove any known tag\n\t\t\t\tfor (i = 0, l = rule.tags.length; i < l; i++) {\n\t\t\t\t\ttagPos = tags.indexOf(rule.tags[i]);\n\t\t\t\t\tif (tagPos !== -1) {\n\t\t\t\t\t\ttags.splice(tagPos, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (tags.length !== 0) {\n\t\t\t\tthrow new Error('could not find tags `' + tags.join('`, `') + '`');\n\t\t\t}\n\t\t}\n\t}\n\n\tif (typeof options.rules === 'object') {\n\t\tObject.keys(options.rules)\n\t\t.forEach(function (ruleId) {\n\t\t\tif (!audit.getRule(ruleId)) {\n\t\t\t\tthrow new Error('unknown rule `' + ruleId +  '` in options.rules');\n\t\t\t}\n\t\t});\n\t}\n\n\treturn options;\n};\n\n/*\n * Updates the default options and then applies them\n * @param  {Mixed} options  Options object\n */\n\nAudit.prototype.setBranding = function (branding) {\n\t'use strict';\n\tlet previous = {\n\t\tbrand: this.brand,\n\t\tapplication: this.application\n\t};\n\tif (branding && branding.hasOwnProperty('brand') &&\n\t\tbranding.brand && typeof branding.brand === 'string') {\n\t\tthis.brand = branding.brand;\n\t}\n\tif (branding && branding.hasOwnProperty('application') &&\n\t\tbranding.application && typeof branding.application === 'string') {\n\t\tthis.application = branding.application;\n\t}\n\tthis._constructHelpUrls(previous);\n};\n\n/**\n * For all the rules, create the helpUrl and add it to the data for that rule\n */\nfunction getHelpUrl ({brand, application}, ruleId, version) {\n\treturn axe.constants.helpUrlBase + brand +\n\t\t'/' + ( version || axe.version.substring(0, axe.version.lastIndexOf('.'))) +\n\t\t'/' + ruleId + '?application=' + application;\n}\n\nAudit.prototype._constructHelpUrls = function (previous = null) {\n\tvar version = axe.version.substring(0, axe.version.lastIndexOf('.'));\n\tthis.rules.forEach(rule => {\n\t\tif (!this.data.rules[rule.id]) {\n\t\t\tthis.data.rules[rule.id] = {};\n\t\t}\n\t\tlet metaData = this.data.rules[rule.id];\n\t\tif (\n\t\t\ttypeof metaData.helpUrl !== 'string' ||\n\t\t\t(previous && metaData.helpUrl === getHelpUrl(previous, rule.id, version))\n\t\t) {\n\t\t\tmetaData.helpUrl = getHelpUrl(this, rule.id, version);\n\t\t}\n\t});\n};\n\n\n/**\n * Reset the default rules, checks and meta data\n */\n\n Audit.prototype.resetRulesAndChecks = function () {\n\t'use strict';\n \tthis._init();\n };\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/base/check.js":"/*global CheckResult */\n\nfunction createExecutionContext(spec) {\n\t/*jshint evil:true */\n\t'use strict';\n\tif (typeof spec === 'string') {\n\t\treturn new Function('return ' + spec + ';')();\n\t}\n\treturn spec;\n}\n\nfunction Check(spec) {\n\tif (spec) {\n\t\tthis.id = spec.id;\n\t\tthis.configure(spec);\n\t}\n}\n\n/**\n * Unique ID for the check.  Checks may be re-used, so there may be additional instances of checks\n * with the same ID.\n * @type {String}\n */\n// Check.prototype.id;\n\n/**\n * Free-form options that are passed as the second parameter to the `evaluate`\n * @type {Mixed}\n */\n// Check.prototype.options;\n\n/**\n * The actual code, accepts 2 parameters: node (the node under test), options (see this.options).\n * This function is run in the context of a checkHelper, which has the following methods\n * - `async()` - if called, the check is considered to be asynchronous; returns a callback function\n * - `data()` - free-form data object, associated to the `CheckResult` which is specific to each node\n * @type {Function}\n */\n// Check.prototype.evaluate;\n\n/**\n * Optional. Filter and/or modify checks for all nodes\n * @type {Function}\n */\n// Check.prototype.after;\n\n/**\n * enabled by default, if false, this check will not be included in the rule's evaluation\n * @type {Boolean}\n */\nCheck.prototype.enabled = true;\n\n\n/**\n * Run the check's evaluate function (call `this.evaluate(node, options)`)\n * @param  {HTMLElement} node  The node to test\n * @param  {Object} options    The options that override the defaults and provide additional\n *                             information for the check\n * @param  {Function} callback Function to fire when check is complete\n */\nCheck.prototype.run = function (node, options, resolve, reject) {\n\t'use strict';\n\toptions = options || {};\n\tvar enabled = options.hasOwnProperty('enabled') ? options.enabled : this.enabled,\n\t\tcheckOptions = options.options || this.options;\n\n\tif (enabled) {\n\t\tvar checkResult = new CheckResult(this);\n\t\tvar checkHelper = axe.utils.checkHelper(checkResult, resolve, reject);\n\t\tvar result;\n\n\t\ttry {\n\t\t\tresult = this.evaluate.call(checkHelper, node, checkOptions);\n\t\t} catch (e) {\n\t\t\treject(e);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!checkHelper.isAsync) {\n\t\t\tcheckResult.result = result;\n\t\t\tsetTimeout(function () {\n\t\t\t\tresolve(checkResult);\n\t\t\t}, 0);\n\t\t}\n\t} else {\n\t\tresolve(null);\n\t}\n};\n\n/**\n * Override a check's settings after construction to allow for changing options\n * without having to implement the entire check\n *\n * @param {Object} spec - the specification of the attributes to be changed\n */\n\nCheck.prototype.configure = function (spec) {\n\t['options', 'enabled']\n\t.filter( prop => spec.hasOwnProperty(prop) )\n\t.forEach( prop => this[prop] = spec[prop] );\n\n\t['evaluate', 'after']\n\t.filter( prop => spec.hasOwnProperty(prop) )\n\t.forEach( prop => this[prop] = createExecutionContext(spec[prop]) );\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/base/check-result.js":"/*exported CheckResult */\n\n/**\n * Constructor for the result of checks\n * @param {Check} check\n */\nfunction CheckResult(check) {\n\t'use strict';\n\n\t/**\n\t * ID of the check.  Unique in the context of a rule.\n\t * @type {String}\n\t */\n\tthis.id = check.id;\n\n\t/**\n\t * Any data passed by Check (by calling `this.data()`)\n\t * @type {Mixed}\n\t */\n\tthis.data = null;\n\n\t/**\n\t * Any node that is related to the Check, specified by calling `this.relatedNodes([HTMLElement...])` inside the Check\n\t * @type {Array}\n\t */\n\tthis.relatedNodes = [];\n\n\t/**\n\t * The return value of the Check's evaluate function\n\t * @type {Mixed}\n\t */\n\tthis.result = null;\n}\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/base/context.js":"/*exported Context */\n/*global isNodeInContext */\n/**\n * Pushes a unique frame onto `frames` array, filtering any hidden iframes\n * @private\n * @param  {Array} collection The array of unique frames that is being operated on\n * @param  {HTMLElement} frame   The frame to push onto Context\n */\nfunction pushUniqueFrame(collection, frame) {\n\t'use strict';\n\tif (axe.utils.isHidden(frame)) {\n\t\treturn;\n\t}\n\n\tvar fr = axe.utils.findBy(collection, 'node', frame);\n\n\tif (!fr) {\n\t\tcollection.push({\n\t\t\tnode: frame,\n\t\t\tinclude: [],\n\t\t\texclude: []\n\t\t});\n\t}\n\n}\n\n/**\n * Unshift selectors of matching iframes\n * @private\n * @param  {Context} context \t  The context object to operate on and assign to\n * @param  {String} type          The \"type\" of context, 'include' or 'exclude'\n * @param  {Array} selectorArray  Array of CSS selectors, each element represents a frame;\n * where the last element is the actual node\n */\nfunction pushUniqueFrameSelector(context, type, selectorArray) {\n\t'use strict';\n\n\tcontext.frames = context.frames || [];\n\n\tvar result, frame;\n\tvar frames = document.querySelectorAll(selectorArray.shift());\n\n\tframeloop:\n\tfor (var i = 0, l = frames.length; i < l; i++) {\n\t\tframe = frames[i];\n\t\tfor (var j = 0, l2 = context.frames.length; j < l2; j++) {\n\t\t\tif (context.frames[j].node === frame) {\n\t\t\t\tcontext.frames[j][type].push(selectorArray);\n\t\t\t\tbreak frameloop;\n\t\t\t}\n\t\t}\n\t\tresult = {\n\t\t\tnode: frame,\n\t\t\tinclude: [],\n\t\t\texclude: []\n\t\t};\n\n\t\tif (selectorArray) {\n\t\t\tresult[type].push(selectorArray);\n\t\t}\n\n\t\tcontext.frames.push(result);\n\t}\n}\n\n/**\n * Normalize the input of \"context\" so that many different methods of input are accepted\n * @private\n * @param  {Mixed} context  The configuration object passed to `Context`\n * @return {Object}         Normalized context spec to include both `include` and `exclude` arrays\n */\nfunction normalizeContext(context) {\n\t'use strict';\n\n\t// typeof NodeList.length in PhantomJS === function\n\tif (context && typeof context === 'object' || context instanceof NodeList) {\n\n\t\tif (context instanceof Node) {\n\t\t\treturn {\n\t\t\t\tinclude: [context],\n\t\t\t\texclude: []\n\t\t\t};\n\t\t}\n\n\t\tif (context.hasOwnProperty('include') || context.hasOwnProperty('exclude')) {\n\t\t\treturn {\n\t\t\t\tinclude: (context.include && +context.include.length) ? context.include : [document],\n\t\t\t\texclude: context.exclude || []\n\t\t\t};\n\t\t}\n\n\t\tif (context.length === +context.length) {\n\t\t\treturn {\n\t\t\t\tinclude: context,\n\t\t\t\texclude: []\n\t\t\t};\n\t\t}\n\t}\n\n\tif (typeof context === 'string') {\n\t\treturn {\n\t\t\tinclude: [context],\n\t\t\texclude: []\n\t\t};\n\t}\n\n\treturn {\n\t\tinclude: [document],\n\t\texclude: []\n\t};\n}\n\n/**\n * Finds frames in context, converts selectors to Element references and pushes unique frames\n * @private\n * @param  {Context} context The instance of Context to operate on\n * @param  {String} type     The \"type\" of thing to parse, \"include\" or \"exclude\"\n * @return {Array}           Parsed array of matching elements\n */\nfunction parseSelectorArray(context, type) {\n\t'use strict';\n\n\tvar item,\n\t\tresult = [];\n\tfor (var i = 0, l = context[type].length; i < l; i++) {\n\t\titem = context[type][i];\n\t\t// selector\n\t\tif (typeof item === 'string') {\n\t\t\tresult = result.concat(axe.utils.toArray(document.querySelectorAll(item)));\n\t\t\tbreak;\n\t\t} else if (item && item.length && !(item instanceof Node)) {\n\n\t\t\tif (item.length > 1) {\n\t\t\t\tpushUniqueFrameSelector(context, type, item);\n\t\t\t} else {\n\t\t\t\tresult = result.concat(axe.utils.toArray(document.querySelectorAll(item[0])));\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(item);\n\t\t}\n\t}\n\n\t// filter nulls\n\treturn result.filter(function (r) {\n\t\treturn r;\n\t});\n}\n\n\n/**\n * Check that the context, as well as each frame includes at least 1 element\n * @private\n * @param  {context} context\n * @return {Error}\n */\nfunction validateContext(context) {\n\t'use strict';\n\n\tif (context.include.length === 0) {\n\t\tif (context.frames.length === 0) {\n\t\t\tvar env = axe.utils.respondable.isInFrame() ? 'frame' : 'page';\n\t\t\treturn new Error('No elements found for include in ' + env + ' Context');\n\t\t}\n\t\tcontext.frames.forEach(function (frame, i) {\n\t\t\tif (frame.include.length === 0) {\n\t\t\t\treturn new Error('No elements found for include in Context of frame ' + i);\n\t\t\t}\n\t\t});\n\t}\n}\n\n\n/**\n * Holds context of includes, excludes and frames for analysis.\n *\n * @todo  clarify and sync changes to design doc\n * Context : {IncludeStrings} || {\n *   // defaults to document/all\n *   include: {IncludeStrings},\n *   exclude : {ExcludeStrings}\n * }\n *\n * IncludeStrings : [{CSSSelectorArray}] || Node\n * ExcludeStrings : [{CSSSelectorArray}]\n * `CSSSelectorArray` an Array of selector strings that addresses a Node in a multi-frame document. All addresses\n * are in this form regardless of whether the document contains any frames.To evaluate the selectors to\n * find the node referenced by the array, evaluate the selectors in-order, starting in window.top. If N\n * is the length of the array, then the first N-1 selectors should result in an iframe and the last\n * selector should result in the specific node.\n *\n * @param {Object} spec Configuration or \"specification\" object\n */\nfunction Context(spec) {\n\t'use strict';\n\tvar self = this;\n\n\tthis.frames = [];\n\tthis.initiator = (spec && typeof spec.initiator === 'boolean') ? spec.initiator : true;\n\tthis.page = false;\n\n\tspec = normalizeContext(spec);\n\tthis.exclude = spec.exclude;\n\tthis.include = spec.include;\n\n\tthis.include = parseSelectorArray(this, 'include');\n\tthis.exclude = parseSelectorArray(this, 'exclude');\n\n\taxe.utils.select('frame, iframe', this).forEach(function (frame) {\n\t\tif (isNodeInContext(frame, self)) {\n\t\t\tpushUniqueFrame(self.frames, frame);\n\t\t}\n\t});\n\n\tif (this.include.length === 1 && this.include[0] === document) {\n\t\tthis.page = true;\n\t}\n\n\t// Validate outside of a frame\n\tvar err = validateContext(this);\n\tif (err instanceof Error) {\n\t\tthrow err;\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/base/rule.js":"/*global RuleResult, createExecutionContext, SupportError */\n\nfunction Rule(spec, parentAudit) {\n\t/*jshint maxcomplexity:11 */\n\t'use strict';\n\n\tthis._audit = parentAudit;\n\n\t/**\n\t * The code, or string ID of the rule\n\t * @type {String}\n\t */\n\tthis.id = spec.id;\n\n\t/**\n\t * Selector that this rule applies to\n\t * @type {String}\n\t */\n\tthis.selector = spec.selector || '*';\n\n\t/**\n\t * Whether to exclude hiddden elements form analysis.  Defaults to true.\n\t * @type {Boolean}\n\t */\n\tthis.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n\n\t/**\n\t * Flag to enable or disable rule\n\t * @type {Boolean}\n\t */\n\tthis.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n\n\t/**\n\t * Denotes if the rule should be run if Context is not an entire page AND whether\n\t * the Rule should be satisified regardless of Node\n\t * @type {Boolean}\n\t */\n\tthis.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n\n\t/**\n\t * Checks that any may return true to satisfy rule\n\t * @type {Array}\n\t */\n\tthis.any = spec.any || [];\n\n\t/**\n\t * Checks that must all return true to satisfy rule\n\t * @type {Array}\n\t */\n\tthis.all = spec.all || [];\n\n\t/**\n\t * Checks that none may return true to satisfy rule\n\t * @type {Array}\n\t */\n\tthis.none = spec.none || [];\n\n\t/**\n\t * Tags associated to this rule\n\t * @type {Array}\n\t */\n\tthis.tags = spec.tags || [];\n\n\tif (spec.matches) {\n\t\t/**\n\t\t * Optional function to test if rule should be run against a node, overrides Rule#matches\n\t\t * @type {Function}\n\t\t */\n\t\tthis.matches = createExecutionContext(spec.matches);\n\t}\n\n}\n\n/**\n * Optionally test each node against a `matches` function to determine if the rule should run against\n * a given node.  Defaults to `true`.\n * @return {Boolean}    Whether the rule should run\n */\nRule.prototype.matches = function () {\n\t'use strict';\n\n\treturn true;\n};\n\n/**\n * Selects `HTMLElement`s based on configured selector\n * @param  {Context} context The resolved Context object\n * @return {Array}           All matching `HTMLElement`s\n */\nRule.prototype.gather = function (context) {\n\t'use strict';\n\tvar elements = axe.utils.select(this.selector, context);\n\tif (this.excludeHidden) {\n\t\treturn elements.filter(function (element) {\n\t\t\treturn !axe.utils.isHidden(element);\n\t\t});\n\t}\n\treturn elements;\n};\n\nRule.prototype.runChecks = function (type, node, options, resolve, reject) {\n\t'use strict';\n\n\tvar self = this;\n\tvar checkQueue = axe.utils.queue();\n\tthis[type].forEach(function (c) {\n\t\tvar check = self._audit.checks[c.id || c];\n\t\tvar option = axe.utils.getCheckOption(check, self.id, options);\n\t\tcheckQueue.defer(function (res, rej) {\n\t\t\tcheck.run(node, option, res, rej);\n\t\t});\n\t});\n\n\tcheckQueue.then(function (results) {\n\t\tresults = results.filter(function (check) {\n\t\t\treturn check;\n\t\t});\n\t\tresolve({ type: type, results: results });\n\t}).catch(reject);\n\n};\n\n/**\n * Runs the Rule's `evaluate` function\n * @param  {Context}   context  The resolved Context object\n * @param  {Mixed}   options  Options specific to this rule\n * @param  {Function} callback Function to call when evaluate is complete; receives a RuleResult instance\n */\nRule.prototype.run = function (context, options, resolve, reject) {\n\tconst q = axe.utils.queue();\n\tconst ruleResult = new RuleResult(this);\n\tlet nodes;\n\n\ttry {\n\t\t// Matches throws an error when it lacks support for document methods\n\t\tnodes = this.gather(context)\n\t\t\t\t\t.filter(node => this.matches(node));\n\t} catch (error) {\n\t\t// Exit the rule execution if matches fails\n\t\treject(new SupportError({cause: error, ruleId: this.id}));\n\t\treturn;\n\t}\n\n\tif (options.performanceTimer) {\n\t\taxe.log('gather (', nodes.length, '):', axe.utils.performanceTimer.timeElapsed()+'ms');\n\t}\n\n\tnodes.forEach(node => {\n\t\tq.defer((resolveNode, rejectNode) => {\n\t\t\tvar checkQueue = axe.utils.queue();\n\t\t\tcheckQueue.defer((res, rej) => {\n\t\t\t\tthis.runChecks('any', node, options, res, rej);\n\t\t\t});\n\t\t\tcheckQueue.defer((res, rej) => {\n\t\t\t\tthis.runChecks('all', node, options, res, rej);\n\t\t\t});\n\t\t\tcheckQueue.defer((res, rej) => {\n\t\t\t\tthis.runChecks('none', node, options, res, rej);\n\t\t\t});\n\n\t\t\tcheckQueue.then(function (results) {\n\t\t\t\tif (results.length) {\n\t\t\t\t\tvar hasResults = false, result = {};\n\t\t\t\t\tresults.forEach(function (r) {\n\t\t\t\t\t\tvar res = r.results.filter(function (result) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t});\n\t\t\t\t\t\tresult[r.type] = res;\n\t\t\t\t\t\tif (res.length) {\n\t\t\t\t\t\t\thasResults = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif (hasResults) {\n\t\t\t\t\t\tresult.node = new axe.utils.DqElement(node);\n\t\t\t\t\t\truleResult.nodes.push(result);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tresolveNode();\n\t\t\t}).catch(err => rejectNode(err));\n\t\t});\n\t});\n\n\tq.then(() => resolve(ruleResult))\n\t.catch(error => reject(error));\n};\n\n/**\n * Iterates the rule's Checks looking for ones that have an after function\n * @private\n * @param  {Rule} rule The rule to check for after checks\n * @return {Array}      Checks that have an after function\n */\nfunction findAfterChecks(rule) {\n\t'use strict';\n\n\treturn axe.utils.getAllChecks(rule).map(function (c) {\n\t\tvar check = rule._audit.checks[c.id || c];\n\t\treturn (check && typeof check.after === 'function') ? check : null;\n\t}).filter(Boolean);\n}\n\n/**\n * Finds and collates all results for a given Check on a specific Rule\n * @private\n * @param  {Array} nodes RuleResult#nodes; array of 'detail' objects\n * @param  {String} checkID The ID of the Check to find\n * @return {Array}         Matching CheckResults\n */\nfunction findCheckResults(nodes, checkID) {\n\t'use strict';\n\n\tvar checkResults = [];\n\tnodes.forEach(function (nodeResult) {\n\t\tvar checks = axe.utils.getAllChecks(nodeResult);\n\t\tchecks.forEach(function (checkResult) {\n\t\t\tif (checkResult.id === checkID) {\n\t\t\t\tcheckResults.push(checkResult);\n\t\t\t}\n\t\t});\n\t});\n\treturn checkResults;\n}\n\nfunction filterChecks(checks) {\n\t'use strict';\n\n\treturn checks.filter(function (check) {\n\t\treturn check.filtered !== true;\n\t});\n}\n\nfunction sanitizeNodes(result) {\n\t'use strict';\n\tvar checkTypes = ['any', 'all', 'none'];\n\n\tvar nodes = result.nodes.filter(function (detail) {\n\t\tvar length = 0;\n\t\tcheckTypes.forEach(function (type) {\n\t\t\tdetail[type] = filterChecks(detail[type]);\n\t\t\tlength += detail[type].length;\n\t\t});\n\t\treturn length > 0;\n\t});\n\n\tif (result.pageLevel && nodes.length) {\n\t\tnodes = [nodes.reduce(function (a, b) {\n\t\t\tif (a) {\n\t\t\t\tcheckTypes.forEach(function (type) {\n\t\t\t\t\ta[type].push.apply(a[type], b[type]);\n\t\t\t\t});\n\t\t\t\treturn a;\n\t\t\t}\n\t\t})];\n\t}\n\treturn nodes;\n}\n\n/**\n * Runs all of the Rule's Check#after methods\n * @param  {RuleResult} result  The \"pre-after\" RuleResult\n * @param  {Mixed} options Options specific to the rule\n * @return {RuleResult}         The RuleResult as filtered by after functions\n */\nRule.prototype.after = function (result, options) {\n\t'use strict';\n\n\tvar afterChecks = findAfterChecks(this);\n\tvar ruleID = this.id;\n\tafterChecks.forEach(function (check) {\n\t\tvar beforeResults = findCheckResults(result.nodes, check.id);\n\t\tvar option = axe.utils.getCheckOption(check, ruleID, options);\n\n\t\tvar afterResults = check.after(beforeResults, option);\n\t\tbeforeResults.forEach(function (item) {\n\t\t\tif (afterResults.indexOf(item) === -1) {\n\t\t\t\titem.filtered = true;\n\t\t\t}\n\t\t});\n\t});\n\n\tresult.nodes = sanitizeNodes(result);\n\treturn result;\n};\n\n/**\n * Reconfigure a rule after it has been added\n * @param {Object} spec - the attributes to be reconfigured\n */\nRule.prototype.configure = function (spec) {\n\t/*jshint maxcomplexity:14 */\n\t/*jshint maxstatements:20 */\n\t/*jshint evil:true */\n\t'use strict';\n\n\tif (spec.hasOwnProperty('selector')) {\n\t\tthis.selector = spec.selector;\n\t}\n\n\tif (spec.hasOwnProperty('excludeHidden')) {\n\t\tthis.excludeHidden = typeof spec.excludeHidden === 'boolean' ? spec.excludeHidden : true;\n\t}\n\n\tif (spec.hasOwnProperty('enabled')) {\n\t\tthis.enabled = typeof spec.enabled === 'boolean' ? spec.enabled : true;\n\t}\n\n\tif (spec.hasOwnProperty('pageLevel')) {\n\t\tthis.pageLevel = typeof spec.pageLevel === 'boolean' ? spec.pageLevel : false;\n\t}\n\n\tif (spec.hasOwnProperty('any')) {\n\t\tthis.any = spec.any;\n\t}\n\n\tif (spec.hasOwnProperty('all')) {\n\t\tthis.all = spec.all;\n\t}\n\n\tif (spec.hasOwnProperty('none')) {\n\t\tthis.none = spec.none;\n\t}\n\n\tif (spec.hasOwnProperty('tags')) {\n\t\tthis.tags = spec.tags;\n\t}\n\n\tif (spec.hasOwnProperty('matches')) {\n\t\tif (typeof spec.matches === 'string') {\n\t\t\tthis.matches = new Function('return ' + spec.matches + ';')();\n\t\t} else {\n\t\t\tthis.matches = spec.matches;\n\t\t}\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/base/rule-result.js":"/*exported RuleResult */\n\n/**\n * Constructor for the result of Rules\n * @param {Rule} rule\n */\nfunction RuleResult(rule) {\n\t'use strict';\n\n\t/**\n\t * The ID of the Rule whom this result belongs to\n\t * @type {String}\n\t */\n\tthis.id = rule.id;\n\n\t/**\n\t * The calculated result of the Rule, either PASS, FAIL or NA\n\t * @type {String}\n\t */\n\tthis.result = axe.constants.NA;\n\n\t/**\n\t * Whether the Rule is a \"pageLevel\" rule\n\t * @type {Boolean}\n\t */\n\tthis.pageLevel = rule.pageLevel;\n\n\t/**\n\t * Impact of the violation\n\t * @type {String}  Plain-english impact or null if rule passes\n\t */\n\tthis.impact = null;\n\n\t/**\n\t * Holds information regarding nodes and individual CheckResults\n\t * @type {Array}\n\t */\n\tthis.nodes = [];\n}\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/a11y-check.js":"/**\n * Starts analysis on the current document and its subframes\n * \n * @param  {Object}   context  The `Context` specification object @see Context\n * @param  {Array}    options  Optional RuleOptions\n * @param  {Function} callback The function to invoke when analysis is complete; receives an array of `RuleResult`s\n */\naxe.a11yCheck = function (context, options, callback) {\n\t'use strict';\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tif (!options || typeof options !== 'object') {\n\t\toptions = {};\n\t}\n\n\tvar audit = axe._audit;\n\tif (!audit) {\n\t\tthrow new Error('No audit configured');\n\t}\n\toptions.reporter = options.reporter || audit.reporter || 'v2';\n\n\tif (options.performanceTimer) {\n\t\taxe.utils.performanceTimer.start();\n\t}\n\n\tvar reporter = axe.getReporter(options.reporter);\n\taxe._runRules(context, options, function (results) {\n\t\tvar res = reporter(results, options, callback);\n\t\tif (res !== undefined) {\n\t\t\tif (options.performanceTimer) {\n\t\t\t\taxe.utils.performanceTimer.end();\n\t\t\t}\n\t\t\tcallback(res);\n\t\t}\n\t}, axe.log);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/cleanup-plugins.js":"\r\nfunction cleanupPlugins(resolve, reject) {\r\n  'use strict';\r\n  if (!axe._audit) {\r\n    throw new Error('No audit configured');\r\n  }\r\n\r\n  var q = axe.utils.queue();\r\n  // If a plugin fails it's cleanup, we still want the others to run\r\n  var cleanupErrors = [];\r\n\r\n  Object.keys(axe.plugins).forEach(function (key) {\r\n    q.defer(function (res) {\r\n      var rej = function (err) {\r\n        cleanupErrors.push(err);\r\n        res();\r\n      };\r\n      try {\r\n        axe.plugins[key].cleanup(res, rej);\r\n      } catch(err) {\r\n        rej(err);\r\n      }\r\n    });\r\n  });\r\n\r\n  axe.utils.toArray(document.querySelectorAll('frame, iframe')).forEach(function (frame) {\r\n    q.defer(function (res, rej) {\r\n      return axe.utils.sendCommandToFrame(frame, {\r\n        command: 'cleanup-plugin'\r\n      }, res, rej);\r\n    });\r\n  });\r\n\r\n  q.then(function (results) {\r\n    if (cleanupErrors.length === 0) {\r\n      resolve(results);\r\n    } else {\r\n      reject(cleanupErrors);\r\n    }\r\n  })\r\n  .catch(reject);\r\n}\r\naxe.cleanup = cleanupPlugins;\r\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/configure.js":"/* global reporters */\nfunction configureChecksRulesAndBranding(spec) {\n\t'use strict';\n\tvar audit;\n\n\taudit = axe._audit;\n\tif (!audit) {\n\t\tthrow new Error('No audit configured');\n\t}\n\n\tif (spec.reporter && (typeof spec.reporter === 'function' || reporters[spec.reporter])) {\n\t\taudit.reporter = spec.reporter;\n\t}\n\n\tif (spec.checks) {\n\t\tspec.checks.forEach(function (check) {\n\t\t\taudit.addCheck(check);\n\t\t});\n\t}\n\n\tif (spec.rules) {\n\t\tspec.rules.forEach(function (rule) {\n\t\t\taudit.addRule(rule);\n\t\t});\n\t}\n\n\tif (typeof spec.branding !== 'undefined') {\n\t\taudit.setBranding(spec.branding);\n\t} else {\n\t\taudit._constructHelpUrls();\n\t}\n\n\tif (spec.tagExclude) {\n\t\taudit.tagExclude = spec.tagExclude;\n\t}\n}\n\naxe.configure = configureChecksRulesAndBranding;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/get-rules.js":"/**\n * Searches and returns rules that contain a tag in the list of tags.\n * @param  {Array}   tags  Optional array of tags\n * @return {Array}  Array of rules\n */\naxe.getRules = function(tags) {\n\t'use strict';\n\n\ttags = tags || [];\n\tvar matchingRules = !tags.length ? axe._audit.rules : axe._audit.rules.filter(function(item) {\n\t\treturn !!tags.filter(function(tag) {\n\t\t\treturn item.tags.indexOf(tag) !== -1;\n\t\t}).length;\n\t});\n\n\tvar ruleData = axe._audit.data.rules || {};\n\treturn matchingRules.map(function(matchingRule) {\n\t\tvar rd = ruleData[matchingRule.id] || {};\n\t\treturn {\n\t\t\truleId: matchingRule.id,\n\t\t\tdescription: rd.description,\n\t\t\thelp: rd.help,\n\t\t\thelpUrl: rd.helpUrl,\n\t\t\ttags: matchingRule.tags,\n\t\t};\n\t});\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/load.js":"/*global Audit, runRules, cleanupPlugins */\nfunction runCommand(data, keepalive, callback) {\n\t'use strict';\n\tvar resolve = callback;\n\tvar reject = function (err) {\n\t\tif (err instanceof Error === false) {\n\t\t\terr = new Error(err);\n\t\t}\n\t\tcallback(err);\n\t};\n\n\tvar context = (data && data.context) || {};\n\tif (context.include && !context.include.length) {\n\t\tcontext.include = [document];\n\t}\n\tvar options = (data && data.options) || {};\n\n\tswitch (data.command) {\n\t\tcase 'rules':\n\t\t\treturn runRules(context, options, resolve, reject);\n\t\tcase 'cleanup-plugin':\n\t\t\treturn cleanupPlugins(resolve, reject);\n\t\tdefault:\n\t\t\t// go through the registered commands\n\t\t\tif (axe._audit && axe._audit.commands && axe._audit.commands[data.command]) {\n\t\t\t\treturn axe._audit.commands[data.command](data, callback);\n\t\t\t}\n\t}\n}\n\n/**\n * Sets up Rules, Messages and default options for Checks, must be invoked before attempting analysis\n * @param  {Object} audit The \"audit specification\" object\n * @private\n */\naxe._load = function(audit) {\n\t'use strict';\n\n\taxe.utils.respondable.subscribe('axe.ping', function(data, keepalive, respond) {\n\t\trespond({\n\t\t\taxe: true\n\t\t});\n\t});\n\n\taxe.utils.respondable.subscribe('axe.start', runCommand);\n\n\taxe._audit = new Audit(audit);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/plugins.js":"var axe = axe || {};\naxe.plugins = {};\n\nfunction Plugin(spec) {\n\t'use strict';\n\tthis._run = spec.run;\n\tthis._collect = spec.collect;\n\tthis._registry = {};\n\tspec.commands.forEach(function (command) {\n\t\taxe._audit.registerCommand(command);\n\t});\n}\n\nPlugin.prototype.run = function () {\n\t'use strict';\n\treturn this._run.apply(this, arguments);\n};\n\nPlugin.prototype.collect = function () {\n\t'use strict';\n\treturn this._collect.apply(this, arguments);\n};\n\nPlugin.prototype.cleanup = function (done) {\n\t'use strict';\n\tvar q = axe.utils.queue();\n\tvar that = this;\n\tObject.keys(this._registry).forEach(function (key) {\n\t\tq.defer(function (done) {\n\t\t\tthat._registry[key].cleanup(done);\n\t\t});\n\t});\n\tq.then(function () {\n\t\tdone();\n\t});\n};\n\nPlugin.prototype.add = function (impl) {\n\t'use strict';\n\tthis._registry[impl.id] = impl;\n};\n\naxe.registerPlugin = function (plugin) {\n\t'use strict';\n\taxe.plugins[plugin.id] = new Plugin(plugin);\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/reporter.js":"var reporters = {};\nvar defaultReporter;\n\naxe.getReporter = function(reporter) {\n\t'use strict';\n\tif (typeof reporter === 'string' && reporters[reporter]) {\n\t\treturn reporters[reporter];\n\t}\n\n\tif (typeof reporter === 'function') {\n\t\treturn reporter;\n\t}\n\n\treturn defaultReporter;\n};\n\naxe.addReporter = function registerReporter(name, cb, isDefault) {\n\t'use strict';\n\n\treporters[name] = cb;\n\tif (isDefault) {\n\t\tdefaultReporter = cb;\n\t}\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/reset.js":"/*global axe */\nfunction resetConfiguration() {\n\t'use strict';\n\tvar audit = axe._audit;\n\n\tif (!audit) {\n\t\tthrow new Error('No audit configured');\n\t}\n\taudit.resetRulesAndChecks();\n}\n\naxe.reset = resetConfiguration;","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/run.js":"/* global Promise */\n\nfunction isContext(potential) {\n\t'use strict';\n\tswitch (true) {\n\t\tcase (typeof potential === 'string'):\n\t\tcase (Array.isArray(potential)):\n\t\tcase Node && potential instanceof Node:\n\t\tcase NodeList && potential instanceof NodeList:\n\t\t\treturn true;\n\n\t\tcase typeof potential !== 'object':\n\t\t\treturn false;\n\n\t\tcase potential.include !== undefined:\n\t\tcase potential.exclude !== undefined:\n\t\tcase typeof potential.length === 'number':\n\t\t\treturn true;\n\n\t\tdefault:\n\t\t\treturn false;\n\t}\n}\n\nvar noop = function () {};\n\n\n/**\n * Normalize the optional params of axe.run()\n * @param  {object}   context\n * @param  {object}   options\n * @param  {Function} callback\n * @return {object}            With 3 keys: context, options, callback\n */\nfunction normalizeRunParams(context, options, callback) {\n\t'use strict';\n\tlet typeErr = new TypeError('axe.run arguments are invalid');\n\n\t// Determine the context\n\tif (!isContext(context)) {\n\t\tif (callback !== undefined) {\n\t\t\t// Either context is invalid or there are too many params\n\t\t\tthrow typeErr;\n\t\t}\n\t\t// Set default and shift one over\n\t\tcallback = options;\n\t\toptions = context;\n\t\tcontext = document;\n\t}\n\n\t// Determine the options\n\tif (typeof options !== 'object') {\n\t\tif (callback !== undefined) {\n\t\t\t// Either options is invalid or there are too many params\n\t\t\tthrow typeErr;\n\t\t}\n\t\t// Set default and shift one over\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\t// Set the callback or noop;\n\tif (typeof callback !== 'function' && callback !== undefined) {\n\t\tthrow typeErr;\n\t}\n\n\treturn {\n\t\tcontext: context,\n\t\toptions: options,\n\t\tcallback: callback || noop\n\t};\n}\n\n\n/**\n * Runs a number of rules against the provided HTML page and returns the\n * resulting issue list\n *\n * @param  {Object}   context  (optional) Defines the scope of the analysis\n * @param  {Object}   options  (optional) Set of options passed into rules or checks\n * @param  {Function} callback (optional) The callback when axe is done, given 2 params:\n *                             - Error    If any errors occured, otherwise null\n *                             - Results  The results object / array, or undefined on error\n * @return {Promise}           Resolves with the axe results. Only available when natively supported\n */\naxe.run = function (context, options, callback) {\n\t'use strict';\n\tif (!axe._audit) {\n\t\tthrow new Error('No audit configured');\n\t}\n\n\tlet args = normalizeRunParams(context, options, callback);\n\tcontext = args.context;\n\toptions = args.options;\n\tcallback = args.callback;\n\n\t// set defaults:\n\toptions.reporter = options.reporter || axe._audit.reporter || 'v1';\n\n\tif (options.performanceTimer) {\n\t\taxe.utils.performanceTimer.start();\n\t}\n\tlet p;\n\tlet reject = noop;\n\tlet resolve = noop;\n\n\tif (window.Promise && callback === noop) {\n\t\tp = new Promise(function (_resolve, _reject) {\n\t\t\treject = _reject;\n\t\t\tresolve = _resolve;\n\t\t});\n\t}\n\n\taxe._runRules(context, options, function (rawResults) {\n\t\tlet respond = function (results) {\n\t\t\ttry {\n\t\t\t\tcallback(null, results);\n\t\t\t} catch(e) {\n\t\t\t\taxe.log(e);\n\t\t\t}\n\t\t\tresolve(results);\n\t\t};\n\t\tif (options.performanceTimer) {\n\t\t\taxe.utils.performanceTimer.end();\n\t\t}\n\n\t\ttry {\n\t\t\tlet reporter = axe.getReporter(options.reporter);\n\t\t\tlet results = reporter(rawResults, options, respond);\n\t\t\tif (results !== undefined) {\n\t\t\t\trespond(results);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tcallback(err);\n\t\t\treject(err);\n\t\t}\n\t}, function (err) {\n\t\tcallback(err);\n\t\treject(err);\n\t});\n\n\treturn p;\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/public/run-rules.js":"/*global Context */\n/*exported runRules */\n\n/**\n * Starts analysis on the current document and its subframes\n * @private\n * @param  {Object}   context  The `Context` specification object @see Context\n * @param  {Array}    options  Optional RuleOptions\n * @param  {Function} callback The function to invoke when analysis is complete; receives an array of `RuleResult`s\n */\nfunction runRules(context, options, resolve, reject) {\n\t'use strict';\n\ttry {\n\t\tcontext = new Context(context);\n\t} catch (e) {\n\t\treturn reject(e);\n\t}\n\n\tvar q = axe.utils.queue();\n\tvar audit = axe._audit;\n\n\tif (options.performanceTimer) {\n\t\taxe.utils.performanceTimer.auditStart();\n\t}\n\n\tif (context.frames.length && options.iframes !== false) {\n\t\tq.defer(function (res, rej) {\n\t\t\taxe.utils.collectResultsFromFrames(context, options, 'rules', null, res, rej);\n\t\t});\n\t}\n\tq.defer(function (res, rej) {\n\t\taudit.run(context, options, res, rej);\n\t});\n\tq.then(function (data) {\n\t\ttry {\n\t\t\tif (options.performanceTimer) {\n\t\t\t\taxe.utils.performanceTimer.auditEnd();\n\t\t\t}\n\n\t\t\t// Add wrapper object so that we may use the same \"merge\" function for results from inside and outside frames\n\t\t\tvar results = axe.utils.mergeResults(data.map(function (d) {\n\t\t\t\treturn {\n\t\t\t\t\tresults: d\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\t// after should only run once, so ensure we are in the top level window\n\t\t\tif (context.initiator) {\n\t\t\t\tresults = audit.after(results, options);\n\n\t\t\t\tresults.forEach(axe.utils.publishMetaData);\n\t\t\t\tresults = results.map(axe.utils.finalizeRuleResult);\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tresolve(results);\n\t\t\t} catch(e) {\n\t\t\t\taxe.log(e);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\treject(e);\n\t\t}\n\t}).catch(reject);\n}\n\naxe._runRules = runRules;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/reporters/na.js":"/*global helpers */\n\naxe.addReporter('na', function (results, options, callback) {\n\t'use strict';\n\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\n\tvar out = helpers.processAggregate(results, options);\n\tcallback({\n\t\tviolations: out.violations,\n\t\tpasses: out.passes,\n\t\tincomplete: out.incomplete,\n\t\tinapplicable: out.inapplicable,\n\t\ttimestamp: out.timestamp,\n\t\turl: out.url\n\t});\n});\n\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/reporters/no-passes.js":"/*global helpers */\naxe.addReporter('no-passes', function (results, options, callback) {\n\t'use strict';\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\tvar out = helpers.processAggregate(results, options);\n\n\tcallback({\n\t\tviolations: out.violations,\n\t\ttimestamp: out.timestamp,\n\t\turl: out.url\n\t});\n\n});\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/reporters/raw.js":"axe.addReporter('raw', function (results, options, callback) {\n\t'use strict';\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\tcallback(results);\n});\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/reporters/v1.js":"/*global helpers */\n\naxe.addReporter('v1', function (results, options, callback) {\n\t'use strict';\n\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\tvar out = helpers.processAggregate(results, options);\n\n\tout.violations.forEach((result) => result.nodes.forEach((nodeResult) => {\n\t\tnodeResult.failureSummary = helpers.failureSummary(nodeResult);\n\t}));\n\n\tcallback({\n\t\tviolations: out.violations,\n\t\tpasses: out.passes,\n\t\tincomplete: out.incomplete,\n\t\tinapplicable: out.inapplicable,\n\t\ttimestamp: out.timestamp,\n\t\turl: out.url\n\t});\n\n});\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/reporters/v2.js":"/*global helpers */\n\n\naxe.addReporter('v2', function (results, options, callback) {\n\t'use strict';\n\tif (typeof options === 'function') {\n\t\tcallback = options;\n\t\toptions = {};\n\t}\n\tvar out = helpers.processAggregate(results, options);\n\tcallback({\n\t\tviolations: out.violations,\n\t\tpasses: out.passes,\n\t\tincomplete: out.incomplete,\n\t\tinapplicable: out.inapplicable,\n\t\ttimestamp: out.timestamp,\n\t\turl: out.url\n\t});\n\n}, true);\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/aggregateChecks.js":"let checkMap = [];\ncheckMap[axe.constants.PASS_PRIO] = true;\ncheckMap[axe.constants.CANTTELL_PRIO] = null;\ncheckMap[axe.constants.FAIL_PRIO] = false;\n\n\n/**\n * Map over the any / all / none properties\n */\nlet checkTypes = ['any', 'all', 'none'];\nfunction anyAllNone(obj, functor) {\n\treturn checkTypes.reduce(function (out, type) {\n\t\tout[type] = (obj[type] || []).map((val) => functor(val, type));\n\t\treturn out;\n\t}, {});\n}\n\n\naxe.utils.aggregateChecks = function (nodeResOriginal) {\n\t// Create a copy\n\tlet nodeResult = Object.assign({}, nodeResOriginal);\n\n\t// map each result value to a priority\n\tanyAllNone(nodeResult, function (check, type) {\n\t\tlet i = checkMap.indexOf(check.result);\n\t\t// default to cantTell\n\t\tcheck.priority = i !== -1 ? i : axe.constants.CANTTELL_PRIO;\n\n\t\tif (type === 'none') {\n\t\t\t// For none, reverse the outcome\n\t\t\tcheck.priority = 4 - check.priority;\n\t\t}\n\t});\n\n\t// Find the result with the highest priority\n\tlet priorities = anyAllNone(nodeResult, (c) => c.priority);\n\tnodeResult.priority = Math.max(\n\t\tpriorities.all.reduce((a, b) => Math.max(a,b), 0),\n\t\tpriorities.none.reduce((a, b) => Math.max(a,b), 0),\n\t\t// get the lowest passing of 'any' defaulting\n\t\t// to 0 by wrapping around 4 to 0 (inapplicable)\n\t\tpriorities.any.reduce((a, b) => Math.min(a,b), 4) % 4\n\t);\n\n\t// Of each type, filter out all results not matching the final priority\n\tlet impacts = [];\n\tcheckTypes.forEach((type) => {\n\t\tnodeResult[type] = nodeResult[type].filter((check) => {\n\t\t\treturn check.priority === nodeResult.priority;\n\t\t});\n\t\tnodeResult[type].forEach((check) => impacts.push(check.impact));\n\t});\n\n\n\t// for failed nodes, define the impact\n\tif (nodeResult.priority === axe.constants.FAIL_PRIO) {\n\t\tnodeResult.impact = axe.utils.aggregate(axe.constants.impact, impacts);\n\t} else {\n\t\tnodeResult.impact = null;\n\t}\n\n\t// Delete the old result and priority properties\n\tanyAllNone(nodeResult, (c) => {\n\t\tdelete c.result;\n\t\tdelete c.priority;\n\t});\n\n\t// Convert the index to a result string value\n\tnodeResult.result = axe.constants.results[nodeResult.priority];\n\tdelete nodeResult.priority;\n\n\treturn nodeResult;\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/aggregate.js":"/**\n * From a list of values, find the one with the greatest weight according to\n * the supplied map\n * @param  {object} params Contains 3 properties:\n * - map: a map indicating the order of values to run in\n *        example: ['small', 'medium', 'large']\n * - values: Array of values to take the highest from\n * - initial: optional starting value\n */\naxe.utils.aggregate = function (map, values, initial) {\n\tvalues = values.slice();\n\tif (initial) {\n\t\tvalues.push(initial);\n\t}\n\n\tvar sorting = values\n\t.map((val) => map.indexOf(val))\n\t.sort(); // Stupid NodeJS array.sort functor doesn't work!!\n\n\treturn map[sorting.pop()];\n};\n\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/aggregateResult.js":"function copyToGroup(resultObject, subResult, group) {\n\tvar resultCopy = Object.assign({}, subResult);\n\tresultCopy.nodes = (resultCopy[group] || []).concat();\n\taxe.constants.resultGroups.forEach((group) => {\n\t\tdelete resultCopy[group];\n\t});\n\tresultObject[group].push(resultCopy);\n}\n\n/**\n * Calculates the result of a Rule based on its types and the result of its child Checks\n * @param  {RuleResult} ruleResult The RuleResult to calculate the result of\n */\naxe.utils.aggregateResult = function (results) {\n\tlet resultObject = {};\n\n\t// Create an array for each type\n\taxe.constants.resultGroups\n\t.forEach((groupName) => resultObject[groupName] = []);\n\n\t// Fill the array with nodes\n\tresults.forEach(function (subResult) {\n\t\tif (subResult.error) {\n\t\t\tcopyToGroup(resultObject, subResult, axe.constants.CANTTELL_GROUP);\n\n\t\t} else if (subResult.result === axe.constants.NA) {\n\t\t\tcopyToGroup(resultObject, subResult, axe.constants.NA_GROUP);\n\n\t\t} else {\n\t\t\taxe.constants.resultGroups\n\t\t\t.forEach(function (group) {\n\t\t\t\tif (Array.isArray(subResult[group]) && subResult[group].length > 0\t) {\n\t\t\t\t\tcopyToGroup(resultObject, subResult, group);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t});\n\treturn resultObject;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/aggregateRule.js":"(function () {\n\n/**\n * Calculates the result of a Rule based on its types and the result of its child Checks\n * @param  {RuleResult} ruleResult The RuleResult to calculate the result of\n */\naxe.utils.aggregateRule = function (subResults) {\n\tlet ruleResult = {};\n\n\t// For each node, retrieve the result and impact\n\tsubResults = subResults.map(function (subResult) {\n\t\t// Known result\n\t\tif (subResult.any && subResult.all && subResult.none) {\n\t\t\treturn axe.utils.aggregateChecks(subResult);\n\n\t\t} else if (Array.isArray(subResult.node)) {\n\t\t\treturn axe.utils.finalizeRuleResult(subResult);\n\n\t\t} else {\n\t\t\tthrow new TypeError('Invalid Result type');\n\t\t}\n\t});\n\n\t// Aggregate the result\n\tlet resultList = subResults.map((node) => node.result);\n\truleResult.result = axe.utils.aggregate(axe.constants.results, resultList, ruleResult.result);\n\n\t// Create an array for each type\n\taxe.constants.resultGroups\n\t.forEach((group) => ruleResult[group] = []);\n\n\t// Fill the array with nodes\n\tsubResults.forEach(function (subResult) {\n\t\tvar groupName = axe.constants.resultGroupMap[subResult.result];\n\t\truleResult[groupName].push(subResult);\n\t});\n\n\t// Take the highest impact of failed rules\n\tvar failGroup = axe.constants.FAIL_GROUP;\n\tif (ruleResult[failGroup].length > 0) {\n\t\t// Get the impact of all violations\n\t\tlet impactList = ruleResult[failGroup]\n\t\t.map((failure) => failure.impact);\n\n\t\truleResult.impact = axe.utils.aggregate(axe.constants.impact, impactList) || null;\n\t} else {\n\t\truleResult.impact = null;\n\t}\n\n\treturn ruleResult;\n};\n\n}());","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/are-styles-set.js":"/* global axe*/\n\nfunction areStylesSet(el, styles, stopAt) {\n\t'use strict';\n\tvar styl = window.getComputedStyle(el, null);\n\tvar set = false;\n\tif (!styl) {\n\t\treturn false;\n\t}\n\tstyles.forEach(function (att) {\n\t\tif (styl.getPropertyValue(att.property) === att.value) {\n\t\t\tset = true;\n\t\t}\n\t});\n\tif (set) {\n\t\treturn true;\n\t}\n\tif (el.nodeName.toUpperCase() === stopAt.toUpperCase() || !el.parentNode) {\n\t\treturn false;\n\t}\n\treturn areStylesSet(el.parentNode, styles, stopAt);\n}\n\naxe.utils.areStylesSet = areStylesSet;\n\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/check-helper.js":"/**\n * Helper to denote which checks are asyncronous and provide callbacks and pass data back to the CheckResult\n * @param  {CheckResult}   checkResult The target object\n * @param  {Function} callback    The callback to expose when `this.async()` is called\n * @return {Object}               Bound to `this` for a check's fn\n */\naxe.utils.checkHelper = function checkHelper(checkResult, resolve, reject) {\n\t'use strict';\n\n\treturn {\n\t\tisAsync: false,\n\t\tasync: function () {\n\t\t\tthis.isAsync = true;\n\t\t\treturn function (result) {\n\t\t\t\tif (result instanceof Error === false) {\n\t\t\t\t\tcheckResult.value = result;\n\t\t\t\t\tresolve(checkResult);\n\t\t\t\t} else {\n\t\t\t\t\treject(result);\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\tdata: function (data) {\n\t\t\tcheckResult.data = data;\n\t\t},\n\t\trelatedNodes: function (nodes) {\n\t\t\tnodes = nodes instanceof Node ? [nodes] : axe.utils.toArray(nodes);\n\t\t\tcheckResult.relatedNodes = nodes.map(function (element) {\n\t\t\t\treturn new axe.utils.DqElement(element);\n\t\t\t});\n\t\t}\n\t};\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/clone.js":"/**\n * Deeply clones an object or array\n * @param  {Mixed} obj The object/array to clone\n * @return {Mixed}     A clone of the initial object or array\n */\naxe.utils.clone = function (obj) {\n\t'use strict';\n\tvar index, length,\n\t\tout = obj;\n\n\tif (obj !== null && typeof obj === 'object') {\n\t\tif (Array.isArray(obj)) {\n\t\t\tout = [];\n\t\t\tfor (index = 0, length = obj.length; index < length; index++) {\n\t\t\t\tout[index] = axe.utils.clone(obj[index]);\n\t\t\t}\n\t\t} else {\n\t\t\tout = {};\n\t\t\t// jshint forin: false\n\t\t\tfor (index in obj) {\n\t\t\t\tout[index] = axe.utils.clone(obj[index]);\n\t\t\t}\n\t\t}\n\t}\n\treturn out;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/collect-results-from-frames.js":"\nfunction err(message, node) {\n\t'use strict';\n\treturn new Error(message + ': ' + axe.utils.getSelector(node));\n}\n\n/**\n * Sends a command to an instance of axe in the specified frame\n * @param  {Element}  node       The frame element to send the message to\n * @param  {Object}   parameters Parameters to pass to the frame\n * @param  {Function} callback   Function to call when results from the frame has returned\n */\naxe.utils.sendCommandToFrame = function(node, parameters, resolve, reject) {\n\t'use strict';\n\n\tvar win = node.contentWindow;\n\tif (!win) {\n\t\taxe.log('Frame does not have a content window', node);\n\t\tresolve(null);\n\t\treturn;\n\t}\n\n\t// give the frame .5s to respond to 'axe.ping', else log failed response\n\tvar timeout = setTimeout(function() {\n\t\t// This double timeout is important for allowing iframes to respond\n\t\t// DO NOT REMOVE\n\t\ttimeout = setTimeout(function() {\n\t\t\tvar errMsg = err('No response from frame', node);\n\t\t\tif (!parameters.debug) {\n\t\t\t\taxe.log(errMsg);\n\t\t\t\tresolve(null);\n\t\t\t} else {\n\t\t\t\treject(errMsg);\n\t\t\t}\n\t\t}, 0);\n\t}, 500);\n\n\t// send 'axe.ping' to the frame\n\taxe.utils.respondable(win, 'axe.ping', null, undefined, function() {\n\t\tclearTimeout(timeout);\n\n\t\t// Give aXe 30s to respond to 'axe.start'\n\t\ttimeout = setTimeout(function() {\n\t\t\treject(err('Axe in frame timed out', node));\n\t\t}, 30000);\n\n\t\t// send 'axe.start' and send the callback if it responded\n\t\taxe.utils.respondable(win, 'axe.start', parameters, undefined, function(data) {\n\t\t\tclearTimeout(timeout);\n\t\t\tif (data instanceof Error === false) {\n\t\t\t\tresolve(data);\n\t\t\t} else {\n\t\t\t\treject(data);\n\t\t\t}\n\t\t});\n\t});\n\n};\n\n\n/**\n * Sends a message to axe running in frames to start analysis and collate results (via `mergeResults`)\n * @private\n * @param  {Context}  context   The resolved Context object\n * @param  {Object}   options   Options object (as passed to `runRules`)\n * @param  {string}   command   Command sent to all frames\n * @param  {Array}    parameter Array of values to be passed along side the command\n * @param  {Function} callback  Function to call when results from all frames have returned\n */\nfunction collectResultsFromFrames(context, options, command, parameter, resolve, reject) {\n\t'use strict';\n\n\tvar q = axe.utils.queue();\n\tvar frames = context.frames;\n\n\t// Tell each axe running in each frame to collect results\n\tframes.forEach(function (frame) {\n\t\tvar params = {\n\t\t\toptions: options,\n\t\t\tcommand: command,\n\t\t\tparameter: parameter,\n\t\t\tcontext: {\n\t\t\t\tinitiator: false,\n\t\t\t\tpage: context.page,\n\t\t\t\tinclude: frame.include || [],\n\t\t\t\texclude: frame.exclude || []\n\t\t\t}\n\t\t};\n\n\t\tq.defer(function(res, rej) {\n\t\t\tvar node = frame.node;\n\t\t\taxe.utils.sendCommandToFrame(node, params, function(data) {\n\t\t\t\tif (data) {\n\t\t\t\t\treturn res({\n\t\t\t\t\t\tresults: data,\n\t\t\t\t\t\tframeElement: node,\n\t\t\t\t\t\tframe: axe.utils.getSelector(node)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tres(null);\n\t\t\t}, rej);\n\t\t});\n\t});\n\n\t// Combine results from all frames and give it back\n\tq.then(function(data) {\n\t\tresolve(axe.utils.mergeResults(data));\n\t}).catch(reject);\n}\n\naxe.utils.collectResultsFromFrames = collectResultsFromFrames;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/contains.js":"\n/**\n * Wrapper for Node#contains; PhantomJS does not support Node#contains and erroneously reports that it does\n * @param  {HTMLElement} node      The candidate container node\n * @param  {HTMLElement} otherNode The node to test is contained by `node`\n * @return {Boolean}           Whether `node` contains `otherNode`\n */\naxe.utils.contains = function (node, otherNode) {\n\t//jshint bitwise: false\n\t'use strict';\n\n\tif (typeof node.contains === 'function') {\n\t\treturn node.contains(otherNode);\n\t}\n\n\treturn !!(node.compareDocumentPosition(otherNode) & 16);\n\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/dq-element.js":"/*exported DqElement */\n\nfunction truncate(str, maxLength) {\n\t'use strict';\n\n\tmaxLength = maxLength || 300;\n\n\tif (str.length > maxLength) {\n\t\tvar index = str.indexOf('>');\n\t\tstr = str.substring(0, index + 1);\n\t}\n\n\treturn str;\n}\n\nfunction getSource (element) {\n\t'use strict';\n\n\tvar source = element.outerHTML;\n\tif (!source && typeof XMLSerializer === 'function') {\n\t\tsource = new XMLSerializer().serializeToString(element);\n\t}\n\treturn truncate(source || '');\n}\n\n/**\n * \"Serialized\" `HTMLElement`. It will calculate the CSS selector,\n * grab the source (outerHTML) and offer an array for storing frame paths\n * @param {HTMLElement} element The element to serialize\n * @param {Object} spec Properties to use in place of the element when instantiated on Elements from other frames\n */\nfunction DqElement(element, spec) {\n\t'use strict';\n\t\n\tthis._fromFrame = !!spec;\n\n\tthis.spec = spec || {};\n\n\t/**\n\t * The generated HTML source code of the element\n\t * @type {String}\n\t */\n\tthis.source = this.spec.source !== undefined ? this.spec.source : getSource(element);\n\n\t/**\n\t * The element which this object is based off or the containing frame, used for sorting.\n\t * Excluded in toJSON method.\n\t * @type {HTMLElement}\n\t */\n\tthis._element = element;\n}\n\nDqElement.prototype = {\n\t/**\n\t * A unique CSS selector for the element\n\t * @return {String}\n\t */\n\tget selector() {\n\t\treturn this.spec.selector || [axe.utils.getSelector(this.element)];\n\t},\n\n\t/**\n\t * Xpath to the element\n\t * @return {String}\n\t */\n\tget xpath() {\n\t\treturn this.spec.xpath || [axe.utils.getXpath(this.element)];\n\t},\n\t\n\t/**\t\n\t * Direct reference to the `HTMLElement` wrapped by this `DQElement`.\n\t */\n\tget element() {\n\t\treturn this._element;\n\t},\n\n\tget fromFrame() {\n\t\treturn this._fromFrame;\n\t},\n\n\ttoJSON: function() {\n\t\t'use strict';\n\t\treturn {\n\t\t\tselector: this.selector,\n\t\t\tsource: this.source,\n\t\t\txpath: this.xpath\n\t\t};\n\t}\n};\n\nDqElement.fromFrame = function (node, frame) {\n    node.selector.unshift(frame.selector);\n    node.xpath.unshift(frame.xpath);\n    return new axe.utils.DqElement(frame.element, node);\n};\n\naxe.utils.DqElement = DqElement;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/element-matches.js":"/**\n * Polyfill for Element#matches\n * @param {HTMLElement} node The element to test\n * @param {String} selector The selector to test element against\n * @return {Boolean}\n */\naxe.utils.matchesSelector = (function () {\n\t'use strict';\n\n\tvar method;\n\n\tfunction getMethod(win) {\n\n\t\tvar index, candidate,\n\t\t\telProto = win.Element.prototype,\n\t\t\tcandidates = ['matches', 'matchesSelector', 'mozMatchesSelector', 'webkitMatchesSelector', 'msMatchesSelector'],\n\t\t\tlength = candidates.length;\n\n\t\tfor (index = 0; index < length; index++) {\n\t\t\tcandidate = candidates[index];\n\t\t\tif (elProto[candidate]) {\n\t\t\t\treturn candidate;\n\t\t\t}\n\t\t}\n\t}\n\n\n\treturn function (node, selector) {\n\n\t\tif (!method || !node[method]) {\n\t\t\tmethod = getMethod(node.ownerDocument.defaultView);\n\t\t}\n\n\t\treturn node[method](selector);\n\t};\n}());\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/escape-selector.js":"/**\n * Escapes a property value of a CSS selector\n * @see https://github.com/mathiasbynens/CSS.escape/\n * @see http://dev.w3.org/csswg/cssom/#serialize-an-identifier\n * @param  {String} value The piece of the selector to escape\n * @return {String}        The escaped selector\n */\naxe.utils.escapeSelector = function (value) {\n\t'use strict';\n\t/*jshint bitwise: true, eqeqeq: false, maxcomplexity: 14, maxstatements: 23, onevar: false, -W041: false */\n\tvar string = String(value);\n\tvar length = string.length;\n\tvar index = -1;\n\tvar codeUnit;\n\tvar result = '';\n\tvar firstCodeUnit = string.charCodeAt(0);\n\twhile (++index < length) {\n\t\tcodeUnit = string.charCodeAt(index);\n\t\t// Note: there’s no need to special-case astral symbols, surrogate\n\t\t// pairs, or lone surrogates.\n\n\t\t// If the character is NULL (U+0000), then throw an\n\t\t// `InvalidCharacterError` exception and terminate these steps.\n\t\tif (codeUnit == 0x0000) {\n\t\t\tthrow new Error('INVALID_CHARACTER_ERR');\n\t\t}\n\n\t\tif (\n\t\t\t// If the character is in the range [\\1-\\1F] (U+0001 to U+001F) or\n\t\t\t// [\\7F-\\9F] (U+007F to U+009F), […]\n\t\t\t(codeUnit >= 0x0001 && codeUnit <= 0x001F) ||\n\t\t\t(codeUnit >= 0x007F && codeUnit <= 0x009F) ||\n\t\t\t// If the character is the first character and is in the range [0-9]\n\t\t\t// (U+0030 to U+0039), […]\n\t\t\t(index == 0 && codeUnit >= 0x0030 && codeUnit <= 0x0039) ||\n\t\t\t// If the character is the second character and is in the range [0-9]\n\t\t\t// (U+0030 to U+0039) and the first character is a `-` (U+002D), […]\n\t\t\t(index == 1 && codeUnit >= 0x0030 && codeUnit <= 0x0039 && firstCodeUnit == 0x002D)\n\t\t) {\n\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character-as-code-point\n\t\t\tresult += '\\\\' + codeUnit.toString(16) + ' ';\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If the character is the second character and is `-` (U+002D) and the\n\t\t// first character is `-` as well, […]\n\t\tif (index == 1 && codeUnit == 0x002D && firstCodeUnit == 0x002D) {\n\t\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character\n\t\t\tresult += '\\\\' + string.charAt(index);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// If the character is not handled by one of the above rules and is\n\t\t// greater than or equal to U+0080, is `-` (U+002D) or `_` (U+005F), or\n\t\t// is in one of the ranges [0-9] (U+0030 to U+0039), [A-Z] (U+0041 to\n\t\t// U+005A), or [a-z] (U+0061 to U+007A), […]\n\t\tif (\n\t\t\tcodeUnit >= 0x0080 ||\n\t\t\tcodeUnit == 0x002D ||\n\t\t\tcodeUnit == 0x005F ||\n\t\t\tcodeUnit >= 0x0030 && codeUnit <= 0x0039 ||\n\t\t\tcodeUnit >= 0x0041 && codeUnit <= 0x005A ||\n\t\t\tcodeUnit >= 0x0061 && codeUnit <= 0x007A\n\t\t) {\n\t\t\t// the character itself\n\t\t\tresult += string.charAt(index);\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Otherwise, the escaped character.\n\t\t// http://dev.w3.org/csswg/cssom/#escape-a-character\n\t\tresult += '\\\\' + string.charAt(index);\n\n\t}\n\treturn result;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/extend-meta-data.js":"\n/**\n * Extends metadata onto result object and executes any functions\n * @param  {Object} to   The target of the extend\n * @param  {Object} from Metadata to extend\n */\naxe.utils.extendMetaData = function (to, from) {\n\tObject.assign(to, from);\n\tObject.keys(from).filter( prop => typeof from[prop] === 'function' )\n\t.forEach( prop => {\n\t\tto[prop] = null;\n\t\ttry {\n\t\t\tto[prop] = from[prop](to);\n\t\t} catch(e) { }\n\t});\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/finalize-result.js":"/**\n * Process rule results, grouping them by outcome\n * @param ruleResult {object}\n * @return {object}\n */\naxe.utils.finalizeRuleResult = function (ruleResult) {\n\tObject.assign(ruleResult, axe.utils.aggregateRule(ruleResult.nodes));\n\tdelete ruleResult.nodes;\n\n\treturn ruleResult;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/find-by.js":"\n/**\n * Iterates an array of objects looking for a property with a specific value\n * @param  {Array} array  The array of objects to iterate\n * @param  {String} key   The property name to test against\n * @param  {Mixed} value  The value to find\n * @return {Object}       The first matching object or `undefined` if no match\n */\naxe.utils.findBy = function (array, key, value) {\n\tif (Array.isArray(array)) {\n\t\treturn array.find( obj => typeof obj === 'object' && obj[key] === value );\n\t}\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/get-all-checks.js":"\n/**\n * Gets all Checks (or CheckResults) for a given Rule or RuleResult\n * @param {RuleResult|Rule} rule\n */\naxe.utils.getAllChecks = function getAllChecks(object) {\n\t'use strict';\n\tvar result = [];\n\treturn result.concat(object.any || []).concat(object.all || []).concat(object.none || []);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/get-check-option.js":"\n/**\n * Determines which CheckOption to use, either defined on the rule options, global check options or the check itself\n * @param  {Check} check    The Check object\n * @param  {String} ruleID  The ID of the rule\n * @param  {Object} options Options object as passed to main API\n * @return {Object}         The resolved object with `options` and `enabled` keys\n */\naxe.utils.getCheckOption = function (check, ruleID, options) {\n\t'use strict';\n\tvar ruleCheckOption = ((options.rules && options.rules[ruleID] || {}).checks || {})[check.id];\n\tvar checkOption = (options.checks || {})[check.id];\n\n\tvar enabled = check.enabled;\n\tvar opts = check.options;\n\n\tif (checkOption) {\n\t\tif (checkOption.hasOwnProperty('enabled')) {\n\t\t\tenabled = checkOption.enabled;\n\t\t}\n\t\tif (checkOption.hasOwnProperty('options')) {\n\t\t\topts = checkOption.options;\n\t\t}\n\n\t}\n\n\tif (ruleCheckOption) {\n\t\tif (ruleCheckOption.hasOwnProperty('enabled')) {\n\t\t\tenabled = ruleCheckOption.enabled;\n\t\t}\n\t\tif (ruleCheckOption.hasOwnProperty('options')) {\n\t\t\topts = ruleCheckOption.options;\n\t\t}\n\t}\n\n\treturn {\n\t\tenabled: enabled,\n\t\toptions: opts\n\t};\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/get-selector.js":"/**\n * Gets the index of element siblings that have the same nodeName\n * Intended for use with the CSS psuedo-class `:nth-of-type()` and xpath node index\n * @param  {HTMLElement} element The element to test\n * @return {Number}         The number of preceeding siblings with the same nodeName\n * @private\n */\nfunction nthOfType(element) {\n\t'use strict';\n\n\tvar index = 1,\n\t\ttype = element.nodeName.toUpperCase();\n\n\t/*jshint boss:true */\n\telement = element.previousElementSibling;\n\twhile (element) {\n\t\tif (element.nodeName.toUpperCase() === type) {\n\t\t\tindex++;\n\t\t}\n\t\telement = element.previousElementSibling;\n\t}\n\n\treturn index;\n}\n\n/**\n * Checks if an element has siblings with the same selector\n * @param  {HTMLElement} node     The element to test\n * @param  {String} selector The CSS selector to test\n * @return {Boolean}          Whether any of element's siblings matches selector\n * @private\n */\nfunction siblingsHaveSameSelector(node, selector) {\n\t'use strict';\n\n\tvar index, sibling,\n\t\tsiblings = node.parentNode.children;\n\n\tif (!siblings) {\n\t\treturn false;\n\t}\n\n\tvar length = siblings.length;\n\n\tfor (index = 0; index < length; index++) {\n\t\tsibling = siblings[index];\n\t\tif (sibling !== node && axe.utils.matchesSelector(sibling, selector)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\n\n/**\n * Gets a unique CSS selector\n * @param  {HTMLElement} node The element to get the selector for\n * @return {String}      Unique CSS selector for the node\n */\naxe.utils.getSelector = function getSelector(node) {\n\t//jshint maxstatements: 21\n\t'use strict';\n\n\tfunction escape(p) {\n\t\treturn axe.utils.escapeSelector(p);\n\t}\n\n\tvar parts = [], part;\n\n\twhile (node.parentNode) {\n\t\tpart = '';\n\n\t\tif (node.id && document.querySelectorAll('#' + axe.utils.escapeSelector(node.id)).length === 1) {\n\t\t\tparts.unshift('#' + axe.utils.escapeSelector(node.id));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (node.className && typeof node.className === 'string') {\n\t\t\tpart = '.' + node.className.trim().split(/\\s+/).map(escape).join('.');\n\t\t\tif (part === '.' || siblingsHaveSameSelector(node, part)) {\n\t\t\t\tpart = '';\n\t\t\t}\n\t\t}\n\n\t\tif (!part) {\n\t\t\tpart = axe.utils.escapeSelector(node.nodeName).toLowerCase();\n\t\t\tif (part === 'html' || part === 'body') {\n\t\t\t\tparts.unshift(part);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (siblingsHaveSameSelector(node, part)) {\n\t\t\t\tpart += ':nth-of-type(' + nthOfType(node) + ')';\n\t\t\t}\n\n\t\t}\n\n\t\tparts.unshift(part);\n\n\t\tnode = node.parentNode;\n\t}\n\n\treturn parts.join(' > ');\n\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/get-xpath.js":"/*global axe */\n\n//jshint maxstatements: false, maxcomplexity: false\nfunction getXPathArray(node, path) {\n\tvar sibling, count;\n\t// Gets an XPath for an element which describes its hierarchical location.\n\tif(!node) {\n\t\treturn [];\n\t}\n\tif (!path && node.nodeType === 9) {\n\t\t// special case for when we are called and give the document itself as the starting node\n\t\tpath = [{\n\t\t\tstr: 'html'\n\t\t}];\n\t\treturn path;\n\t}\n\tpath = path || [];\n\tif (node.parentNode && node.parentNode !== node) {\n\t\tpath = getXPathArray(node.parentNode, path);\n\t}\n\n\tif (node.previousSibling) {\n\t\tcount = 1;\n\t\tsibling = node.previousSibling;\n\t\tdo {\n\t\t\tif(sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tsibling = sibling.previousSibling;\n\t\t}\n\t\twhile (sibling);\n\t\tif(count === 1) {\n\t\t\tcount = null;\n\t\t}\n\t} else if (node.nextSibling) {\n\n\t\tsibling = node.nextSibling;\n\t\tdo {\n\t\t\tif(sibling.nodeType === 1 && sibling.nodeName === node.nodeName) {\n\t\t\t\tcount = 1;\n\t\t\t\tsibling = null;\n\t\t\t} else {\n\t\t\t\tcount = null;\n\t\t\t\tsibling = sibling.previousSibling;\n\t\t\t}\n\t\t} while (sibling);\n\t}\n\n\tif(node.nodeType === 1) {\n\t\tvar element = {};\n\t\telement.str = node.nodeName.toLowerCase();\n\t\t// add the id and the count so we can construct robust versions of the xpath\n\t\tif(node.getAttribute && node.getAttribute('id') &&\n\t\t\tnode.ownerDocument.querySelectorAll('#' + axe.utils.escapeSelector(node.id)).length === 1) {\n\n\t\t\telement.id = node.getAttribute('id');\n\t\t}\n\t\tif(count > 1) {\n\t\t\telement.count = count;\n\t\t}\n\t\tpath.push(element);\n\t}\n\treturn path;\n}\n\n// Robust is intended to allow xpaths to be robust to changes in the HTML structure of the page\n// This means always use the id when present\n// Non robust means always use the count (i.e. the exact position of the element)\n// Ironically this is a bit of a misnomer because in very, very dynamic pages (e.g. where ids are generated on the fly)\n// the non-ribust Xpaths will work whereas the robust ones will not work\nfunction xpathToString(xpathArray) {\n\treturn xpathArray.reduce((str, elm) => \t{\n\t\tif(elm.id) {\n\t\t\treturn `/${elm.str}[@id='${elm.id}']`;\n\n\t\t} else {\n\t\t\treturn str + `/${elm.str}` + (elm.count > 0 ? `[${elm.count}]` : '');\n\t\t}\n\t}, '');\n}\n\naxe.utils.getXpath = function getXpath(node) {\n\tvar xpathArray = getXPathArray(node);\n\treturn xpathToString(xpathArray);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/inject-style.js":"/*exported injectStyle */\n/*global axe*/\n\nvar styleSheet;\nfunction injectStyle(style) {\n\t'use strict';\n\n\tif (styleSheet && styleSheet.parentNode) {\n\t\t// append the style to the existing sheet\n\t\tif (styleSheet.styleSheet === undefined) { // Not old IE\n\t\t\tstyleSheet.appendChild(document.createTextNode(style));\n\t\t} else {\n\t\t\tstyleSheet.styleSheet.cssText += style;\n\t\t}\n\t\treturn styleSheet;\n\t}\n\tif (!style) {\n\t\treturn;\n\t}\n\n\tvar head = document.head || document.getElementsByTagName('head')[0];\n\tstyleSheet = document.createElement('style');\n\tstyleSheet.type = 'text/css';\n\n\tif (styleSheet.styleSheet === undefined) { // Not old IE\n\t\tstyleSheet.appendChild(document.createTextNode(style));\n\t} else {\n\t\tstyleSheet.styleSheet.cssText = style;\n\t}\n\n\thead.appendChild(styleSheet);\n\n\treturn styleSheet;\n}\n\naxe.utils.injectStyle = injectStyle;\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/is-hidden.js":"\n\n/**\n * Determine whether an element is visible\n *\n * @param {HTMLElement} el The HTMLElement\n * @return {Boolean} The element's visibilty status\n */\naxe.utils.isHidden = function isHidden(el, recursed) {\n\t'use strict';\n\n\t// 9 === Node.DOCUMENT\n\tif (el.nodeType === 9) {\n\t\treturn false;\n\t}\n\n\tvar style = window.getComputedStyle(el, null);\n\n\tif (!style || (!el.parentNode || (style.getPropertyValue('display') === 'none' ||\n\n\t\t\t(!recursed &&\n\t\t\t\t// visibility is only accurate on the first element\n\t\t\t\t(style.getPropertyValue('visibility') === 'hidden')) ||\n\n\t\t\t(el.getAttribute('aria-hidden') === 'true')))) {\n\n\t\treturn true;\n\t}\n\n\treturn axe.utils.isHidden(el.parentNode, true);\n\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/merge-results.js":"\n/**\n* Adds the owning frame's CSS selector onto each instance of DqElement\n* @private\n* @param  {Array} resultSet `nodes` array on a `RuleResult`\n* @param  {HTMLElement} frameElement  The frame element\n* @param  {String} frameSelector     Unique CSS selector for the frame\n*/\nfunction pushFrame(resultSet, frameElement, frameSelector) {\n  'use strict';\n  var frameXpath = axe.utils.getXpath(frameElement);\n  var frameSpec = {\n    element: frameElement,\n    selector: frameSelector,\n    xpath: frameXpath\n  };\n\n  resultSet.forEach(function (res) {\n    res.node = axe.utils.DqElement.fromFrame(res.node, frameSpec);\n\n    var checks = axe.utils.getAllChecks(res);\n    if (checks.length) {\n      checks.forEach(function (check) {\n        check.relatedNodes = check.relatedNodes.map(\n          (node) => axe.utils.DqElement.fromFrame(node, frameSpec)\n        );\n      });\n    }\n  });\n}\n\n/**\n* Adds `to` to `from` and then re-sorts by DOM order\n* @private\n* @param  {Array} target  `nodes` array on a `RuleResult`\n* @param  {Array} to   `nodes` array on a `RuleResult`\n* @return {Array}      The merged and sorted result\n*/\nfunction spliceNodes(target, to) {\n  'use strict';\n\n  var firstFromFrame = to[0].node,\n  sorterResult, t;\n  for (var i = 0, l = target.length; i < l; i++) {\n    t = target[i].node;\n    sorterResult = axe.utils.nodeSorter(t.element, firstFromFrame.element);\n    if (sorterResult > 0 || (sorterResult === 0 && firstFromFrame.selector.length < t.selector.length)) {\n      target.splice.apply(target, [i, 0].concat(to));\n      return;\n    }\n  }\n\n  target.push.apply(target, to);\n}\n\nfunction normalizeResult(result) {\n  'use strict';\n\n  if (!result || !result.results) {\n    return null;\n  }\n\n  if (!Array.isArray(result.results)) {\n    return [result.results];\n  }\n\n  if (!result.results.length) {\n    return null;\n  }\n\n  return result.results;\n\n}\n\n/**\n* Merges one or more RuleResults (possibly from different frames) into one RuleResult\n* @private\n* @param  {Array} frameResults  Array of objects including the RuleResults as `results` and frame as `frame`\n* @return {Array}              The merged RuleResults; should only have one result per rule\n*/\naxe.utils.mergeResults = function mergeResults(frameResults) {\n  'use strict';\n  var result = [];\n  frameResults.forEach(function (frameResult) {\n    var results = normalizeResult(frameResult);\n    if (!results || !results.length) {\n      return;\n    }\n\n    results.forEach(function (ruleResult) {\n      if (ruleResult.nodes && frameResult.frame) {\n        pushFrame(ruleResult.nodes, frameResult.frameElement, frameResult.frame);\n      }\n\n      var res = axe.utils.findBy(result, 'id', ruleResult.id);\n      if (!res) {\n        result.push(ruleResult);\n      } else {\n        if (ruleResult.nodes.length) {\n          spliceNodes(res.nodes, ruleResult.nodes);\n        }\n      }\n    });\n  });\n  return result;\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/node-sorter.js":"/**\n * Array#sort callback to sort nodes by DOM order\n * @private\n * @param  {Node} a\n * @param  {Node} b\n * @return {Integer}   @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Sort\n */\naxe.utils.nodeSorter = function nodeSorter(a, b) {\n\t/*jshint bitwise: false */\n\n\t'use strict';\n\n\tif (a === b) {\n\t\treturn 0;\n\t}\n\n\tif (a.compareDocumentPosition(b) & 4) { // a before b\n\t\treturn -1;\n\t}\n\n\treturn 1; // b before a\n\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/performance-timer.js":"/*global utils, axe */\n\n/**\n * Performance measuring utility shimming the User Timing API\n *\n * https://www.html5rocks.com/en/tutorials/webperformance/usertiming/\n * http://caniuse.com/#search=User%20Timing\n *\n */\nutils.performanceTimer = (function () {\n\t'use strict';\n\n\t/**\n\t * Get a time/date object using performance.now() if supported\n\t * @return {DOMTimeStamp}\n\t */\n\tfunction now() {\n\t\tif (window.performance && window.performance) {\n\t\t\treturn window.performance.now();\n\t\t}\n\t}\n\tvar originalTime = null;\n\tvar lastRecordedTime = now();\n\n\t/**\n\t * @typedef {utils.performanceTimer} Public API Methods\n\t */\n\treturn {\n\t\t/**\n\t\t * @member {Function} start Kicks off performance timing for overall aXe audit\n\t\t */\n\t\tstart: function() {\n\t\t\tthis.mark('mark_axe_start');\n\t\t},\n\t\t/**\n\t\t * @member {Function} end Concludes performance timing, compares start/end marks\n\t\t */\n\t\tend: function() {\n\t\t\tthis.mark('mark_axe_end');\n\t\t\tthis.measure('axe', 'mark_axe_start', 'mark_axe_end');\n\n\t\t\tthis.logMeasures('axe');\n\t\t},\n\t\t/**\n\t\t * @member {Function} auditStart Starts an audit for a page or frame\n\t\t */\n\t\tauditStart: function() {\n\t\t\tthis.mark('mark_audit_start');\n\t\t},\n\t\t/**\n\t\t * @member {Function} auditEnd Ends an audit for a page or frame, logs measurement of start/end marks\n\t\t */\n\t\tauditEnd: function() {\n\t\t\tthis.mark('mark_audit_end');\n\t\t\tthis.measure('audit_start_to_end', 'mark_audit_start', 'mark_audit_end');\n\t\t\t// log audit/rule measures\n\t\t\tthis.logMeasures();\n\t\t},\n\t\t/**\n\t\t * @member {Function} mark Shims creating a new named time stamp, called a mark\n\t\t * @param {String} markName String name to record how long it took to get there.\n\t\t * A mark that already exists will be overwritten.\n\t\t *\n\t\t */\n\t\tmark: function (markName) {\n\t\t\tif (window.performance && window.performance.mark !== undefined) {\n\t\t\t\twindow.performance.mark(markName);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @member {Function} measure Shims creating a measure to compare two marks, which can be logged\n\t\t * @param {String} measureName String name to log what is being compared.\n\t\t * Measures that already exist will be overwritten with a new time stamp.\n\t\t * @param {String} startMark String name of mark to start measuring\n\t\t * @param {String} endMark String name of mark to end measuring\n\t\t */\n\t\tmeasure: function (measureName, startMark, endMark) {\n\t\t\tif (window.performance && window.performance.measure !== undefined) {\n\t\t\t\twindow.performance.measure(measureName, startMark, endMark);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @member {Function} logMeasures Iterates through measures and logs any that exist\n\t\t */\n\t\tlogMeasures: function(measureName) {\n\t\t\tfunction log(req) {\n\t\t\t\taxe.log('Measure ' + req.name + ' took ' + req.duration + 'ms');\n\t\t\t}\n\t\t\tif (window.performance && window.performance.getEntriesByType !== undefined) {\n\t\t\t\tvar measures = window.performance.getEntriesByType('measure');\n\t\t\t\tfor (var i = 0; i < measures.length; ++i) {\n\t\t\t\t\tvar req = measures[i];\n\t\t\t\t\tif (req.name === measureName) {\n\t\t\t\t\t\tlog(req);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tlog(req);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @member {Function} timeElapsed Records time since last audit\n\t\t * @return {DOMTimeStamp}\n\t\t */\n\t\ttimeElapsed: function () {\n\t\t\treturn now() - lastRecordedTime;\n\t\t},\n\t\t/**\n\t\t * @member {Function} reset Resets the time for a new audit\n\t\t */\n\t\treset: function () {\n\t\t\tif (!originalTime) {\n\t\t\t\toriginalTime = now();\n\t\t\t}\n\t\t\tlastRecordedTime = now();\n\t\t}\n\t};\n})();\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/pollyfills.js":"// jshint ignore: start\n/*\n These pollyfills came directly from the ES Specification it's self\n Contained within:\n  - Object.assign\n  - Array.prototype.find\n*/\nif (typeof Object.assign !== 'function') {\n  (function () {\n    Object.assign = function (target) {\n      'use strict';\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n      return output;\n    };\n  })();\n}\n\nif (!Array.prototype.find) {\n  Array.prototype.find = function(predicate) {\n    if (this === null) {\n      throw new TypeError('Array.prototype.find called on null or undefined');\n    }\n    if (typeof predicate !== 'function') {\n      throw new TypeError('predicate must be a function');\n    }\n    var list = Object(this);\n    var length = list.length >>> 0;\n    var thisArg = arguments[1];\n    var value;\n\n    for (var i = 0; i < length; i++) {\n      value = list[i];\n      if (predicate.call(thisArg, value, i, list)) {\n        return value;\n      }\n    }\n    return undefined;\n  };\n}\n\n\naxe.utils.pollyfillElementsFromPoint = function () {\n  if (document.elementsFromPoint) return document.elementsFromPoint;\n  if (document.msElementsFromPoint) return document.msElementsFromPoint;\n\n  var usePointer = (function () {\n    var element = document.createElement('x');\n    element.style.cssText = 'pointer-events:auto';\n    return element.style.pointerEvents === 'auto';\n  }());\n\n  var cssProp = usePointer ? 'pointer-events' : 'visibility';\n  var cssDisableVal = usePointer ? 'none' : 'hidden';\n\n  var style = document.createElement('style');\n  style.innerHTML = usePointer ?\n    '* { pointer-events: all }' : '* { visibility: visible }';\n\n  return function (x, y) {\n    var current, i, d;\n    var elements = [];\n    var previousPointerEvents = [];\n\n    // startup\n    document.head.appendChild(style);\n\n    while ((current = document.elementFromPoint(x, y)) && elements.indexOf(current) === -1) {\n      // push the element and its current style\n      elements.push(current);\n\n      previousPointerEvents.push({\n        value: current.style.getPropertyValue(cssProp),\n        priority: current.style.getPropertyPriority(cssProp)\n      });\n\n      // add \"pointer-events: none\", to get to the underlying element\n      current.style.setProperty(cssProp, cssDisableVal, 'important');\n    }\n\n    // restore the previous pointer-events values\n    for (i = previousPointerEvents.length; !!(d = previousPointerEvents[--i]);) {\n      elements[i].style.setProperty(cssProp, d.value ? d.value : '', d.priority);\n    }\n\n    // teardown;\n    document.head.removeChild(style);\n\n    return elements;\n  }\n};\n\n\nif (typeof window.addEventListener === 'function') {\n  document.elementsFromPoint = axe.utils.pollyfillElementsFromPoint();\n}\n\n\nif (!Array.prototype.includes) {\n  Array.prototype.includes = function(searchElement /*, fromIndex*/ ) {\n    'use strict';\n    var O = Object(this);\n    var len = parseInt(O.length, 10) || 0;\n    if (len === 0) {\n      return false;\n    }\n    var n = parseInt(arguments[1], 10) || 0;\n    var k;\n    if (n >= 0) {\n      k = n;\n    } else {\n      k = len + n;\n      if (k < 0) {k = 0;}\n    }\n    var currentElement;\n    while (k < len) {\n      currentElement = O[k];\n      if (searchElement === currentElement ||\n         (searchElement !== searchElement && currentElement !== currentElement)) { // NaN !== NaN\n        return true;\n      }\n      k++;\n    }\n    return false;\n  };\n}\n\n// Production steps of ECMA-262, Edition 5, 15.4.4.17\n// Reference: http://es5.github.io/#x15.4.4.17\nif (!Array.prototype.some) {\n  Array.prototype.some = function(fun/*, thisArg*/) {\n    'use strict';\n\n    if (this == null) {\n      throw new TypeError('Array.prototype.some called on null or undefined');\n    }\n\n    if (typeof fun !== 'function') {\n      throw new TypeError();\n    }\n\n    var t = Object(this);\n    var len = t.length >>> 0;\n\n    var thisArg = arguments.length >= 2 ? arguments[1] : void 0;\n    for (var i = 0; i < len; i++) {\n      if (i in t && fun.call(thisArg, t[i], i, t)) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n}\n\nif (!Array.from) {\n  Array.from = (function () {\n    var toStr = Object.prototype.toString;\n    var isCallable = function (fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    var toInteger = function (value) {\n      var number = Number(value);\n      if (isNaN(number)) { return 0; }\n      if (number === 0 || !isFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n    var toLength = function (value) {\n      var len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(arrayLike/*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError(\"Array.from requires an array-like object - not null or undefined\");\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T;\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      var k = 0;\n      // 17. Repeat, while k < len… (also steps a - h)\n      var kValue;\n      while (k < len) {\n        kValue = items[k];\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  }());\n}","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/publish-metadata.js":"\nfunction extender(checksData, shouldBeTrue) {\n\t'use strict';\n\treturn function (check) {\n\t\tvar sourceData = checksData[check.id] || {};\n\t\tvar messages = sourceData.messages || {};\n\t\tvar data = Object.assign({}, sourceData);\n\t\tdelete data.messages;\n\t\tif (check.result === undefined) {\n\t\t\tif (typeof messages.incomplete === 'object') {\n\t\t\t\tvar missingData = check.data.missingData;\n\t\t\t\tmissingData.forEach(function(datum) {\n\t\t\t\t\tvar reason;\n\t\t\t\t\t// Catch errors if incompleteData API isn't called, observed in CI\n\t\t\t\t\ttry {\n\t\t\t\t\t\treason = datum.reason;\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\treason = 'default';\n\t\t\t\t\t}\n\t\t\t\t\t// return a function with the appropriate message\n\t\t\t\t\tdata.message = function(){ return messages.incomplete[reason]; };\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// fall back to string message\n\t\t\t\tdata.message = messages.incomplete;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tdata.message = check.result === shouldBeTrue ? messages.pass : messages.fail;\n\t\t}\n\t\taxe.utils.extendMetaData(check, data);\n\t};\n}\n\n/**\n * Publish metadata from axe._audit.data\n * @param  {RuleResult} result Result to publish to\n * @private\n */\naxe.utils.publishMetaData = function (ruleResult) {\n\t'use strict';\n\n\tvar checksData = axe._audit.data.checks || {};\n\tvar rulesData = axe._audit.data.rules || {};\n\tvar rule = axe.utils.findBy(axe._audit.rules, 'id', ruleResult.id) || {};\n\n\truleResult.tags = axe.utils.clone(rule.tags || []);\n\n\tvar shouldBeTrue = extender(checksData, true);\n\tvar shouldBeFalse = extender(checksData, false);\n\truleResult.nodes.forEach(function (detail) {\n\t\tdetail.any.forEach(shouldBeTrue);\n\t\tdetail.all.forEach(shouldBeTrue);\n\t\tdetail.none.forEach(shouldBeFalse);\n\t});\n\taxe.utils.extendMetaData(ruleResult, axe.utils.clone(rulesData[ruleResult.id] || {}));\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/queue.js":"(function () {\n\t'use strict';\n\tfunction noop() {}\n\tfunction funcGuard(f) {\n\t\tif (typeof f !== 'function') {\n\t\t\tthrow new TypeError('Queue methods require functions as arguments');\n\t\t}\n\t}\n\n\t/**\n\t * Create an asynchronous \"queue\", list of functions to be invoked in parallel, but not necessarily returned in order\n\t * @return {Queue} The newly generated \"queue\"\n\t */\n\tfunction queue() {\n\t\tvar tasks = [];\n\t\tvar started = 0;\n\t\tvar remaining = 0; // number of tasks not yet finished\n\t\tvar completeQueue = noop;\n\t\tvar complete = false;\n\t\tvar err;\n\n\t\t// By default, wait until the next tick,\n\t\t// if no catch was set, throw to console.\n\t\tvar defaultFail = function (e) {\n\t\t\terr = e;\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (err !== undefined && err !== null) {\n\t\t\t\t\taxe.log('Uncaught error (of queue)', err);\n\t\t\t\t}\n\t\t\t}, 1);\n\t\t};\n\t\tvar failed = defaultFail;\n\n\t\tfunction createResolve(i) {\n\t\t\treturn function (r) {\n\t\t\t\ttasks[i] = r;\n\t\t\t\tremaining -= 1;\n\t\t\t\tif (!remaining && completeQueue !== noop) {\n\t\t\t\t\tcomplete = true;\n\t\t\t\t\tcompleteQueue(tasks);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction abort(msg) {\n\t\t\t// reset tasks\n\t\t\tcompleteQueue = noop;\n\n\t\t\t// notify catch\n\t\t\tfailed(msg);\n\t\t\t// return unfinished work\n\t\t\treturn tasks;\n\t\t}\n\n\t\tfunction pop() {\n\t\t\tvar length = tasks.length;\n\t\t\tfor (; started < length; started++) {\n\t\t\t\tvar task = tasks[started];\n\n\t\t\t\ttry {\n\t\t\t\t\ttask.call(null, createResolve(started), abort);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tabort(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tvar q = {\n\t\t\t/**\n\t\t\t * Defer a function that may or may not run asynchronously.\n\t\t\t *\n\t\t\t * First parameter should be the function to execute with subsequent\n\t\t\t * parameters being passed as arguments to that function\n\t\t\t */\n\t\t\tdefer: function (fn) {\n\t\t\t\tif (typeof fn === 'object' && fn.then && fn.catch) {\n\t\t\t\t\tvar defer = fn;\n\t\t\t\t\tfn = function (resolve, reject) {\n\t\t\t\t\t\tdefer.then(resolve).catch(reject);\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tfuncGuard(fn);\n\t\t\t\tif (err !== undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (complete) {\n\t\t\t\t\tthrow new Error('Queue already completed');\n\t\t\t\t}\n\n\t\t\t\ttasks.push(fn);\n\t\t\t\t++remaining;\n\t\t\t\tpop();\n\t\t\t\treturn q;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * The callback to execute once all \"deferred\" functions have completed.  Will only be invoked once.\n\t\t\t * @param  {Function} f The callback, receives an array of the return/callbacked\n\t\t\t * values of each of the \"deferred\" functions\n\t\t\t */\n\t\t\tthen: function (fn) {\n\t\t\t\tfuncGuard(fn);\n\t\t\t\tif (completeQueue !== noop) {\n\t\t\t\t\tthrow new Error('queue `then` already set');\n\t\t\t\t}\n\t\t\t\tif (!err) {\n\t\t\t\t\tcompleteQueue = fn;\n\t\t\t\t\tif (!remaining) {\n\t\t\t\t\t\tcomplete = true;\n\t\t\t\t\t\tcompleteQueue(tasks);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn q;\n\t\t\t},\n\n\t\t\tcatch: function (fn) {\n\t\t\t\tfuncGuard(fn);\n\t\t\t\tif (failed !== defaultFail) {\n\t\t\t\t\tthrow new Error('queue `catch` already set');\n\t\t\t\t}\n\t\t\t\tif (!err) {\n\t\t\t\t\tfailed = fn;\n\t\t\t\t} else {\n\t\t\t\t\tfn(err);\n\t\t\t\t\terr = null;\n\t\t\t\t}\n\t\t\t\treturn q;\n\t\t\t},\n\t\t\t/**\n\t\t\t * Abort the \"queue\" and prevent `then` function from firing\n\t\t\t * @param  {Function} fn The callback to execute; receives an array of the results which have completed\n\t\t\t */\n\t\t\tabort: abort\n\t\t};\n\t\treturn q;\n\t}\n\n\taxe.utils.queue = queue;\n})();\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/respondable.js":"/*global uuid, utils, axe */\n(function (exports) {\n\t'use strict';\n\tvar messages = {},\n\t\tsubscribers = {};\n\n\t/**\n\t * get the unique string to be used to identify our instance of aXe\n\t * @private\n\t */\n\tfunction _getSource() {\n\t\tvar application = 'axe', version = '', src;\n\t\tif (typeof axe !== 'undefined' && axe._audit && !axe._audit.application) {\n\t\t\tapplication = axe._audit.application;\n\t\t}\n\t\tif (typeof axe !== 'undefined') {\n\t\t\tversion = axe.version;\n\t\t}\n\t\tsrc = application + '.' + version;\n\t\treturn src;\n\t}\n\t/**\n\t * Verify the received message is from the \"respondable\" module\n\t * @private\n\t * @param  {Object} postedMessage The message received via postMessage\n\t * @return {Boolean}              `true` if the message is verified from respondable\n\t */\n\tfunction verify(postedMessage) {\n\t\tif (// Check incoming message is valid\n\t\t\ttypeof postedMessage === 'object' &&\n\t\t\ttypeof postedMessage.uuid === 'string' &&\n\t\t\tpostedMessage._respondable === true\n\t\t) {\n\t\t\tvar messageSource = _getSource();\n\t\t\treturn ( // Check the version matches\n\t\t\t\tpostedMessage._source === messageSource ||\n\t\t\t\t// Allow free communication with axe test\n\t\t\t\tpostedMessage._source === 'axe.x.y.z' ||\n\t\t\t\tmessageSource === 'axe.x.y.z'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Posts the message to correct frame.\n\t * This abstraction necessary because IE9 & 10 do not support posting Objects; only strings\n\t * @private\n\t * @param  {Window}   win      The `window` to post the message to\n\t * @param  {String}   topic    The topic of the message\n\t * @param  {Object}   message  The message content\n\t * @param  {String}   uuid     The UUID, or pseudo-unique ID of the message\n\t * @param  {Boolean}  keepalive Whether to allow multiple responses - default is false\n\t * @param  {Function} callback The function to invoke when/if the message is responded to\n\t */\n\tfunction post(win, topic, message, uuid, keepalive, callback) {\n\t\tvar error;\n\t\tif (message instanceof Error) {\n\t\t\terror = {\n\t\t\t\tname: message.name,\n\t\t\t\tmessage: message.message,\n\t\t\t\tstack: message.stack\n\t\t\t};\n\t\t\tmessage = undefined;\n\t\t}\n\n\t\tvar data = {\n\t\t\tuuid: uuid,\n\t\t\ttopic: topic,\n\t\t\tmessage: message,\n\t\t\terror: error,\n\t\t\t_respondable: true,\n\t\t\t_source: _getSource(),\n\t\t\t_keepalive: keepalive\n\t\t};\n\n\t\tif (typeof callback === 'function') {\n\t\t\tmessages[uuid] = callback;\n\t\t}\n\n\t\twin.postMessage(JSON.stringify(data), '*');\n\t}\n\n\t/**\n\t * Post a message to a window who may or may not respond to it.\n\t * @param  {Window}   win      The window to post the message to\n\t * @param  {String}   topic    The topic of the message\n\t * @param  {Object}   message  The message content\n\t * @param  {Boolean}  keepalive Whether to allow multiple responses - default is false\n\t * @param  {Function} callback The function to invoke when/if the message is responded to\n\t */\n\tfunction respondable(win, topic, message, keepalive, callback) {\n\t\tvar id = uuid.v1();\n\t\tpost(win, topic, message, id, keepalive, callback);\n\t}\n\n\t/**\n\t * Subscribe to messages sent via the `respondable` module.\n\t *\n\t * Axe._load uses this to listen for messages from other frames\n\t *\n\t * @param  {String}   topic    The topic to listen to\n\t * @param  {Function} callback The function to invoke when a message is received\n\t */\n\trespondable.subscribe = function (topic, callback) {\n\t\tsubscribers[topic] = callback;\n\t};\n\n\n\t/**\n\t * checks if the current context is inside a frame\n\t * @return {Boolean}\n\t */\n\trespondable.isInFrame = function (win) {\n\t\twin = win || window;\n\t\treturn !!win.frameElement;\n\t};\n\n\t/**\n\t * Helper closure to create a function that may be used to respond to a message\n\t * @private\n\t * @param  {Window} source The window from which the message originated\n\t * @param  {String} topic  The topic of the message\n\t * @param  {String} uuid   The \"unique\" ID of the original message\n\t * @return {Function}      A function that may be invoked to respond to the message\n\t */\n\tfunction createResponder(source, topic, uuid) {\n\t\treturn function (message, keepalive, callback) {\n\t\t\tpost(source, topic, message, uuid, keepalive, callback);\n\t\t};\n\t}\n\n\t/**\n\t * Publishes the \"respondable\" message to the appropriate subscriber\n\t * @private\n\t * @param  {Event} event The event object of the postMessage\n\t * @param  {Object} data  The data sent with the message\n\t * @param  {Boolean}  keepalive Whether to allow multiple responses - default is false\n\t */\n\tfunction publish(target, data, keepalive) {\n\t\tvar topic = data.topic;\n\t\tvar subscriber = subscribers[topic];\n\n\t\tif (subscriber) {\n\t\t\tvar responder = createResponder(target, null, data.uuid);\n\t\t\tsubscriber(data.message, keepalive, responder);\n\t\t}\n\t}\n\n\t/**\n\t * Convert a javascript Error into something that can be stringified\n\t * @param  {Error} error  Any type of error\n\t * @return {Object}       Processable object\n\t */\n\tfunction buildErrorObject(error) {\n\t\tvar msg = error.message || 'Unknown error occurred';\n\t\tvar ErrConstructor = window[error.name] || Error;\n\n\t\tif (error.stack) {\n\t\t\tmsg += '\\n' + error.stack.replace(error.message, '');\n\t\t}\n\t\treturn new ErrConstructor(msg);\n\t}\n\n\t/**\n\t * Parse the received message for processing\n\t * @param  {string} dataString Message received\n\t * @return {object}            Object to be used for pub/sub\n\t */\n\tfunction parseMessage(dataString) {\n\t\tvar data;\n\t\tif (typeof dataString !== 'string') {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tdata = JSON.parse(dataString);\n\t\t} catch(ex) {}\n\n\t\tif (!verify(data)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof data.error === 'object') {\n\t\t\tdata.error = buildErrorObject(data.error);\n\t\t} else {\n\t\t\tdata.error = undefined;\n\t\t}\n\t\treturn data;\n\t}\n\n\tif ( typeof window.addEventListener === 'function') {\n\t\twindow.addEventListener('message', function (e) {\n\t\t\t// jshint maxstatements: 20\n\t\t\tvar data = parseMessage(e.data);\n\t\t\tif (!data) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar uuid = data.uuid;\n\n\t\t\tvar keepalive = data._keepalive;\n\t\t\tvar callback = messages[uuid];\n\n\t\t\tif (callback) {\n\t\t\t\tvar result = data.error || data.message;\n\t\t\t\tvar responder = createResponder(e.source, data.topic, uuid);\n\t\t\t\tcallback(result, keepalive, responder);\n\n\t\t\t\tif (!keepalive) {\n\t\t\t\t\tdelete messages[uuid];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!data.error) {\n\t\t\t\ttry {\n\t\t\t\t\tpublish(e.source, data, keepalive);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tpost(e.source, data.topic, err, uuid, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}, false);\n\t}\n\n\texports.respondable = respondable;\n\n}(utils));\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/rule-should-run.js":"/**\n * Check if a rule matches the value of runOnly type=tag\n * @private\n * @param  {object} rule\n * @param  {object}\trunOnly Value of runOnly with type=tags\n * @return {bool}\n */\nfunction matchTags(rule, runOnly) {\n\t// jshint maxcomplexity: 11\n\t'use strict';\n\tvar include, exclude, matching;\n\tvar defaultExclude = (axe._audit && axe._audit.tagExclude) ? axe._audit.tagExclude : [];\n\n\t// normalize include/exclude\n\tif (runOnly.include || runOnly.exclude) {\n\t\t// Wrap include and exclude if it's not already an array\n\t\tinclude = runOnly.include || [];\n\t\tinclude = Array.isArray(include) ? include : [include];\n\n\t\texclude = runOnly.exclude || [];\n\t\texclude = Array.isArray(exclude) ? exclude : [exclude];\n\t\t// add defaults, unless mentioned in include\n\t\texclude = exclude.concat(defaultExclude.filter(function (tag) {\n\t\t\treturn include.indexOf(tag) === -1;\n\t\t}));\n\n\t// Otherwise, only use the include value, ignore exclude\n\t} else {\n\t\tinclude = Array.isArray(runOnly) ? runOnly : [runOnly];\n\t\t// exclude the defaults not included\n\t\texclude = defaultExclude.filter(function (tag) {\n\t\t\treturn include.indexOf(tag) === -1;\n\t\t});\n\t}\n\n\tmatching = include.some(function (tag) {\n\t\treturn rule.tags.indexOf(tag) !== -1;\n\t});\n\tif (matching || (include.length === 0 && rule.enabled !== false)) {\n\t\treturn exclude.every(function (tag) {\n\t\t\treturn rule.tags.indexOf(tag) === -1;\n\t\t});\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\n/**\n * Determines whether a rule should run\n * @param  {Rule}    rule     The rule to test\n * @param  {Context} context  The context of the Audit\n * @param  {Object}  options  Options object\n * @return {Boolean}\n */\naxe.utils.ruleShouldRun = function (rule, context, options) {\n\t'use strict';\n\tvar runOnly = options.runOnly || {};\n\tvar ruleOptions = (options.rules || {})[rule.id];\n\n\t// Never run page level rules if the context is not on the page\n\tif (rule.pageLevel && !context.page) {\n\t\treturn false;\n\n\t// First, runOnly type rule overrides anything else\n\t} else if (runOnly.type === 'rule') {\n\t\treturn runOnly.values.indexOf(rule.id) !== -1;\n\n\t// Second, if options.rules[rule].enabled is set, it overrides all\n\t} else if (ruleOptions && typeof ruleOptions.enabled === 'boolean') {\n\t\treturn ruleOptions.enabled;\n\n\t// Third, if tags are set, look at those\n\t} else if(runOnly.type === 'tag' && runOnly.values) {\n\t\treturn matchTags(rule, runOnly.values);\n\n\t// If nothing is set, only check for default excludes\n\t} else {\n\t\treturn matchTags(rule, []);\n\t}\n\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/select.js":"/**\n * Get the deepest node in a given collection\n * @private\n * @param  {Array} collection Array of nodes to test\n * @return {Node}             The deepest node\n */\nfunction getDeepest(collection) {\n\t'use strict';\n\n\treturn collection.sort(function (a, b) {\n\t\tif (axe.utils.contains(a, b)) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn -1;\n\t})[0];\n\n}\n\n/**\n * Determines if a node is included or excluded in a given context\n * @private\n * @param  {Node}  node     The node to test\n * @param  {Object}  context \"Resolved\" context object, @see resolveContext\n * @return {Boolean}         [description]\n */\nfunction isNodeInContext(node, context) {\n\t'use strict';\n\n\tvar include = context.include && getDeepest(context.include.filter(function (candidate) {\n\t\treturn axe.utils.contains(candidate, node);\n\t}));\n\tvar exclude = context.exclude && getDeepest(context.exclude.filter(function (candidate) {\n\t\treturn axe.utils.contains(candidate, node);\n\t}));\n\tif ((!exclude && include) || (exclude && axe.utils.contains(exclude, include))) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Pushes unique nodes that are in context to an array\n * @private\n * @param  {Array} result  The array to push to\n * @param  {Array} nodes   The list of nodes to push\n * @param  {Object} context The \"resolved\" context object, @see resolveContext\n */\nfunction pushNode(result, nodes, context) {\n\t'use strict';\n\n\tfor (var i = 0, l = nodes.length; i < l; i++) {\n\t\tif (result.indexOf(nodes[i]) === -1 && isNodeInContext(nodes[i], context)) {\n\t\t\tresult.push(nodes[i]);\n\t\t}\n\t}\n}\n\n/**\n * Selects elements which match `select` that are included and excluded via the `Context` object\n * @param  {String} selector  CSS selector of the HTMLElements to select\n * @param  {Context} context  The \"resolved\" context object, @see Context\n * @return {Array}            Matching nodes sorted by DOM order\n */\naxe.utils.select = function select(selector, context) {\n\t'use strict';\n\n\tvar result = [], candidate;\n\tfor (var i = 0, l = context.include.length; i < l; i++) {\n\t\tcandidate = context.include[i];\n\t\tif (candidate.nodeType === candidate.ELEMENT_NODE && axe.utils.matchesSelector(candidate, selector)) {\n\t\t\tpushNode(result, [candidate], context);\n\t\t}\n\t\tpushNode(result, candidate.querySelectorAll(selector), context);\n\t}\n\n\treturn result.sort(axe.utils.nodeSorter);\n};\n","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/to-array.js":"\n/**\n * Converts array-like (numerical indicies and `length` property) structures to actual, real arrays\n * @param  {Mixed} thing Array-like thing to convert\n * @return {Array}\n */\naxe.utils.toArray = function (thing) {\n\t'use strict';\n\treturn Array.prototype.slice.call(thing);\n};","/home/travis/build/npmtest/node-npmtest-axe-core/node_modules/axe-core/lib/core/utils/uuid.js":"/*jshint bitwise: false, eqeqeq: false, curly: false, strict: false, eqnull: true,\nmaxstatements: false, maxcomplexity: false */\n//     uuid.js\n//\n//     Copyright (c) 2010-2012 Robert Kieffer\n//     MIT License - http://opensource.org/licenses/mit-license.php\nvar uuid;\n(function(_global) {\n\n  // Unique ID creation requires a high quality random # generator.  We feature\n  // detect to determine the best RNG source, normalizing to a function that\n  // returns 128-bits of randomness, since that's what's usually required\n  var _rng;\n\n  // Allow for MSIE11 msCrypto\n  var _crypto = _global.crypto || _global.msCrypto;\n\n  if (!_rng && _crypto && _crypto.getRandomValues) {\n    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto\n    //\n    // Moderately fast, high quality\n    var _rnds8 = new Uint8Array(16);\n    _rng = function whatwgRNG() {\n      _crypto.getRandomValues(_rnds8);\n      return _rnds8;\n    };\n  }\n\n  if (!_rng) {\n    // Math.random()-based (RNG)\n    //\n    // If all else fails, use Math.random().  It's fast, but is of unspecified\n    // quality.\n    var  _rnds = new Array(16);\n    _rng = function() {\n      for (var i = 0, r; i < 16; i++) {\n        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n      }\n\n      return _rnds;\n    };\n  }\n\n  // Buffer class to use\n  var BufferClass = typeof(_global.Buffer) == 'function' ? _global.Buffer : Array;\n\n  // Maps for number <-> hex string conversion\n  var _byteToHex = [];\n  var _hexToByte = {};\n  for (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n    _hexToByte[_byteToHex[i]] = i;\n  }\n\n  // **`parse()` - Parse a UUID into it's component bytes**\n  function parse(s, buf, offset) {\n    var i = (buf && offset) || 0, ii = 0;\n\n    buf = buf || [];\n    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {\n      if (ii < 16) { // Don't overflow!\n        buf[i + ii++] = _hexToByte[oct];\n      }\n    });\n\n    // Zero out remaining bytes if string was short\n    while (ii < 16) {\n      buf[i + ii++] = 0;\n    }\n\n    return buf;\n  }\n\n  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**\n  function unparse(buf, offset) {\n    var i = offset || 0, bth = _byteToHex;\n    return  bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] + '-' +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]] +\n            bth[buf[i++]] + bth[buf[i++]];\n  }\n\n  // **`v1()` - Generate time-based UUID**\n  //\n  // Inspired by https://github.com/LiosK/UUID.js\n  // and http://docs.python.org/library/uuid.html\n\n  // random #'s we need to init node and clockseq\n  var _seedBytes = _rng();\n\n  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n  var _nodeId = [\n    _seedBytes[0] | 0x01,\n    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n  ];\n\n  // Per 4.2.2, randomize (14 bit) clockseq\n  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n  // Previous uuid creation time\n  var _lastMSecs = 0, _lastNSecs = 0;\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v1(options, buf, offset) {\n    var i = buf && offset || 0;\n    var b = buf || [];\n\n    options = options || {};\n\n    var clockseq = options.clockseq != null ? options.clockseq : _clockseq;\n\n    // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n    var msecs = options.msecs != null ? options.msecs : new Date().getTime();\n\n    // Per 4.2.1.2, use count of uuid's generated during the current clock\n    // cycle to simulate higher resolution clock\n    var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;\n\n    // Time since last uuid creation (in msecs)\n    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n    // Per 4.2.1.2, Bump clockseq on clock regression\n    if (dt < 0 && options.clockseq == null) {\n      clockseq = clockseq + 1 & 0x3fff;\n    }\n\n    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n    // time interval\n    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {\n      nsecs = 0;\n    }\n\n    // Per 4.2.1.2 Throw error if too many uuids are requested\n    if (nsecs >= 10000) {\n      throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n    }\n\n    _lastMSecs = msecs;\n    _lastNSecs = nsecs;\n    _clockseq = clockseq;\n\n    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n    msecs += 12219292800000;\n\n    // `time_low`\n    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n    b[i++] = tl >>> 24 & 0xff;\n    b[i++] = tl >>> 16 & 0xff;\n    b[i++] = tl >>> 8 & 0xff;\n    b[i++] = tl & 0xff;\n\n    // `time_mid`\n    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n    b[i++] = tmh >>> 8 & 0xff;\n    b[i++] = tmh & 0xff;\n\n    // `time_high_and_version`\n    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n    b[i++] = tmh >>> 16 & 0xff;\n\n    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n    b[i++] = clockseq >>> 8 | 0x80;\n\n    // `clock_seq_low`\n    b[i++] = clockseq & 0xff;\n\n    // `node`\n    var node = options.node || _nodeId;\n    for (var n = 0; n < 6; n++) {\n      b[i + n] = node[n];\n    }\n\n    return buf ? buf : unparse(b);\n  }\n\n  // **`v4()` - Generate random UUID**\n\n  // See https://github.com/broofa/node-uuid for API details\n  function v4(options, buf, offset) {\n    // Deprecated - 'format' argument, as supported in v1.2\n    var i = buf && offset || 0;\n\n    if (typeof(options) == 'string') {\n      buf = options == 'binary' ? new BufferClass(16) : null;\n      options = null;\n    }\n    options = options || {};\n\n    var rnds = options.random || (options.rng || _rng)();\n\n    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n    rnds[6] = (rnds[6] & 0x0f) | 0x40;\n    rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n    // Copy bytes to buffer, if provided\n    if (buf) {\n      for (var ii = 0; ii < 16; ii++) {\n        buf[i + ii] = rnds[ii];\n      }\n    }\n\n    return buf || unparse(rnds);\n  }\n\n  // Export public API\n  uuid = v4;\n  uuid.v1 = v1;\n  uuid.v4 = v4;\n  uuid.parse = parse;\n  uuid.unparse = unparse;\n  uuid.BufferClass = BufferClass;\n\n}(window));\n"}